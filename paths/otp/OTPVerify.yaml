post:
  tags:
    - One Time Password
  summary: Verify a one-time password
  description: |
    Action method verify one time password. Resource provides a mechanism OTP for the verification using a unique password that can only be used once.
  operationId: postVerifyOtp
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            verification_code:
              type: string
              description: Verification code from email, SMS or notification provided by recipient.
              example: 7256
            request_id:
              type: string
              description: The parameter specifies the request that caused the OTP to be created. Request ID was created in the action method [/one-time-password/actions/send](#operation/postSendOtp).
              example: 106c5ce60ed0830ffb813135bfff7cad9f4c3e47
            external_application_id:
              type: string
              description: ID of the external application that requested one time password. If you dont have external application id, guide how to get it is available [here](#section/Authentication).
              example: 82de12eb8b138791e678fd11c3
          required:
            - verification_code
            - request_id
            - external_application_id
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  is_valid:
                    type: boolean
                    description: Result of the OTP verification.
                    example: true
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\Model\ActionsVerifyBody;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

        require_once '../vendor/autoload.php';

        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        $body = new ActionsVerifyBody();
        $body->setVerificationCode('7R29') // string | Verification code from email, SMS or notification provided by recipient
        ->setRequestId('b223286fbc1de2db689d443be35b1f6078f059d3') // string | The parameter specifies the request that caused the OTP to be created
        ->setExternalApplicationId($external_app_id); // string | ID of the external application that requested one time password

        // Call endpoint and post data
        try
        {
            $post_verify_otp = $care_cloud->oneTimePasswordApi()->postVerifyOtp($body, $accept_language);
            $is_valid = $post_verify_otp->getData()->getIsValid();
            var_dump($is_valid);
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }
