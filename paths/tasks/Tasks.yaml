get:
  tags:
    - Tasks
  summary: Get all tasks
  description: Get information as a list of all tasks.
  operationId: getTasks
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
    - $ref: '../../parameters/_index.yaml#/count'
    - $ref: '../../parameters/_index.yaml#/offset'
    - $ref: '../../parameters/_index.yaml#/sort_field'
    - $ref: '../../parameters/_index.yaml#/sort_direction'
    - $ref: '../../parameters/_index.yaml#/task_type_id'
    - $ref: '../../parameters/_index.yaml#/task_state_id'
    - $ref: '../../parameters/_index.yaml#/customer_id'
    - $ref: '../../parameters/_index.yaml#/task_priority'
    - $ref: '../../parameters/_index.yaml#/task_due_date'
    - $ref: '../../parameters/_index.yaml#/task_title'
    - $ref: '../../parameters/_index.yaml#/task_note'
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            title: GetTasks200Response
            type: object
            properties:
              data:
                type: object
                properties:
                  tasks:
                    type: array
                    description: List of all tasks.
                    items:
                      $ref: '../../schemas/_index.yaml#/Task'
                  total_items:
                    type: integer
                    description: The number of all found tasks.
                    example: 1
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

        require_once '../vendor/autoload.php';
        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set query parameters
        $count = 10; // integer >= 1 | The number of records to return (optional, default is 100)
        $offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)
        $sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)
        $sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)
        $task_type_id = null; // string | Task type ID from the resource task-types. The parameter filters tasks by their type (optional)
        $task_state_id = null; // string | Task state ID from the resource task-states. The parameter filters tasks by their state (optional)
        $customer_id = null; // string | The unique ID of the customer (optional)
        $priority = 3; // integer | The parameter filters tasks by their priority. Possible values are: 1 - Critical / 2 - Major / 3 - Normal / 4 - Minor (optional)
        $due_date = null; // string | Date (ISO 8601) when the task due (YYYY-MM-DD) (optional)
        $task_title = null; // string | Search record by the task summary or a part of the task summary (optional)
        $task_note = null; // string | Search record by the task note or a part of the task note (optional)

        // Call endpoint and get data
        try
        {
            $get_tasks = $care_cloud->tasksApi()->getTasks(
                $accept_language,
                $count,
                $offset,
                $sort_field,
                $sort_direction,
                $task_type_id,
                $task_state_id,
                $customer_id,
                $priority,
                $due_date,
                $task_title,
                $task_note
            );
            $tasks = $get_tasks->getData()->getTasks();
            $total_items = $get_tasks->getData()->getTotalItems();
            var_dump($tasks);
            var_dump($total_items);
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }
post:
  tags:
    - Tasks
  summary: Create a task
  description: Add a new task
  operationId: postTasks
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            task:
              $ref: '../../schemas/_index.yaml#/Task'
            property_records:
              type: array
              description: List of a task property records
              items:
                $ref: '../../schemas/_index.yaml#/PropertyRecord'
            assignees:
              type: array
              description: List of a task assignees
              items:
                $ref: '../../schemas/_index.yaml#/TaskAssignee'
          required:
            - task
  responses:
    '201':
      description: Created
      content:
        application/json:
          schema:
            title: PostTasks201Response
            type: object
            properties:
              data:
                type: object
                properties:
                  task_id:
                    type: string
                    description: The unique ID of the task in CareCloud
                    example: "86e05affc7a7abefcd513ab400"
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\Model\Task;
        use CrmCareCloud\Webservice\RestApi\Client\Model\TasksBody;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

        require_once 'vendor/autoload.php';

        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set the task info
        $task = new Task();
        $task->setTaskTypeId('8bed991c68a470e7aaeffbf048') // string | The unique ID of the task type
        ->setTaskStateId('86e05affc7a7abefcd513ab400') // string | The unique ID of the task state
        ->setCustomerId('85aae99524edceec17682e01b9') // string | The unique ID of the customer
        ->setTaskNote(null) // string | Text note of the task (optional)
        ->setTaskTitle('Test task n.1') // string | Title of the task
        ->setTaskPriority(3) // integer | The parameter filters tasks by their priority. Possible values are: 1 - Critical / 2 - Major / 3 - Normal / 4 - Minor.
        ->setDueDate(null); // string | Due date of the task (YYYY-MM-DD) (optional)

        // Set the request body
        $body = new TasksBody();
        $body->setTask($task);
        $body->setAssignees(null); // array of objects | List of an task assignees (optional)
        $body->setPropertyRecords(null); // array of objects | List of an task property records (optional)

        // Call endpoint and post data
        try
        {
            $post_task = $care_cloud->tasksApi()->postTasks($body, $accept_language);
            $task_id = $post_task->getData()->getTaskId();
            var_dump($task_id);
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }