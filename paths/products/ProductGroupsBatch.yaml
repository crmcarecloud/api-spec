post:
  tags:
    - Product groups
  summary: Create a batch of product groups. If a group already exists, an update is applied.
  description: >
    Batch process helps to add multiple product groups in one request.<br/>
    ⚠️ Endpoint is available only in the Enterprise interface.<br/>
  operationId: postBulkProductGroups
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            product_groups:
              type: array
              description: List of the CareCloud product groups.
              items:
                $ref: '../../schemas/_index.yaml#/ProductGroup'
          required:
            - product_groups
  responses:
    '204':
      description: No Content
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\Model\ProductGroup;
        use CrmCareCloud\Webservice\RestApi\Client\Model\ProductgroupsBatchBody;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

        require_once '../vendor/autoload.php';

        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set product group info
        $product_group = new ProductGroup();
        $product_group->setName('Test group'); // string | Name of the product group
        $product_group->setExternalId('12'); // string | The external unique id of the product group
        $product_group->setParentProductGroupId(null); // string | The unique ID for the parent product group (optional)
        $product_group->setParentExternalId(null); // string | The unique external id for the parent product group (optional)
        $product_group->setCode(null); // string | The code of the product group (optional)
        $product_group->setStoreId(null); // string | The unique ID for the store where the product group is valid (optional)

        // Set the request body
        $body = new ProductgroupsBatchBody();
        $body->setProductGroups(array($product_group));

        // Call endpoint and post data
        try
        {
            $care_cloud->productGroupsApi()->postBulkProductGroups($body, $accept_language);
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }
