post:
  tags:
    - Customers
  summary: Create a new customer
  description: Add a new customer account in CRM CareCloud
  operationId: postCustomer
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            customer:
              $ref: '../../schemas/_index.yaml#/Customer'
            customer_source:
              $ref: '../../schemas/_index.yaml#/CustomerSourceRecord'
            password:
              type: string
              format: password
              description: 'Password of the customer. Password must satisfy the following criteria and contain: At least one number (Example: 1 2 3); At least one uppercase letter (Example: A B C); Minimum lenght of password is 8 characters; Password is not part of a common password list (Example: abc123, password, 12345)'
              example: password_example
            autologin:
              type: boolean
              description: If true, password is required and customer is logged in. Otherwise password is optional
            social_network_credentials:
              $ref: '../../schemas/_index.yaml#/SocialNetworkCredentials'
          required:
            - customer
            - customer_source
            - autologin
  responses:
    '201':
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  customer_id:
                    type: string
                    description: The unique id of the customer
                    example: 8ea6abece4cd0a4ded0a29f093
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CareCloud\ApiException;
        use CareCloud\Model\Address;
        use CareCloud\Model\Agreement;
        use CareCloud\Model\CustomAgreements;
        use CareCloud\Model\Customer;
        use CareCloud\Model\CustomersCustomerIdBody;
        use CareCloud\Model\PersonalInformation;
        use CareCloud\Model\SocialNetworkCredentials;
        use CareCloud\SDK\Config;
        use CareCloud\SDK\CareCloud;

        require_once '../vendor/autoload.php';
        require_once 'config.php';

        $config = new Config($projectUri, $login, $password, $externalAppId, $authType);
        $careCloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'cs'; //	string | The unique id of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set address of new customer
        $address = new Address();
        $address->setAddress1('Old Town Square') // string | Street name of the address
                ->setAddress2('34') // string | Street number (Land registry number)
                ->setAddress3('12') // string | House number
                ->setZip('11000') // string | ZIP code
                ->setCity('Prague 1') // string | City
                ->setCountryCode('cz'); // string | ISO code of the country Possible values de / gb / us / it / cz / etc.

        // Set custom agreements of new customer
        $custom_agreement1 = new CustomAgreements();
        $custom_agreement1->setAgreementId('89ce2a1b9b01f5c939fb1e20cd') // string | The unique id of the agreement in CareCloud
                          ->setAgreementValue(1); // integer | Value of the specific agreement Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set
        $custom_agreement2 = new CustomAgreements();
        $custom_agreement2->setAgreementId('8fd73167342d06899c4c015320') // string | The unique id of the agreement in CareCloud
                          ->setAgreementValue(1); // integer | Value of the specific agreement Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set

        $custom_agreements = [
            $custom_agreement1,
            $custom_agreement2
        ];

        // Set agreement of new customer
        $agreement = new Agreement();
        $agreement->setAgreementGtc(1) // integer | Consent to General Terms & Conditions Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set
                  ->setAgreementProfiling(1) // integer | Consent to profiling Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set
                  ->setAgreementMarketingCommunication(0) // integer | Consent to marketing communication Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set
                  ->setCustomAgreements($custom_agreements);

        // Set personal information of new customer
        $personal_information = new PersonalInformation();
        $personal_information->setGender(1) // integer | Gender of the customer Possible values: 1 - male, 2 - female
                             ->setFirstName('John') // string | First name of the customer
                             ->setLastName('Smith') // string | Last name of the customer
                             ->setBirthdate('1985-02-12') // string <date> | Customer's date of birth (YYYY-MM-DD)
                             ->setEmail('happy_customer@crmcarecloud.com') // string | Email of the customer
                             ->setPhone('420523828931') // string | Phone number of the customer with international prefix (420000000000)
                             ->setLanguageId('cs') // string | The unique id for the language by ISO 639 code
                             ->setStoreId('8bed991c68a4') // string | The unique id for the original customer account store of registration
                             ->setPhotoUrl(null) // string | URL address of the customer photo. If customer has no photo, this parameter is not send
                             ->setAddress($address)
                             ->setAgreement($agreement);

        $customer = new Customer();
        $customer->setPersonalInformation($personal_information);

        // Set source record of new customer from object (CustomerSourceRecord)
        $customer_source = new CustomerSourceRecord();
        $customer_source->setCustomerSourceId('8fd73167342d06899c4c015320') // string | The unique id of the customer source. It identifies the system where the customer belongs or the customer account was created
                        ->setExternalId('external-id'); // string | The unique external id of the customer. It may be id from the other system

        // Set customer Social network credentials
        $social_network_credentials = new SocialNetworkCredentials();
        $social_network_credentials->setSocialNetworkId('twitter') // string | The unique id of the social network
                                   ->setSocialNetworkToken('38e123j1jedu12d1jnjqwd'); // string | Social network customer's token

        // Set basic information about new customer
        $body = new CustomersBody();
        $body->setCustomer($customer)
             ->setCustomerSource($customer_source)
             ->setPassword('fO7mrC7spZjr') // string | Password of the customer.
             ->setAutologin(false) // boolean | If true, password is required and customer is logged in. Otherwise password is optional
             ->setSocialNetworkCredentials($social_network_credentials);

        // Call endpoint and get data
        try {
            $newCustomer = $careCloud->customersApi()->postCustomer( $body, $accept_language );;
        } catch (ApiException $e) {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }
    - lang: PHP
      label: CareCloud Client
      source: |
        require_once(__DIR__ . '/vendor/autoload.php');
        // Configure HTTP basic authorization: basicAuth
        $config = CareCloud\Configuration::getDefaultConfiguration()
                      ->setUsername('YOUR_USERNAME')
                      ->setPassword('YOUR_PASSWORD');
            // Configure HTTP bearer authorization: bearerAuth
            $config = CareCloud\Configuration::getDefaultConfiguration()
            ->setAccessToken('YOUR_ACCESS_TOKEN');


        $apiInstance = new CareCloud\Api\CustomersApi(
            // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
            // This is optional, `GuzzleHttp\Client` will be used as default.
            new GuzzleHttp\Client(),
            $config
        );
        $body = new \CareCloud\Model\CustomersBody(); // \CareCloud\Model\CustomersBody |
        $accept_language = "cs, en-gb;q=0.8"; // string | The unique id of the language code by ISO 639-1

        try {
            $result = $apiInstance->postCustomer($body, $accept_language);
            print_r($result);
        } catch (Exception $e) {
            echo 'Exception when calling CustomersApi->postCustomer: ', $e->getMessage(), PHP_EOL;
        }

get:
  tags:
    - Customers
  summary: Get all customers
  description: Get a list of all customers
  operationId: getCustomers
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
    - $ref: '../../parameters/_index.yaml#/count'
    - $ref: '../../parameters/_index.yaml#/offset'
    - $ref: '../../parameters/_index.yaml#/sort_field'
    - $ref: '../../parameters/_index.yaml#/sort_direction'
    - $ref: '../../parameters/_index.yaml#/email'
    - $ref: '../../parameters/_index.yaml#/phone'
    - $ref: '../../parameters/_index.yaml#/customer_source_id'
    - $ref: '../../parameters/_index.yaml#/first_name'
    - $ref: '../../parameters/_index.yaml#/last_name'
    - $ref: '../../parameters/_index.yaml#/birthdate'
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  customers:
                    type: array
                    description: Array of customers
                    items:
                      $ref: '../../schemas/_index.yaml#/Customer'
                  total_items:
                    type: integer
                    description: Count of all found customers
                    example: 1
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CareCloud\ApiException;
        use CareCloud\SDK\Config;
        use CareCloud\SDK\CareCloud;

        require_once '../vendor/autoload.php';
        require_once 'config.php';

        $config = new Config($projectUri, $login, $password, $externalAppId, $authType);
        $careCloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'cs'; //	string | The unique id of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set query parameters
        $count               = 100; // integer >= 1 | The number of records to return.
        $offset              = 0; // integer | The number of records from a collection to skip.
        $sort_field          = 'last_change'; // string | One of the query string parameters for sorting. Response is sorted by the specified field.
        $sort_direction      = 'DESC'; // string | Direction of sorting the response list.
        $email               = 'happy_customer@crmcarecloud.com'; // string | Search by email
        $phone               = '420523828931'; // string | Phone number with international prefix (420000000)
        $customer_source_id  = null; // string | The unique id of the customer source. It identifies the system where the customer belongs or the customer account was created
        $first_name          = 'John'; // string | Search by first name
        $last_name           = 'Smith'; // string | Search by last name
        $birthdate           = '1985-02-12'; // string | Customer's date of birth. Possible values are: YYYY-MM-DD / DD.MM.YYYY

        // Call endpoint and get data
        try {
            $getCustomers  = $careCloud->customersApi()->getCustomers($accept_language, $count, $offset, $sort_field, $sort_direction, $email, $phone, $customer_source_id, $first_name, $last_name, $birthdate);
            $customers     = $getCustomers->getData()->getCustomers();
            $totalItems    = $getCustomers->getData()->getTotalItems();
        } catch (ApiException $e) {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }
    - lang: PHP
      label: CareCloud Client
      source: |
        require_once(__DIR__ . '/vendor/autoload.php');
        // Configure HTTP basic authorization: basicAuth
        $config = CareCloud\Configuration::getDefaultConfiguration()
                      ->setUsername('YOUR_USERNAME')
                      ->setPassword('YOUR_PASSWORD');
            // Configure HTTP bearer authorization: bearerAuth
            $config = CareCloud\Configuration::getDefaultConfiguration()
            ->setAccessToken('YOUR_ACCESS_TOKEN');


        $apiInstance = new CareCloud\Api\CustomersApi(
            // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
            // This is optional, `GuzzleHttp\Client` will be used as default.
            new GuzzleHttp\Client(),
            $config
        );
        $accept_language = "cs, en-gb;q=0.8"; // string | The unique id of the language code by ISO 639-1
        $count = 100; // int | The number of records to return.
        $offset = 0; // int | The number of records from a collection to skip.
        $sort_field = "sort_field_example"; // string | One of the query string parameters for sorting. *Response is sorted by the specified field.*
        $sort_direction = "sort_direction_example"; // string | Direction of sorting the response list.
        $email = "email_example"; // string | Search by email
        $phone = "phone_example"; // string | Phone number with international prefix (420000000)
        $customer_source_id = "customer_source_id_example"; // string | The unique id of the customer source. It identifies the system where the customer belongs or the customer account was created
        $first_name = "first_name_example"; // string | Search by first name
        $last_name = "last_name_example"; // string | Search by last name
        $birthdate = "birthdate_example"; // string | Customer's date of birth. *Possible values are: YYYY-MM-DD / DD.MM.YYYY*

        try {
            $result = $apiInstance->getCustomers($accept_language, $count, $offset, $sort_field, $sort_direction, $email, $phone, $customer_source_id, $first_name, $last_name, $birthdate);
            print_r($result);
        } catch (Exception $e) {
            echo 'Exception when calling CustomersApi->getCustomers: ', $e->getMessage(), PHP_EOL;
        }
