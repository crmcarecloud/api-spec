post:
  tags:
    - Customers
  summary: Create a new customer
  description: Add a new customer account in CRM CareCloud.
  operationId: postCustomer
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            customer:
              $ref: '../../schemas/_index.yaml#/Customer'
            customer_source:
              $ref: '../../schemas/_index.yaml#/CustomerSourceRecord'
            password:
              type: string
              format: password
              description: 'Password of the customer. Password must satisfy the following criteria and contain: At least one number (Example: 1 2 3); At least one uppercase letter (Example: A B C); Minimum lenght of password is 8 characters; Password is not part of a common password list (Example: abc123, password, 12345). If parameter `autologin=true`, password is required, otherwise is optional.'
              example: password_example
            autologin:
              type: boolean
              description: If true, password is required and customer is logged in. Otherwise password is optional.
            social_network_credentials:
              $ref: '../../schemas/_index.yaml#/SocialNetworkCredentials'
            property_records:
              type: array
              description: List of an customer property records.
              items:
                $ref: '../../schemas/_index.yaml#/PropertyRecord'
          required:
            - customer
            - customer_source
            - autologin
  responses:
    '201':
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  customer_id:
                    type: string
                    description: The unique ID of the customer.
                    example: 8ea6abece4cd0a4ded0a29f093
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\Model\Address;
        use CrmCareCloud\Webservice\RestApi\Client\Model\Agreement;
        use CrmCareCloud\Webservice\RestApi\Client\Model\CustomAgreements;
        use CrmCareCloud\Webservice\RestApi\Client\Model\Customer;
        use CrmCareCloud\Webservice\RestApi\Client\Model\CustomersBody;
        use CrmCareCloud\Webservice\RestApi\Client\Model\CustomerSourceRecord;
        use CrmCareCloud\Webservice\RestApi\Client\Model\PersonalInformation;
        use CrmCareCloud\Webservice\RestApi\Client\Model\SocialNetworkCredentials;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

        require_once '../vendor/autoload.php';

        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set address of a new customer (optional)
        $address = new Address();
        $address->setAddress1('Old Town Square') // string | Street name of the address (optional)
        ->setAddress2('34') // string | Street number/land registry number (optional)
        ->setAddress3('12') // string | House number (optional)
        ->setZip('11000') // string | ZIP code (optional)
        ->setCity('Prague 1') // string | City (optional)
        ->setCountryCode('cz'); // string | ISO code of the country Possible values de / gb / us / it / cz / etc. (optional)

        // Set custom agreements of a new customer (optional)
        $custom_agreement1 = new CustomAgreements();
        $custom_agreement1->setAgreementId('89ce2a1b9b01f5c939fb1e20cd'); // string | The unique ID of the agreement in CareCloud
        $custom_agreement1->setAgreementValue(1); // integer | Value of the specific agreement Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set
        $custom_agreement2 = new CustomAgreements();
        $custom_agreement2->setAgreementId('8fd73167342d06899c4c015320'); // string | The unique ID of the agreement in CareCloud
        $custom_agreement2->setAgreementValue(1); // integer | Value of the specific agreement Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set

        $custom_agreements = array(
            $custom_agreement1,
            $custom_agreement2,
        );

        // Set agreement of a new customer
        $agreement = new Agreement();
        $agreement->setAgreementGtc(1) // integer | Consent to General Terms & Conditions Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set
        ->setAgreementProfiling(1) // integer | Consent to profiling Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set
        ->setAgreementMarketingCommunication(0) // integer | Consent to marketing communication Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set
        ->setCustomAgreements($custom_agreements);

        // Set personal information of a new customer
        $personal_information = new PersonalInformation();
        $personal_information->setSalutation('Mr. Doe') // string | Customers salutation (optional)
        ->setGender(1) // integer | Gender of the customer Possible values: 1 - male, 2 - female (optional)
        ->setFirstName('John') // string | First name of the customer (optional)
        ->setLastName('Doe') // string | Last name of the customer (optional)
        ->setBirthdate('1990-01-01') // string <date> | Customer's date of birth (YYYY-MM-DD) (optional)
        ->setEmail('doe@crmcarecloud.com') // string | Email of the customer (optional)
        ->setPhone('420523828932') // string | Phone number of the customer with international prefix (420000000000) (optional)
        ->setLanguageId('cs') // string | The unique ID for the language by ISO 639 code
        ->setStoreId(null) // string | The unique ID for the original customer account store of registration (optional)
        ->setPhotoUrl(null) // string | URL address of the customer photo (optional)
        ->setAddress($address)
            ->setAgreement($agreement);

        $customer = new Customer();
        $customer->setPersonalInformation($personal_information);

        // Set source record of a new customer
        $customer_source = new CustomerSourceRecord();
        $customer_source->setCustomerSourceId('8fd73167342d06899c4c015320'); // string | The unique ID of the customer source. It identifies the system where the customer belongs or the customer account was created
        $customer_source->setExternalId('external-id'); // string | The unique external id of the customer. It may be id from the other system

        // Set the customer  social network credentials (optional)
        $social_network_credentials = new SocialNetworkCredentials();
        $social_network_credentials->setSocialNetworkId('instagram'); // string | The unique ID of the social network
        $social_network_credentials->setSocialNetworkToken('38e223j1jedu12d1jnjqwd'); // string | Social network customer's token

        // Set basic information about new customer to the request body
        $body = new CustomersBody();
        $body->setCustomer($customer)
            ->setCustomerSource($customer_source)
            ->setPassword(null) // string | If parameter autologin=true, password is required, otherwise is optional.
            ->setAutologin(false) // boolean | If true, password is required and customer is logged in
            ->setSocialNetworkCredentials($social_network_credentials);

        // Call endpoint and post data
        try
        {
            $post_customer = $care_cloud->customersApi()->postCustomer($body, $accept_language);
            $customer_id = $post_customer->getData()->getCustomerId();
            var_dump($customer_id);
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }
    - lang: PHP
      label: CareCloud Client
      source: |
        require_once(__DIR__ . '/vendor/autoload.php');
        // Configure HTTP basic authorization: basicAuth
        $config = CareCloud\Configuration::getDefaultConfiguration()
                      ->setUsername('YOUR_USERNAME')
                      ->setPassword('YOUR_PASSWORD');
            // Configure HTTP bearer authorization: bearerAuth
            $config = CareCloud\Configuration::getDefaultConfiguration()
            ->setAccessToken('YOUR_ACCESS_TOKEN');


        $apiInstance = new CareCloud\Api\CustomersApi(
            // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
            // This is optional, `GuzzleHttp\Client` will be used as default.
            new GuzzleHttp\Client(),
            $config
        );
        $body = new \CareCloud\Model\CustomersBody(); // \CareCloud\Model\CustomersBody |
        $accept_language = "cs, en-gb;q=0.8"; // string | The unique ID of the language code by ISO 639-1

        try {
            $result = $apiInstance->postCustomer($body, $accept_language);
            print_r($result);
        } catch (Exception $e) {
            echo 'Exception when calling CustomersApi->postCustomer: ', $e->getMessage(), PHP_EOL;
        }

get:
  tags:
    - Customers
  summary: Get all customers
  description: Get a list of all customers.
  operationId: getCustomers
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
    - $ref: '../../parameters/_index.yaml#/count'
    - $ref: '../../parameters/_index.yaml#/offset'
    - $ref: '../../parameters/_index.yaml#/sort_field'
    - $ref: '../../parameters/_index.yaml#/sort_direction'
    - $ref: '../../parameters/_index.yaml#/email'
    - $ref: '../../parameters/_index.yaml#/phone'
    - $ref: '../../parameters/_index.yaml#/customer_source_id'
    - $ref: '../../parameters/_index.yaml#/first_name'
    - $ref: '../../parameters/_index.yaml#/last_name'
    - $ref: '../../parameters/_index.yaml#/birthdate'
    - $ref: '../../parameters/_index.yaml#/email_list'
    - $ref: '../../parameters/_index.yaml#/customer_ids'
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  customers:
                    type: array
                    description: Array of customers.
                    items:
                      $ref: '../../schemas/_index.yaml#/Customer'
                  total_items:
                    type: integer
                    description: The number of all found customers.
                    example: 1
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

        require_once '../vendor/autoload.php';

        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set query parameters
        $count = 10; // integer >= 1 | The number of records to return (optional, default is 100)
        $offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)
        $sort_field = 'last_change'; // string | One of the query string parameters for sorting (optional)
        $sort_direction = 'DESC'; // string | Direction of sorting the response list (optional)
        $email = null; // string | Search by email (optional)
        $phone = null; // string | Phone number with international prefix (420000000) (optional)
        $customer_source_id = null; // string | The unique ID of the customer source. It identifies the system where the customer belongs or the customer account was created (optional)
        $first_name = 'John'; // string | Search by first name (optional)
        $last_name = null; // string | Search by last name (optional)
        $birthdate = null; // string | Customer's date of birth. Possible values are: YYYY-MM-DD / DD.MM.YYYY (optional)

        // Call endpoint and get data
        try
        {
            $get_customers = $care_cloud->customersApi()->getCustomers(
                $accept_language,
                $count,
                $offset,
                $sort_field,
                $sort_direction,
                $email,
                $phone,
                $customer_source_id,
                $first_name,
                $last_name,
                $birthdate
            );
            $customers = $get_customers->getData()->getCustomers();
            $total_items = $get_customers->getData()->getTotalItems();
            var_dump($customers);
            var_dump($total_items);
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }
    - lang: PHP
      label: CareCloud Client
      source: |
        require_once(__DIR__ . '/vendor/autoload.php');
        // Configure HTTP basic authorization: basicAuth
        $config = CareCloud\Configuration::getDefaultConfiguration()
                      ->setUsername('YOUR_USERNAME')
                      ->setPassword('YOUR_PASSWORD');
            // Configure HTTP bearer authorization: bearerAuth
            $config = CareCloud\Configuration::getDefaultConfiguration()
            ->setAccessToken('YOUR_ACCESS_TOKEN');


        $apiInstance = new CareCloud\Api\CustomersApi(
            // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
            // This is optional, `GuzzleHttp\Client` will be used as default.
            new GuzzleHttp\Client(),
            $config
        );
        $accept_language = "cs, en-gb;q=0.8"; // string | The unique ID of the language code by ISO 639-1
        $count = 100; // int | The number of records to return.
        $offset = 0; // int | The number of records from a collection to skip.
        $sort_field = "sort_field_example"; // string | One of the query string parameters for sorting. *Response is sorted by the specified field.*
        $sort_direction = "sort_direction_example"; // string | Direction of sorting the response list.
        $email = "email_example"; // string | Search by email
        $phone = "phone_example"; // string | Phone number with international prefix (420000000)
        $customer_source_id = "customer_source_id_example"; // string | The unique ID of the customer source. It identifies the system where the customer belongs or the customer account was created
        $first_name = "first_name_example"; // string | Search by first name
        $last_name = "last_name_example"; // string | Search by last name
        $birthdate = "birthdate_example"; // string | Customer's date of birth. *Possible values are: YYYY-MM-DD / DD.MM.YYYY*

        try {
            $result = $apiInstance->getCustomers($accept_language, $count, $offset, $sort_field, $sort_direction, $email, $phone, $customer_source_id, $first_name, $last_name, $birthdate);
            print_r($result);
        } catch (Exception $e) {
            echo 'Exception when calling CustomersApi->getCustomers: ', $e->getMessage(), PHP_EOL;
        }
