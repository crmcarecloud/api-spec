post:
  tags:
    - Customers actions
  summary: Verify auth token
  description: >
    Method verifies authentication token created by a specified application. There is the unique ID of the customer as a response. <br/>
    ⚠️ Endpoint method is available only in the Enterprise interface.
  operationId: postCustomersVerifyAuthToken
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            application_id:
              type: string
              description: 'ID of the application. Application is the source of the token.'
              example: "82de12eb8b138791e678fd11c3"
            token:
              type: string
              description: 'Authentication token'
              example: "V952TL"
            token_request_id:
              type: string
              description: 'The parameter specifies the request that caused the token to be created. If two customers generated an authentication token at the same time and in the same application, the token_request_id parameter represents additional verification to identify the correct token.'
              example: "702baa4a40a57694831321e5d02605d46c189369126ae43a81030790ea188af87e49578a"
          required:
            - application_id
            - token
            - token_request_id
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  customer_id:
                    type: string
                    description: The unique ID of the customer.
                    example: "8ea2591121e636086a4a9c0992"
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\Model\ActionsVerifyauthtokenBody;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\Interfaces;

        require_once '../vendor/autoload.php';

        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;
        $interface = Interfaces::CUSTOMER;
        $token = 'token';

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type, $interface, null, $token);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set path parameters
        $token_id = '702baa4a40a57694831321e5d02605d46c189369126ae43a81030790ea188af87e49578a'; // Client's application token

        // Set query parameters
        $external_application_id = '82de12eb8b138791e678fd11c3'; // string | ID of the external application
        $token_type = 1; // integer | Possible values: 1 - alphanumeric, 2 - numeric

        // Set the request body
        $body = new ActionsVerifyauthtokenBody();
        $body->setApplicationId($external_application_id);
        $body->setToken('V952TL');
        $body->setTokenRequestId('326a3adc83f925a27cb8c0318d9bbceeb00f65e4');

        // Call endpoint and post data
        try
        {
            $post_verify_token = $care_cloud->customersActionsApi()->postCustomersVerifyAuthToken($body);
            $customer_id = $post_verify_token->getData()->getCustomerId();
            var_dump($customer_id);
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }
