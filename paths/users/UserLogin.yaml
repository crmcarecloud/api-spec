post:
  tags:
    - Users
  summary: User login
  description: User login to external application.
  operationId: postUserLogin
  security: []
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            user_external_application_id:
              type: string
              description: ID of an external application where user wants to be logged in from resource [user-external-application](#tag/Customer-external-applications).
              example: 89d1a6111b3fb6e74665d948
            login:
              type: string
              description: Login name of user in CareCloud.
              example: example@crmcarecloud.com
            password:
              type: string
              format: password
              description: The CareCloud user password.
              example: password_example
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  bearer_token:
                    type: string
                    description: Authentication bearer token for an user. Token can be used for authentication in REST API with Bearer Authentication (more information about it [here](#section/Authorization/bearerAuth)).
                    example: "09359095c5da43c7ae11e710eabce49418715a6a"
                  valid_to:
                    type: string
                    description: Date and time (local time zone of the project) of the token validity.   *(YYYY-MM-DD HH:MM:SS)*
                    example: '2019-01-04 10:31:56'
                  user:
                    $ref: '../../schemas/_index.yaml#/User'
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\Model\ActionsLoginBody1;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

        require_once '../vendor/autoload.php';

        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set the request body
        $body = new ActionsLoginBody1();
        $body->setUserExternalApplicationId('external_id'); // string | ID of an external application where user wants to be logged in
        $body->setLogin('user_login'); // string | Login name of the user
        $body->setPassword('user_password'); // string | User's password

        // Call endpoint and post data
        try
        {
            $post_login = $care_cloud->usersApi()->postUserLogin($body, $accept_language);
            $login_data = $post_login->getData();
            var_dump($login_data);
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }