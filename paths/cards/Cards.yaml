get:
  tags:
    - Cards
  summary: Get all cards
  description: Get information about all customer cards.
  operationId: getCards
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
    - $ref: '../../parameters/_index.yaml#/count'
    - $ref: '../../parameters/_index.yaml#/offset'
    - $ref: '../../parameters/_index.yaml#/sort_field'
    - $ref: '../../parameters/_index.yaml#/sort_direction'
    - $ref: '../../parameters/_index.yaml#/customer_id'
    - $ref: '../../parameters/_index.yaml#/card_number'
    - $ref: '../../parameters/_index.yaml#/card_type_id'
    - $ref: '../../parameters/_index.yaml#/state'
    - $ref: '../../parameters/_index.yaml#/is_valid'
    - $ref: '../../parameters/_index.yaml#/card_number_list'
    - $ref: '../../parameters/_index.yaml#/search_secondary_card_number'
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  cards:
                    type: array
                    description: Collection of customer cards.
                    items:
                      $ref: '../../schemas/_index.yaml#/Card'
                  total_items:
                    type: integer
                    description: The number of all found customer cards.
                    example: 1
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

        require_once '../vendor/autoload.php';

        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set query parameters
        $count = 10; // integer >= 1 | The number of records to return (optional, default is 100)
        $offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)
        $sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)
        $sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)
        $customer_id = null; // string | The unique ID of the customer (optional, default is null)
        $card_number = null; // string | Number of the customer card (optional, default is null)
        $card_type_id = null; // string | The unique ID of the card type (optional, default is null)
        $state = null; // integer | State of the customer. Possible values are: 0 - deleted / 1 - active / 2 - non active (optional, default is null)
        $is_valid = null; // boolean | in validity range - true / before or after validity range - false / no value - all (optional, default is null)

        // Call endpoint and get data
        try
        {
            $get_cards = $care_cloud->cardsApi()->getCards(
                $accept_language,
                $count,
                $offset,
                $sort_field,
                $sort_direction,
                $customer_id,
                $card_number,
                $card_type_id,
                $state,
                $is_valid
            );
            $cards = $get_cards->getData()->getCards();
            $total_items = $get_cards->getData()->getTotalItems();
            var_dump($cards);
            var_dump($total_items);
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }
post:
  tags:
    - Cards
  summary: Create a card
  description: >
    Add a new customer card.<br/>
    ⚠️ Endpoint is available only in the Enterprise interface.<br/>
  operationId: postCard
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            card:
              $ref: '../../schemas/_index.yaml#/Card'
          required:
            - card
  responses:
    '201':
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  card_id:
                    type: string
                    description: The unique ID of the card.
                    example: "81a94c48474bc45c03d41f7016"
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\Model\Card;
        use CrmCareCloud\Webservice\RestApi\Client\Model\CardsBody;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

        require_once '../vendor/autoload.php';

        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set card info
        $card = new Card();
        $card->setCustomerId('87af991126405bf8e7dfb36045'); // string | The unique ID for the card holder
        $card->setCardTypeId('81eaeea13b8984a169c490a325'); // string | The unique ID for the card type
        $card->setCardNumber('CARD10101'); // string | Card number
        $card->setValidFrom('2022-10-18 16:18:00'); // string | Card validity from (YYYY-MM-DD HH:MM:SS)
        $card->setValidTo('2023-10-18 16:18:00'); // string | Card validity to (YYYY-MM-DD HH:MM:SS)
        $card->setStoreId(null); // string | The unique ID for the store, where the card was assigned to a customer
        $card->setState(1); // integer | State of the card Possible values are: 0 - blocked / 1 - active

        $body = new CardsBody();
        $body->setCard($card);

        // Call endpoint and post data
        try
        {
            $post_card = $care_cloud->cardsApi()->postCard($body, $accept_language);
            $card_id = $post_card->getData()->getCardId();
            var_dump($card_id);
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }
