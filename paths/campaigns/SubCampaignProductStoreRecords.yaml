get:
  tags:
    - Campaign products
  summary: Get a campaign product store records
  description: Get information about all campaign products store records.
  operationId: getCampaignProductStoreRecords
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
    - $ref: '../../parameters/_index.yaml#/campaign_product_id_path'
    - $ref: '../../parameters/_index.yaml#/count'
    - $ref: '../../parameters/_index.yaml#/offset'
    - $ref: '../../parameters/_index.yaml#/sort_field'
    - $ref: '../../parameters/_index.yaml#/sort_direction'
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  campaign_product_store_records:
                    type: array
                    description: List of the campaign product store records.
                    items:
                      $ref: '../../schemas/_index.yaml#/CampaignProductStoreRecord'
                  total_items:
                    type: integer
                    description: The number of all found campaign product store records.
                    example: 1
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

        require_once '../vendor/autoload.php';

        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set path parameter
        $campaign_product_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the campaign product

        // Set query parameters
        $count = 10; // integer >= 1 | The number of records to return (optional, default is 100)
        $offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)
        $sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)
        $sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)

        // Call endpoint and get data
        try
        {
            $get_campaign_product_store_records = $care_cloud->campaignProductsApi()->getCampaignProductStoreRecords(
                $campaign_product_id,
                $accept_language,
                $count,
                $offset,
                $sort_field,
                $sort_direction
            );
            $campaign_product_store_records = $get_campaign_product_store_records->getData()->getCampaignProductStoreRecords();
            $total_items = $get_campaign_product_store_records->getData()->getTotalItems();
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }
post:
  tags:
    - Campaign products
  summary: Add a store to the campaign product
  description: Add one of the [stores](#tag/Stores) to a campaign product.
  operationId: postCampaignProductStoreRecord
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
    - $ref: '../../parameters/_index.yaml#/campaign_product_id_path'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            campaign_product_store_record:
              $ref: '../../schemas/_index.yaml#/CampaignProductStoreRecord'
          required:
            - campaign_product_store_record
  responses:
    '201':
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  campaign_product_store_record_id:
                    type: string
                    description: The unique ID of the campaign product store record.
                    example: "8bd253a890067595008f1d44aa"
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\Model\CampaignProductIdCampaignproductstorerecordsBody;
        use CrmCareCloud\Webservice\RestApi\Client\Model\CampaignProductStoreRecord;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

        require_once 'vendor/autoload.php';

        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set path parameter
        $campaign_product_id = '81eaeea13b8984a169c490a325'; // string | The unique ID of the campaign product

        // Set campaign product's store record data
        $campaign_product_store_record = new CampaignProductStoreRecord();
        $campaign_product_store_record->setStoreId('82de12eb8b138791e678fd11c3'); // string | The unique ID of the store
        $campaign_product_store_record->setCampaignProductId($campaign_product_id); // string | The unique ID of the campaign product

        // Set the request body
        $body = new CampaignProductIdCampaignproductstorerecordsBody();
        $body->setCampaignProductStoreRecord($campaign_product_store_record);

        // Call endpoint and post data
        try
        {
            $new_campaign_product_store_record = $care_cloud->campaignProductsApi()->postCampaignProductStoreRecord($body, $campaign_product_id, $accept_language);
            $campaign_product_store_record_id = $new_campaign_product_store_record->getData()->getCampaignProductStoreRecordId();
            var_dump($campaign_product_store_record_id);
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }
