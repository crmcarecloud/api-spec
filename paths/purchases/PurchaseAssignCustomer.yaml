post:
  tags:
    - Purchases
  summary: Assign customer
  description: The method assigns customer to the existing purchase. If customer could collect points, he is going to gain coresponding amount of points.
  operationId: postPurchaseAssignCustomer
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            store_id:
              type: string
              description: Id of store
              example: 8fd73167342d06899c15320
            external_purchase_id:
              type: string
              description: The unique external id of the purchase
              example: 2364
            card_number:
              type: string
              description: Number of the customer's card. Parameter is mandatory only if customer_id is not set.
              example: 200120000290
            customer_id:
              type: string
              description: The unique id of the customer. Parameter is mandatory only if card_number is not set.
              example: 89ac83ca207a820c62c79bf03a
          required:
            - store_id
            - external_purchase_id
  responses:
    '204':
      description: No Content
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'