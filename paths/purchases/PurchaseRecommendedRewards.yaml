post:
  tags:
    - Purchases
  summary: Recommended best rewards
  description: Method returns all available rewards for POS installation. The output contains list of all available and valid rewards. Each reward contains a parameter of maximum usage of rewards in a purchase. If amount equals zero, reward can not be applied. Rewards are allways connected to products through bill items.
  operationId: postPurchaseRecommendedRewards
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            store_id:
              type: string
              description: ID of the store
              example: 8fd73167342d06899c15320
            cashdesk_number:
              type: integer
              description: Number of the cashdesk in store
              example: 1
            card_number:
              type: string
              description: Cusomer card number
              example: 200120000290
            customer_id:
              type: string
              description: Id of the customer that made the purchase. You can search customers by plenty parameter in the resource customers
              example: 6734267342d0689d06899c
            reward_list_type:
              type: string
              enum:
                - F
                - C
                - A
              description: |
                Type of the rewards
                *Possible values: F - full (all manual rewards available and valid of the specific POS)/ C -condensed (only manual rewards corresponding to items on the bill - maxCount not equals zero)/ A - all rewards list including automatic apply this is only for the DATA CUBE*
              example: "A"
            bill:
              $ref: '../../schemas/_index.yaml#/Bill'
          required:
            - store_id
            - cashdesk_number
            - reward_list_type
            - bill

  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  recommended_best_rewards:
                    type: array
                    description: List of the best rewards for POS
                    items:
                      $ref: '../../schemas/_index.yaml#/RecommendedReward'
                  total_items:
                    type: integer
                    description: Count of all found rewards
                    example: 1
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\Model\ActionsRecommendedbestrewardsBody;
        use CrmCareCloud\Webservice\RestApi\Client\Model\Bill;
        use CrmCareCloud\Webservice\RestApi\Client\Model\BillItem;
        use CrmCareCloud\Webservice\RestApi\Client\Model\PluId;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

        require_once '../vendor/autoload.php';

        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique id of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set the bill info
        $plu_ids = new PluId();
        $plu_ids->setListCode('GLOBAL');
        $plu_ids->setCode('r456');

        $bill_item = new BillItem();
        $bill_item->setPluIds(array($plu_ids));
        $bill_item->setPluName('Teapot');
        $bill_item->setCategoryPluId('1110001');
        $bill_item->setVatRate(0);
        $bill_item->setQuantity(1);
        $bill_item->setPaidAmount(100);
        $bill_item->setPrice(100);
        $bill_item->setBillItemId('teapot_id_01');
        $bill_item->setLoyaltyOff(true);
        $bill_item->setPurchaseItemTypeId('86e05affc7a7abefcd513ab400');
        $bill_item->setCustomerId(null);

        $bill = new Bill();
        $bill->setBillId('bill001');
        $bill->setBillNumber(null);
        $bill->setPaymentTime('2022-10-30T15:51:49+02:00');
        $bill->setCreatedBy(null);
        $bill->setCurrencyId('8bed991c68a470e7aaeffbf048');
        $bill->setTotalPrice(100);
        $bill->setBillItems(array($bill_item));

        // Set the request body
        $body = new ActionsRecommendedbestrewardsBody();
        $body->setStoreId('8bed991c68a470e7aaeffbf048');
        $body->setCashdeskNumber(1);
        $body->setCardNumber(null);
        $body->setCustomerId(null);
        $body->setRewardListType('A');
        $body->setBill($bill);

        // Call endpoint and get data
        try
        {
            $post_best_rewards = $care_cloud->purchasesApi()->postPurchaseRecommendedRewards($body, $accept_language);
            $best_rewards = $post_best_rewards->getData()->getRecommendedBestRewards();
            $total_items = $post_best_rewards->getData()->getTotalItems();
            var_dump($best_rewards);
            var_dump($total_items);
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }