post:
  tags:
    - Points
  summary: Assign of points
  description: |
    Creates a new point collection record with the corresponding value.
    ⚠️ Action methods are available only in Enterprise interface.
  operationId: postPointsAssign
  parameters:
    - $ref: '../../parameters/_index.yaml#/Accept-Language'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            amount:
              type: number
              format: float
              description: The number of collected points.
              example: 1500
            customer_id:
              type: string
              description: The unique ID of the customer.
              example: '8ea2591121e636086a4a9c0992'
            partner_id:
              type: string
              readOnly: false
              description: The unique ID of the partner.
              example: '86e05affc7a7abefcd513ab400'
            point_type_id:
              type: string
              readOnly: false
              description: The unique ID of the point type. If the parameter is not set, a default point type is set.
              example: '86e05affc7a7abefcd513ab400'
            note:
              type: string
              readOnly: false
              description: Note for the new point record.
              example: 'Birthdate point reward'
          required:
            - amount
            - customer_id
            - partner_id
  responses:
    '201':
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  point_id:
                    type: string
                    description: The unique ID of the point record.
                    example: "82de12eb8b138791e678fd11c3"
    '400':
      $ref: '../../api.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../api.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../api.yaml#/components/responses/Forbidden'
    '404':
      $ref: '../../api.yaml#/components/responses/NotFound'
    '405':
      $ref: '../../api.yaml#/components/responses/NotAllowed'
    '429':
      $ref: '../../api.yaml#/components/responses/TooManyRequests'
    '500':
      $ref: '../../api.yaml#/components/responses/InternalServerError'
    '503':
      $ref: '../../api.yaml#/components/responses/ServiceUnavailable'
  x-codeSamples:
    - lang: PHP
      label: CareCloud SDK
      source: |
        use CrmCareCloud\Webservice\RestApi\Client\ApiException;
        use CrmCareCloud\Webservice\RestApi\Client\Model\ActionsAssignpointsBody;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
        use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

        require_once '../vendor/autoload.php';

        $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
        $login = 'login';
        $password = 'password';
        $external_app_id = 'application_id';
        $auth_type = AuthTypes::BEARER_AUTH;

        $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

        $care_cloud = new CareCloud($config);

        // Set Header parameter Accept-Language
        $accept_language = 'en'; //	string | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8

        // Set the request body
        $body = new ActionsAssignpointsBody();
        $body->setAmount(100); // float | Number of assigned points
        $body->setCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID of the customer
        $body->setPartnerId(null); // string | The unique ID of the partner (optional)

        // Call endpoint and post data
        try
        {
            $care_cloud->pointsApi()->postPointsAssign($body, $accept_language);
        }
        catch(ApiException $e)
        {
            die(var_dump($e->getResponseBody() ?: $e->getMessage()));
        }
