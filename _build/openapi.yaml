openapi: 3.0.2
info:
  title: REST API Reference
  version: 1.0.0
  license:
    name: EULA
    url: 'https://www.crmcarecloud.com/'
  contact:
    email: support@carecloud.cz
tags:
  - name: Agreements
    description: 'Legal standards (e.g., GDPR) restrict the processing of customer personal data and other operations (e.g., profiling) based on the customer consent (agreement). You can manage the content and status of Customers'' Consent to the Processing of Personal Data using the CareCloud platform. It also enables you to create customized Consents to Data Processing based on the requirements of your project. You can get the list of the available customer consents (agreements) here.'
  - name: Bookings
    description: 'Bookings of the services. Meetings, restaurant reservations, client appointments.'
  - name: Booking tickets
    description: 'Bookings of the services. Meetings, restaurant reservations, client appointments.'
  - name: Booking ticket properties
    description: 'Bookings of the services. Meetings, restaurant reservations, client appointments.'
  - name: Booking statuses
    description: 'Bookings of the services. Meetings, restaurant reservations, client appointments.'
  - name: Campaigns
    description: You can use and coordinate many communication channels to deliver effective results within a personalized omnichannel marketing campaign in the CareCloud platform.
  - name: Campaign products
    description: 'The Campaign products are sets of products that are offered to Customers under special conditions, with different type of benefits. It can be used like a catalogue of discounted products on a special web site/e-shop or a set of special offers distributed to households as leaflet or direct mail. All this kind of campaign product types can be managed in CRM CareCloud directly or via CareCloud API.'
  - name: Cards
    description: 'The Customer can be recognized by different identifiers - cards related to the account. You can use a credit Card, Loyalty Card, mobile Card, ski pass, virtual Card, or any other kind of unique personal ID or any other identification method like barcodes, QR codes, or another key. This resource can process all the unique customer cards (identifiers) related to the Customer account.'
  - name: Card types
    description: 'Different customer card types can be managed in CRM CareCloud. Credit Card, Loyalty Card, mobile Card, skipass, virtual Card or any other type of customer unique personal ID or any other customer identification method like barcode, QR code or any other key can be used. The customer card types can be differenciated by a prefix, name or design and managed by this resource.'
  - name: Charged entrances
    description: Customized resource contains tickets charged in external production systems
  - name: Communication channels
    description: CareCloud API allows you to communicate with customers on multiple communication channels. This resource contain all communication possibilities.
  - name: Countries
    description: 'Some data, especially addresses are tied to a Country, which is listed in CRM CareCloud. You can get here the list of countries available.'
  - name: Credits
    description: Resource represents all credit records.
  - name: Credit history
    description: Resource represents credit operations history.
  - name: Credit types
    description: Credit can have multiple types. This resource contain all types of credit available in API.
  - name: Currencies
    description: 'Some data, especially Products can be tied to a Currency which is listed in CRM CareCloud. You can get here the list of currencies available.'
  - name: Customers
    description: 'CRM CareCloud is about 360 view on a Customer and all relationships of the Customer. Resource Customers is used for managing this basic entity, which contains personal and all additional related information about the Customer.'
  - name: Customers actions
    description: Action methods for resource customers.
  - name: Customer address types
    description: You can get the list of the available customer address types here.
  - name: Customer external applications
    description: 'An Application also referred to as an Application program, Application software or just an App is a computer software package that performs a specific function directly for an end-user or, in some cases, for another application. An application can be self-contained or a group of programs. CC platform enables you to connect to external Applications. You can get the list of the available customer external applications here.'
  - name: Customer properties
    description: 'You can store an unlimited amount of linked customer data for each customer account in the CareCloud platform. Standard data structures are available for common customer data. For project-specific data, it is possible to create user-defined data structures called Customer properties. You can customize the Customer properties based on your needs and populate them with data from various sources. You can also work with account properties across the CareCloud ecosystem via the CareCloud API.'
  - name: Customer relation types
    description: 'It is possible to create different relations between Customer accounts in the CareCloud platform. You can define the principle of the Customer account relation, set the specific properties of the relation type, and create customized Customer relations between two or more customer accounts.'
  - name: Customer sources
    description: 'Customer account can be created and tied to different sources, like online registration form, e-shop, mobile app, POS, booking system, web microsite, campaign or any other source. This source of the customer account is related to the account and can be managed by this resource.'
  - name: Customer source records
    description: This resource contains all records of customers and customer sources.
  - name: Customer types
    description: You can get the list of the available customer types here.
  - name: Events
    description: |
      Events are a unique entity that you can use to record various activities on the customer account. The structure of events allows you to define different types of events with specific properties, group them, and link to an individual customer account. You can use events to trigger, manage, and create workflow conditions in the Marketing Automation application.
      **Scheme of the MA related resources and their relations:**
      <br />
      <img src="https://cdn.carecloud.cz/static/developers/img/event_group.png">
  - name: Event groups
    description: |
      Events are a unique entity that you can use to record various activities on the customer account. The structure of events allows you to define different types of events with specific properties, group them, and link to an individual customer account. You can use events to trigger, manage, and create workflow conditions in the Marketing Automation application. You find the list of marketing automation event groups below.
      <br />**Scheme of the MA related resources and their relations:**<br />
      <img src="https://cdn.carecloud.cz/static/developers/img/event_group.png">
  - name: Event properties
    description: 'Events are a unique entity that you can use to record various activities on the customer account. The structure of events allows you to define different types of events with specific properties, group them, and link to an individual customer account. You can use events to trigger, manage, and create workflow conditions in the Marketing Automation application. You find the list of available properties for the events resource below.'
  - name: Event types
    description: |
      Events are a unique entity that you can use to record various activities on the customer account. The structure of events allows you to define different types of events with specific properties, group them, and link to an individual customer account. You can use events to trigger, manage, and create workflow conditions in the Marketing Automation application. You find the list of marketing automation event types below.
      <br />**Scheme of the MA related resources and their relations:**<br />
      <img src="https://cdn.carecloud.cz/static/developers/img/event_group.png">
  - name: Hints
    description: 'There is the possibility to recommend the customers a product, a service, or just information in CRM CareCloud based on customer purchasing behavior and many other criteria. This resource can return all hints for the customer.'
  - name: Interests
    description: 'There are different areas that customers are interested in, that they enjoy, that they like or prefer. You can use resource interests to manage all of this customer project-specific preferences, personal interests, passions, or hobbies.'
  - name: Languages
    description: 'Some data, especially Customer accounts or Tokens, are tied to a Language listed in CRM CareCloud. You can get here the list of languages available.'
  - name: Messages
    description: You can create and manage various messages to deliver effective content to customers within a personalized omnichannel marketing communication in the CareCloud platform. You get all the message details and deliver the messages to customers through this resource.
  - name: Message templates
    description: You can create and manage various messages to deliver effective content to customers within a personalized omnichannel marketing communication in the CareCloud platform. You get all the message template details through this resource.
  - name: One Time Password
    description: 'One Time Password resource provides a complete service of creating and validating one-use passwords. You can use OTP to validate any customer operation through email, SMS, or phone notification.'
  - name: Orders
    description: 'Orders are expressions of intentions to purchase products, i.e., requests to buy something. They may refer to products, services or even experiences. The order becomes a contract (spoken, written or electronic) between the business and the customer. The customer commits to receive the product and to pay for it. Orders can be managed here.'
  - name: Partners
    description: A Partner is an entity that owns and manages a defined group of customer data in the CareCloud platform based on consent to the processing of personal data. The users of a specific Partner have no access to the customer data of another Partner. Each user is linked to a particular Partner. You can get here the list of Partners available.
  - name: Partner properties
    description: A Partner is an entity that owns and manages a defined group of customer data in the CareCloud platform based on consent to the processing of personal data. Partner properties endpoint provides list of all partner properties.
  - name: Payment types
    description: All payment types from CareCloud. Payment types can be used while creating an order.
  - name: Points
    description: 'If CRM CareCloud manages a Loyalty program based on points collection to a customer account, the points transactions and records like points collection and points redemption can be controlled by this resource.'
  - name: Point history
    description: 'If CRM CareCloud manages a Loyalty program based on points collection to a customer account, the points transactions like points collection and points redemption is listed in point history resource.'
  - name: Point reservation
    description: 'When CRM CareCloud manages a Loyalty program based on points collection to a customer account, the point reservations can be managed by this resource.'
  - name: Point types
    description: You can create different types of loyalty points in the CareCloud platform and get the details of loyalty point types in this resource.
  - name: Products
    description: 'A Product is an item offered for sale to the customers. The Product could be goods, a service, a ticket, or even an experience. You can manage all different Product types and their properties in the CareCloud platform, define product brands and classify Products into product groups. You get the list of Products and it''s properties in this resource.'
  - name: Product brands
    description: 'You can manage all different Product types and their properties, define product brands and classify Products into product groups in the CareCloud platform. You get the list of product brands and it''s properties in this resource.'
  - name: Product groups
    description: 'You can manage all different Product types and their properties, define product brands and classify Products into product groups in the CareCloud platform. You get the list of product groups in this resource.'
  - name: Product properties
    description: Product properties are list of available properties for the products resource.
  - name: Product recommendation engine
    description: 'There is the possibility to recommend the customer the most related product or service based on customer purchasing behavior. The product recommendation helps you guide customers on the products they should buy based on their previous shopping tendencies or shopping cart content. CareCloud Recommendation engine enables the personalization of content by listing the most likely items of high value to the customer based on his previous shopping behavior or current shopping cart content. The most typical use cases are recommendations at any customer touchpoint, such as POS, e-shop, e-mail, mobile app, etc.'
  - name: Product reservations
    description: CRM CareCloud allows to reserve Products or Product sets and manages the reservation process. There is the possibility to create a particular group of Products that can be reserved - Reservable products. This resource can make the Reservation of a Product.
  - name: Product reservation external list types
    description: You can get the list of the available product reservation external list types here.
  - name: Product reservation sources
    description: You can get the list of the available product reservation sources here.
  - name: Purchases
    description: 'There are the purchases tied to customer accounts stored in CRM CareCloud. After the purchase, the purchases are saved online when closing the bill or imported by the offline web service. Many parameters specify the purchase, like bill items and their prices, date and time of the purchase, which store made the purchase, or loyalty card number. All these data are used for segmentation or voucher creation.'
  - name: Purchase error examples
    description: |
      <p>Examples of the most occurred extended error codes from purchases resource endpoints and action methods:</p> <table>
        <thead>
          <tr>
            <th>status code</th>
            <th>exception</th>
            <th>name</th>
            <th>reason</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>store_id</td>
            <td>not_found</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>purchase_type_id</td>
            <td>not_allowed_value</td>
          </tr> 
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>bill_item_id</td>
            <td>item_price_lower_than_paid_amount</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>bill_id</td>
            <td>already_exists</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>bill_item_id</td>
            <td>required</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>payment_time</td>
            <td>invalid_value_format</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>credit_points</td>
            <td>not_enough_points_for_payment</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>max_number_of_voucher_exceeded</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>system_id</td>
            <td>different_system_id</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_not_allowed_in_store</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>not_enough_items_for_voucher</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_condition_count_not_satisfied</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_bonus_count_not_satisfied</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>unauthorized_use_vouchers</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>not_enough_items_for_voucher</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>not_enough_points_for_voucher</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_cant_be_applied_by_date</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_cant_be_applied_by_time</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_cant_be_applied_by_validity_days</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_cant_be_applied_by_segment</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_cant_be_used_in_store</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_assigned_to_another_customer</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_already_used</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_already_applied</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_expired</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>insufficient_amount_of_purchase</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_invalid_type_of_usage</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>card_number</td>
            <td>card_is_blocked</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>benefit_codes</td>
            <td>voucher_invalid_type_of_usage</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>max_points</td>
            <td>points_min_amount_of_purchase</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>max_points</td>
            <td>customer_cant_pay_by_points</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>payment_type</td>
            <td>customer_cant_pay_by_credits</td>
          </tr>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>customer_id</td>
            <td>customer_was_deleted</td>
          </tr>
        </tbody>
      </table>
      <table>
        <thead>
          <tr>
            <th>status code</th>
            <th>exception</th>
            <th>parameter</th>
            <th>object_of_parameter</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>400</td>
            <td>missing_argument_exception</td>
            <td>code</td>
            <td>PluId</td>
          </tr>
        </tbody>
      </table>
      <table>
        <thead>
          <tr>
            <th>status code</th>
            <th>exception</th>
            <th>expected_type</th>
            <th>actual_type</th>
            <th>parameter</th>
          </tr>
        </thead>
        <tbody>
          <tr>
           <td>400</td>
           <td>invalid_argument_exception</td>
           <td>string</td>
           <td>null</td>
           <td>payment_type</td>
         </tr>
        </tbody>
      </table>
      <table>
        <thead>
          <tr>
            <th>status code</th>
            <th>exception</th>
            <th>title</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>400</td>
            <td>bad_request_exception</td>
            <td>'Encoded store ID is invalid.'</td>
          </tr>
        </tbody>
      </table>
  - name: Purchase item types
    description: You can get the list of the available purchase item types here.
  - name: Purchase types
    description: You can get the list of the available purchase types here.
  - name: Reservable products
    description: The set of Products that could be reserved can be limited. We call this group Reservable Products. You can get the details of Reservable Products and search within this group by this resource.
  - name: Rewards
    description: 'Different types of Rewards for Customers can be created and managed in CRM CareCloud. The Reward and its features are a pattern for creating individual customer Vouchers that can be applied to the Customer purchases directly. It is defined by parameters like Reward validity, priority or number of points that will be spent by application, and many others. You can create rewards and get the information about actual rewards processed in CRM CareCloud by this resource.'
  - name: Reward properties
    description: Reward properties are list of the available properties for the rewards resource.
  - name: Reward types
    description: Reward types represent list of all rewards types available in CareCloud.
  - name: Segments
    description: 'Segments are the customer groups, that can be defined and created in CRM CareCloud according to many different criteria. Customers in the Segment share some specific common information or property and can be managed via this resource.'
  - name: Statuses
    description: 'Status is a specific property of a customer account which can be achieved based on the defined criteria, like its validity, achieving principle or loyalty switch. It is often used for management of loyalty membership levels, employees or VIP customers within the loyalty scheme setup and can be processed by this resource.'
  - name: Stores
    description: 'A store is a building, part of a building, or a virtual place where products are sold. You can manage the network of your business units (shops, stores, company branches, warehouses, kiosks, e-shops, mobile, or any other applications) via this resource. Many properties like an address, GPS coordinates, opening hours, or contact details can be synchronized with any other system.'
  - name: Store groups
    description: List of store groups.
  - name: Store properties
    description: Store properties are list of available properties for store resource.
  - name: Tokens
    description: |
      Management of token resources. Tokens are used for identification of the application installation on a device and for setup of basic application parameters (permissions, language, notification identification). <p class="warning">⚠️ Warning: Tokens resource is available only in Customer interface.</p> <p class="warning">Note: The process of authentication and login to customer account using the HTTP methods  /tokens and  /tokens/{token_id}/actions/login is desribed in the section <a href="#section/Use-cases/Authentication-and-login-process-for-customer-interface">Use cases</a>.</p>
  - name: Users
    description: |
      A user is a person who utilizes an Application, a computer or network service. A user has a user account and is identified to the system by a username and password. The user is assigned a user role and user permissions in the Application. <br/><p class="warning">⚠️ Warning: Resource is available only in Enterprise interface.</p>
  - name: User roles
    description: |
      User role is a permission set that controls access to Applications, actions and features within the CareCloud Platform. Each User account requires a User role assignment. <br/><p class="warning">⚠️ Warning: Resource is available only in Enterprise interface.</p>
  - name: Vouchers
    description: 'Vouchers are generated by the Rewards for a specific Customer account and they are applied during the purchasing process. They are defined by its value, validity and related Reward. Vouchers can be managed by this resource.'
  - name: Voucher properties
    description: List of voucher properties
  - name: Wallet
    description: 'The Wallet in the CareCloud platform contains Rewards Points and Credits. It is assigned to each customer on his customer account. The content of the wallet is available in the Customer 360 View App. You get the Wallet content details included expirations, here.'
servers:
  - url: 'https://{project_url}/webservice/rest-api/{api_interface}/{version}'
    description: 'The **Enterprise API**. More in [Domain structure](#section/Getting-started/Domain-structure)'
    variables:
      project_url:
        default: sandbox.crmcarecloud.com
        description: domain of the CareCloud project
      api_interface:
        enum:
          - enterprise-interface
          - customer-interface
        default: enterprise-interface
        description: 'Two different kinds of interfaces are used depending on the type of data required from CareCloud API and the character of integration (mobile application, webshop, POS, or BI tool).'
      version:
        enum:
          - v1.0
        default: v1.0
        description: Version of the CareCloud API
paths:
  /agreements:
    get:
      tags:
        - Agreements
      summary: Get all agreements
      description: Get a list of agreements accepted in CRM CareCloud.
      operationId: getAgreements
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/communication_channel_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      agreements:
                        type: array
                        description: List of the agreements.
                        items:
                          $ref: '#/components/schemas/AgreementList'
                      total_items:
                        type: integer
                        description: Number of all found agreements.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: |
            use CrmCareCloud\Webservice\RestApi\Client\ApiException;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

            require_once '../vendor/autoload.php';

            $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
            $login = 'login';
            $password = 'password';
            $external_app_id = 'application_id';
            $auth_type = AuthTypes::BEARER_AUTH;

            $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

            $care_cloud = new CareCloud($config);

            // Set Header parameter Accept-Language
            $accept_language = 'en'; //string | The unique ID of the language code by ISO 639-1, Default: cs, en-gb;q=0.8

            // Set query parameters
            $count = 10; // integer >= 1 | The number of records to return (optional, default is 100)
            $offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)
            $sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)
            $sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)

            // Call endpoint and get data
            try
            {
                $get_agreements = $care_cloud->agreementsApi()->getAgreements($accept_language, $count, $offset, $sort_field, $sort_direction);
                $agreements = $get_agreements->getData()->getAgreements();
                $total_items = $get_agreements->getData()->getTotalItems();
                var_dump($agreements);
                var_dump($total_items);
            }
            catch(ApiException $e)
            {
                die(var_dump($e->getResponseBody() ?: $e->getMessage()));
            }
  '/agreements/{agreement_id}':
    get:
      tags:
        - Agreements
      summary: Detail of an agreement
      description: Get information about a specific agreement.
      operationId: getAgreement
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/agreement_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AgreementList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1, Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$agreement_id = '8fd73167342d06899c4c015320';\n\n// Call endpoint and get data\ntry\n{\n  $get_agreement = $care_cloud->agreementsApi()->getAgreement($agreement_id, $accept_language);\n  $agreement = $get_agreement->getData();\n  var_dump($agreement);\n}\ncatch(ApiException $e)\n{\n  die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /bookings:
    get:
      tags:
        - Bookings
      summary: Get all bookings
      description: Get information about all bookings.
      operationId: getBookings
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/booking_status'
        - $ref: '#/components/parameters/booking_statuses'
        - $ref: '#/components/parameters/add_booking_items'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      bookings:
                        type: array
                        description: Collection of bookings.
                        items:
                          $ref: '#/components/schemas/Booking'
                      total_items:
                        type: integer
                        description: The number of all found bookings.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional)\n$booking_status = null; // string | Current status of the booking from resource booking-statuses (optional)\n$add_booking_items = null; // string | Possible values: full - returns all booking items with their additional properties. / items-only - returns all booking items without additional properties. / none or no value - return no booking items (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_bookings = $care_cloud->bookingsApi()->getBookings(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $customer_id,\n        $booking_status,\n        $add_booking_items\n    );\n    $bookings = $get_bookings->getData()->getBookings();\n    $total_items = $get_bookings->getData()->getTotalItems();\n    var_dump($bookings);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Bookings
      summary: Create a new booking
      description: Add a new booking.
      operationId: postBooking
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                booking:
                  $ref: '#/components/schemas/Booking'
              required:
                - booking
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      booking_id:
                        type: string
                        description: The unique ID of the booking.
                        example: 8bc48e4b5da4c61eddb98e59fe
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Booking;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\BookingItem;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\BookingsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n//$booking_id = '89cc1c4476e0ec8aa25f46cbff'; // string | The unique ID of the booking\n\n// Set the request body\n$booking_item1 = new BookingItem();\n$booking_item1->setTimeSlotId('82b6d539997857de914f2252a1'); // string | The unique ID of the booking time slot\n$booking_item1->setCreatedAt('2023-03-08 10:47:34'); // string | Date and time of the booking (YYYY-MM-DD HH:MM:SS)\n$booking_item1->setCustomerId('85bc5819e09dab95437552ce79'); // string | The unique ID of the customer\n\n$booking = new Booking();\n$booking->setCustomerId('85bc5819e09dab95437552ce79'); // string | The unique ID of the customer (optional)\n$booking->setBookingItems(array($booking_item1)); // BookingItem[] | List of the booking items\n$booking->setBookingStatus(null); //string | Current status of the booking from resource booking-statuses. If not set, CareCloud uses default booking status.\n$booking->setCreatedAt('2023-03-08 10:51:34'); // string | Date and time of the booking (YYYY-MM-DD HH:MM:SS)\n\n$body = new BookingsBody();\n$body->setBooking($booking);\n\n// Call endpoint and post data\ntry\n{\n    $post_booking = $care_cloud->bookingsApi()->postBooking(\n        $body,\n        $accept_language\n    );\n    $booking_id = $post_booking->getData()->getBookingId();\n    var_dump($booking_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/bookings/{booking_id}':
    get:
      tags:
        - Bookings
      summary: Get a booking
      description: Get information about a specific booking.
      operationId: getBooking
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/booking_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Booking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$booking_id = '89cc1c4476e0ec8aa25f46cbff'; // string | The unique ID of the booking\n\n// Call endpoint and get data\ntry\n{\n    $get_booking = $care_cloud->bookingsApi()->getBooking(\n        $booking_id,\n        $accept_language\n    );\n    $booking = $get_booking->getData();\n    var_dump($booking);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    put:
      tags:
        - Bookings
      summary: Update a booking
      description: Update a specific booking.
      operationId: putBooking
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/booking_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                booking:
                  properties:
                    customer_id:
                      type: string
                      description: The unique ID of the customer that created the booking.
                      example: 8ea6abece4cd0a4ded0a29f093
                    booking_status:
                      type: string
                      readOnly: false
                      description: |
                        Current status of the booking.
                        *Possible values are available in [booking-statuses](#tag/Booking-statuses)*
                      example: 86e05affc7a7abefcd513ab400
                    data:
                      oneOf:
                        - type: string
                        - type: array
                          items:
                            type: string
                        - type: object
                      readOnly: false
                      description: Additional data of the booking. Serialized data in JSON.
                      example: '"{\"size\":20, \"unit\": \"cm\"}"'
              required:
                - booking
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\BookingsBookingIdBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\BookingsbookingIdBooking;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$booking_id = '8bc48e4b5da4c61eddb98e59fe'; // string | The unique ID of the booking\n\n// Set the request body\n$booking = new BookingsbookingIdBooking();\n$booking->setCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID of the customer\n$booking->setBookingStatus('8bed991c68a470e7aaeffbf048'); //string | Current status of the booking from resource booking-statuses\n\n$body = new BookingsBookingIdBody();\n$body->setBooking($booking);\n\n// Call endpoint and put data\ntry\n{\n    $care_cloud->bookingsApi()->putBooking(\n        $body,\n        $booking_id,\n        $accept_language\n    );\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    delete:
      tags:
        - Bookings
      summary: Delete a booking
      description: Delete selected booking.
      operationId: deleteBooking
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/booking_id_path'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$booking_id = '88dd0f3a065bdca689fee059b4'; // string | The unique ID of the booking\n\n// Call endpoint and delete data\ntry\n{\n    $care_cloud->bookingsApi()->deleteBooking(\n        $booking_id,\n        $accept_language\n    );\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /booking-tickets:
    get:
      tags:
        - Booking tickets
      summary: Get all booking tickets
      description: Get information about all booking tickets.
      operationId: getBookingTickets
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/valid_from_full'
        - $ref: '#/components/parameters/valid_to_full'
        - $ref: '#/components/parameters/valid_only'
        - $ref: '#/components/parameters/booking_ticket_property_id'
        - $ref: '#/components/parameters/booking_ticket_property_value'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      booking_tickets:
                        type: array
                        description: Collection of booking tickets.
                        items:
                          $ref: '#/components/schemas/BookingTicket'
                      total_items:
                        type: integer
                        description: The number of all found booking tickets.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional)\n$valid_from = null; // string | Date and time from when is record already valid. (YYYY-MM-DD HH:MM:SS) (optional)\n$valid_to = null; // string | Date and time till when is record still valid. (YYYY-MM-DD HH:MM:SS) (optional)\n$valid_only = null; // boolean | true - returns only records valid in current moment / false - returns all records of the resource without time validation (optional)\n$booking_ticket_property_id = null; // string | Booking ticket property id from resource booking-ticket-properties (optional)\n$booking_ticket_property_value = null; // Booking ticket property record value from booking-ticket-properties in case of datatype with multiple values (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_booking_tickets = $care_cloud->bookingTicketsApi()->getBookingTickets(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $customer_id,\n        $valid_from,\n        $valid_to,\n        $valid_only,\n        $booking_ticket_property_id,\n        $booking_ticket_property_value\n    );\n    $booking_tickets = $get_booking_tickets->getData()->getBookingTickets();\n    $total_items = $get_booking_tickets->getData()->getTotalItems();\n    var_dump($booking_tickets);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/booking-tickets/{booking_ticket_id}':
    get:
      tags:
        - Booking tickets
      summary: Get a booking ticket
      description: Get information about a specific booking ticket.
      operationId: getBookingTicket
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/booking_ticket_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BookingTicket'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$booking_ticket_id = '89d88719b8b442de2d11b401a2'; // string | The unique ID of the booking ticket\n\n// Call endpoint and get data\ntry\n{\n    $get_booking_ticket = $care_cloud->bookingTicketsApi()->getBookingTicket(\n        $booking_ticket_id,\n        $accept_language\n    );\n    $booking_ticket = $get_booking_ticket->getData();\n    var_dump($booking_ticket);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/booking-tickets/{booking_ticket_id}/time-slots':
    get:
      tags:
        - Booking tickets
      summary: Get a collection time slots depends on booking ticket
      description: Get information about all time slots depends on booking ticket.
      operationId: getSubBookingTicketsTimeSlots
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/booking_ticket_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/free_capacity_only'
        - $ref: '#/components/parameters/time_from_full'
        - $ref: '#/components/parameters/time_to_full'
        - $ref: '#/components/parameters/booking_ticket_property_id'
        - $ref: '#/components/parameters/booking_ticket_property_value'
        - $ref: '#/components/parameters/customer_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      time_slots:
                        type: array
                        description: List of booking time slots.
                        items:
                          $ref: '#/components/schemas/TimeSlot'
                      total_items:
                        type: integer
                        description: The number of all found time slots.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$booking_ticket_id = '89d88719b8b442de2d11b401a2'; // string | The unique ID of the booking ticket\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$free_only = null; // bool | Possible values: true - returns all time slots with free capacity. / false - returns all occupied time slots. / no value - all time slots are returned (optional)\n$time_from = null; // string | Filter results on the start of the time interval. (YYYY-MM-DD HH:MM:SS) (optional)\n$time_to = null; // string | Filter results on the end of the time interval. (YYYY-MM-DD HH:MM:SS) (optional)\n$booking_ticket_property_id = null; // string | Booking ticket property id from resource booking-ticket-properties. (optional)\n$booking_ticket_property_value = null; // string | Booking ticket property record value from booking-ticket-properties in case of datatype with multiple values (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_booking_time_slots = $care_cloud->bookingTicketsApi()->getSubBookingTicketsTimeSlots(\n        $booking_ticket_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $free_only,\n        $time_from,\n        $time_to,\n        $booking_ticket_property_id,\n        $booking_ticket_property_value\n    );\n    $booking_time_slots = $get_booking_time_slots->getData()->getTimeSlots();\n    $total_items = $get_booking_time_slots->getData()->getTotalItems();\n    var_dump($booking_time_slots);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /booking-ticket-properties:
    get:
      tags:
        - Booking ticket properties
      summary: Get all booking ticket properties
      description: Get information about booking ticket properties.
      operationId: getBookingTicketProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      booking_ticket_properties:
                        type: array
                        description: List of all booking ticket properties.
                        items:
                          $ref: '#/components/schemas/Property'
                      total_items:
                        type: integer
                        description: The number of all found booking ticket properties.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_booking_ticket_properties = $care_cloud->bookingTicketsPropertiesApi()->getBookingTicketProperties(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $booking_ticket_properties = $get_booking_ticket_properties->getData()->getBookingTicketProperties();\n    $total_items = $get_booking_ticket_properties->getData()->getTotalItems();\n    var_dump($booking_ticket_properties);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/booking-ticket-properties/{booking_ticket_property_id}':
    get:
      tags:
        - Booking ticket properties
      summary: Get a booking ticket property
      description: Get information about a specific booking ticket property.
      operationId: getBookingTicketProperty
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/booking_ticket_property_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$booking_ticket_property_id = 'firstname'; // string | The unique ID of the booking ticket property\n\n// Call endpoint and get data\ntry\n{\n    $get_booking_ticket_property = $care_cloud->bookingTicketsPropertiesApi()->getBookingTicketProperty(\n        $booking_ticket_property_id,\n        $accept_language\n    );\n    $booking_ticket_property = $get_booking_ticket_property->getData();\n    var_dump($booking_ticket_property);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /bookings/actions/average-booking-busy-times:
    post:
      tags:
        - Bookings
      summary: Get information about booking busy times
      description: |
        The action method provides data on the busiest times of bookings in a period. The period can change depending on the parameters set up.
        The chart contains time intervals on the X axis and Percentage information about reserved time slots (70% of slots for the time is reserved) on the Y axis.
      operationId: postBookingBusyTimes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                booking_date:
                  type: string
                  description: The date when you want to check how busy the bookings are
                  example: '2023-01-15'
                time_period:
                  type: string
                  enum:
                    - day
                    - week
                    - month
                    - year
                  description: 'The period that the algorithm uses to calculate past busy times and return your data in that period. If you set the value as DAY, the algorithm will return the data for one day in an hour range.'
                  example: week
                booking_ticket_id:
                  type: string
                  description: 'The unique ID of the booking ticket. If not set, the data will be returned for all available tickets.'
                  example: 13b8984a16913b8984a169cc490a
                booking_property_id:
                  type: string
                  description: 'Booking ticket property ID from resource [booking-ticket-properties](https://carecloud.readme.io/reference/getbookingticketproperties). The parameter determines property, which is used to filter resources by their properties. The parameter must be used in combination with property_value otherwise is ignored in the request.'
                  example: store
                booking_property_value:
                  type: string
                  description: 'Booking ticket property record value from [booking-ticket-properties](https://carecloud.readme.io/reference/getbookingticketproperties) in case of datatype with multiple values. Parameter filters resources depends of store property record value. The parameter must be used in combination with property_id otherwise is ignored in the request.'
                  example: 89ac83ca207a20c62c79bf
              required:
                - booking_date
                - time_period
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      time_unit:
                        type: string
                        readOnly: true
                        description: The time unit for X-axis
                        example: hour
                      chart_data:
                        type: array
                        description: Data for the chart display. The items are ordered by X-axis values ascending.
                        items:
                          $ref: '#/components/schemas/ChartPointData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsAssignfreecardBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set card info to the request body\n$body = new ActionsAssignfreecardBody();\n$body->setCustomerId('83ad6b11209eaf4e2a18e0b319'); // string | The unique ID for the card holder\n$body->setCardTypeId('8bed991c68a470e7aaeffbf048'); // string | The unique ID for the card type\n\n// Call endpoint and post data\ntry\n{\n    $post_assign_card = $care_cloud->cardsApi()->postAssignCard($body, $accept_language);\n    $card_id = $post_assign_card->getData()->getCardId();\n    var_dump($card_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /booking-statuses:
    get:
      tags:
        - Booking statuses
      summary: Get all booking statuses
      description: Get information about all booking statuses.
      operationId: getBookingStatuses
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      booking_statuses:
                        type: array
                        description: Collection of booking statuses.
                        items:
                          $ref: '#/components/schemas/BookingStatus'
                      total_items:
                        type: integer
                        description: The number of all found booking statuses.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_booking_statuses = $care_cloud->bookingStatusesApi()->getBookingStatuses(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $booking_statuses = $get_booking_statuses->getData()->getBookingStatuses();\n    $total_items = $get_booking_statuses->getData()->getTotalItems();\n    var_dump($booking_statuses);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/booking-statuses/{booking_status_id}':
    get:
      tags:
        - Booking statuses
      summary: Get a booking status
      description: Get information about a specific booking status.
      operationId: getBookingStatus
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/booking_status_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BookingStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$booking_status_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the booking status\n\n// Call endpoint and get data\ntry\n{\n    $get_booking_status = $care_cloud->bookingStatusesApi()->getBookingStatus(\n        $booking_status_id,\n        $accept_language\n    );\n    $booking_status = $get_booking_status->getData();\n    var_dump($booking_status);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /campaigns:
    get:
      tags:
        - Campaigns
      summary: Collection of campaigns
      description: Get information about all available campaigns.
      operationId: getCampaigns
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      campaigns:
                        type: array
                        description: List of the campaigns.
                        items:
                          $ref: '#/components/schemas/Campaign'
                      total_items:
                        type: integer
                        description: The number of all found campaigns.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null))\n\n// Call endpoint and get data\ntry\n{\n    $get_campaigns = $care_cloud->campaignsApi()->getCampaigns($accept_language, $count, $offset, $sort_field, $sort_direction, $name);\n    $campaigns = $get_campaigns->getData()->getCampaigns();\n    $total_items = $get_campaigns->getData()->getTotalItems();\n    var_dump($campaigns);\n    var_dump($total_items);\n}\ncatch (ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Campaigns
      summary: Create a campaign
      description: Add a new campaign.
      operationId: postCampaign
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign:
                  $ref: '#/components/schemas/Campaign'
              required:
                - campaign
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      campaign_id:
                        type: string
                        description: The unique ID of the campaign.
                        example: 8ad8b2b701199684f1222961d6
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Campaign;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CampaignsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set campaign details\n$external_id = null; // string | The external id of the campaign (optional, default is null)\n$parent_id = null; // string | ID of the parent campaign (optional, default is null)\n$name = 'New campaign name'; // string | Name of the campaign\n\n$campaign = new Campaign();\n$campaign->setExternalId($external_id);\n$campaign->setParentId($parent_id);\n$campaign->setName($name);\n\n// Set the request body\n$body = new CampaignsBody();\n$body->setCampaign($campaign);\n\n// Call endpoint and post data\ntry\n{\n    $new_campaign = $care_cloud->campaignsApi()->postCampaign($body, $accept_language);\n    $campaign_id = $new_campaign->getData()->getCampaignId();\n    var_dump($campaign_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/campaigns/{campaign_id}':
    get:
      tags:
        - Campaigns
      summary: Detail of a specific campaign
      description: Get information about a specific campaign.
      operationId: getCampaign
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/campaign_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Campaign'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$campaign_id = '82db62087b0f79a6e14e5747e7'; // string | The unique ID of the campaign\n\n// Call endpoint and get data\ntry\n{\n    $get_campaign = $care_cloud->campaignsApi()->getCampaign($campaign_id, $accept_language);\n    $campaign = $get_campaign->getData();\n    var_dump($campaign);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /campaign-products:
    get:
      tags:
        - Campaign products
      summary: Collection of campaign products
      description: Get information about all available campaign products.
      operationId: getCampaignProducts
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/product_code'
        - $ref: '#/components/parameters/display_in'
        - $ref: '#/components/parameters/type_id'
        - $ref: '#/components/parameters/campaign_store_id'
        - $ref: '#/components/parameters/value_type_id'
        - $ref: '#/components/parameters/is_valid'
        - $ref: '#/components/parameters/valid_from_full'
        - $ref: '#/components/parameters/valid_to_full'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      campaign_products:
                        type: array
                        description: List of the campaign products.
                        items:
                          $ref: '#/components/schemas/CampaignProduct'
                      total_items:
                        type: integer
                        description: The number of all found campaign products.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null))\n$code = null; // string | Code of the product (optional, default is null)\n$display_in = null; // string | Place to display campaign product. (optional, default is null)\n$type_id = null; // string[] | Type of the customer for a campaign product. (optional, default is null)\n$store_id = null; // string | Parameter filters all campaign products from [store](#tag/Stores) by store id (optional, default is null)\n$value_type_id = null; // integer | Type of value (1 - percentage discount value, 2 - final price) (optional, default is null)\n$is_valid = null; // bool | *in validity range - true / before or after validity range - false / no value - all* (optional, default is null)\n$valid_from = null; //string | Date and time from when is record already valid. *(YYYY-MM-DD HH:MM:SS)* (optional, default is null)\n$valid_to = null; //string | Date and time to when is record still valid. *(YYYY-MM-DD HH:MM:SS)* (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_campaign_products = $care_cloud->campaignProductsApi()->getCampaignProducts(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name,\n        $code,\n        $display_in,\n        $type_id,\n        $store_id,\n        $value_type_id,\n        $is_valid,\n        $valid_from,\n        $valid_to\n    );\n    $campaign_products = $get_campaign_products->getData()->getCampaignProducts();\n    $total_items = $get_campaign_products->getData()->getTotalItems();\n    var_dump($campaign_products);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Campaign products
      summary: Create a campaign product
      description: Add a new campaign product.
      operationId: postCampaignProduct
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign_product:
                  $ref: '#/components/schemas/CampaignProduct'
              required:
                - campaign_product
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      campaign_product_id:
                        type: string
                        description: The unique ID of the campaign product.
                        example: 8bed991c68a470e7aaeff
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CampaignPresentationData;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CampaignProduct;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CampaignproductsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set campaign presentation data details\n$presentation_data = new CampaignPresentationData();\n$presentation_data->setName('Macbook Air 13\" M1 10% off'); // string | Name of the product\n$presentation_data->setSubtitle('Discount only in following two days'); // string | Text of the campaign product subtitle (optional)\n$presentation_data->setNote('This offer is limited');  // string | Text of the campaign product note (optional)\n$presentation_data->setDescription(null); // string | Text of the campaign product description (optional)\n$presentation_data->setImageUrl(null); // string | URL address of the image (optional)\n\n// Set basic information about new campaign product\n$campaign_product = new CampaignProduct();\n$campaign_product->setProductId('8fd73167342d06899c4c015320'); // string | The unique ID for the product\n$campaign_product->setCurrencyId('8bed991c68a470e7aaeffbf048'); // string | The unique ID for the currency\n$campaign_product->setCampaignId('82db62087b0f79a6e14e5747e7'); // string | The unique ID for the campaign\n$campaign_product->setValue(100); // float | Value of the product\n$campaign_product->setValueTypeId(2); // int | Type of value (1 - percentage discount value, 2 - final price)\n$campaign_product->setValidFrom('2022-10-17 00:00:00'); // string | Valid from (YYYY-MM-DD HH:MM:SS)\n$campaign_product->setValidTo('2022-10-19 00:00:00'); // string | Valid to (YYYY-MM-DD HH:MM:SS)\n$campaign_product->setDisplayIn(array()); // string[] | List of possible display places (optional)\n$campaign_product->setTypeId('86e05affc7a7abefcd513ab400'); // string | Type of the campaign product\n$campaign_product->setPresentationData($presentation_data);\n\n// Set information about new campaign product to the request body\n$body = new CampaignproductsBody();\n$body->setCampaignProduct($campaign_product);\n\n// Call endpoint and post data\ntry\n{\n    $new_campaign_product = $care_cloud->campaignProductsApi()->postCampaignProduct($body, $accept_language);\n    $new_campaign_product_id = $new_campaign_product->getData()->getCampaignProductId();\n    var_dump($new_campaign_product_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/campaign-products/{campaign_product_id}':
    get:
      tags:
        - Campaign products
      summary: Detail of a specific campaign product
      description: Get information about all details of a specific campaign product.
      operationId: getCampaignProduct
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/campaign_product_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CampaignProduct'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$campaign_product_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the campaign product\n\n// Call endpoint and get data\ntry\n{\n    $get_campaign_product = $care_cloud->campaignProductsApi()->getCampaignProduct($campaign_product_id, $accept_language);\n    $campaign_product = $get_campaign_product->getData();\n    var_dump($campaign_product);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/campaign-products/{campaign_product_id}/campaign-product-store-records':
    get:
      tags:
        - Campaign products
      summary: Get a campaign product store records
      description: Get information about all campaign products store records.
      operationId: getCampaignProductStoreRecords
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/campaign_product_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      campaign_product_store_records:
                        type: array
                        description: List of the campaign product store records.
                        items:
                          $ref: '#/components/schemas/CampaignProductStoreRecord'
                      total_items:
                        type: integer
                        description: The number of all found campaign product store records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$campaign_product_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the campaign product\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_campaign_product_store_records = $care_cloud->campaignProductsApi()->getCampaignProductStoreRecords(\n        $campaign_product_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $campaign_product_store_records = $get_campaign_product_store_records->getData()->getCampaignProductStoreRecords();\n    $total_items = $get_campaign_product_store_records->getData()->getTotalItems();\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Campaign products
      summary: Add a store to the campaign product
      description: 'Add one of the [stores](#tag/Stores) to a campaign product.'
      operationId: postCampaignProductStoreRecord
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/campaign_product_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign_product_store_record:
                  $ref: '#/components/schemas/CampaignProductStoreRecord'
              required:
                - campaign_product_store_record
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      campaign_product_store_record_id:
                        type: string
                        description: The unique ID of the campaign product store record.
                        example: 8bd253a890067595008f1d44aa
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CampaignProductIdCampaignproductstorerecordsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CampaignProductStoreRecord;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once 'vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$campaign_product_id = '81eaeea13b8984a169c490a325'; // string | The unique ID of the campaign product\n\n// Set campaign product's store record data\n$campaign_product_store_record = new CampaignProductStoreRecord();\n$campaign_product_store_record->setStoreId('82de12eb8b138791e678fd11c3'); // string | The unique ID of the store\n$campaign_product_store_record->setCampaignProductId($campaign_product_id); // string | The unique ID of the campaign product\n\n// Set the request body\n$body = new CampaignProductIdCampaignproductstorerecordsBody();\n$body->setCampaignProductStoreRecord($campaign_product_store_record);\n\n// Call endpoint and post data\ntry\n{\n    $new_campaign_product_store_record = $care_cloud->campaignProductsApi()->postCampaignProductStoreRecord($body, $campaign_product_id, $accept_language);\n    $campaign_product_store_record_id = $new_campaign_product_store_record->getData()->getCampaignProductStoreRecordId();\n    var_dump($campaign_product_store_record_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /cards:
    get:
      tags:
        - Cards
      summary: Get all cards
      description: Get information about all customer cards.
      operationId: getCards
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/card_number'
        - $ref: '#/components/parameters/card_type_id'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/is_valid'
        - $ref: '#/components/parameters/card_number_list'
        - $ref: '#/components/parameters/search_secondary_card_number'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      cards:
                        type: array
                        description: Collection of customer cards.
                        items:
                          $ref: '#/components/schemas/Card'
                      total_items:
                        type: integer
                        description: The number of all found customer cards.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional, default is null)\n$card_number = null; // string | Number of the customer card (optional, default is null)\n$card_type_id = null; // string | The unique ID of the card type (optional, default is null)\n$state = null; // integer | State of the customer. Possible values are: 0 - deleted / 1 - active / 2 - non active (optional, default is null)\n$is_valid = null; // boolean | in validity range - true / before or after validity range - false / no value - all (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_cards = $care_cloud->cardsApi()->getCards(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $customer_id,\n        $card_number,\n        $card_type_id,\n        $state,\n        $is_valid\n    );\n    $cards = $get_cards->getData()->getCards();\n    $total_items = $get_cards->getData()->getTotalItems();\n    var_dump($cards);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Cards
      summary: Create a card
      description: |
        Add a new customer card.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: postCard
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card:
                  $ref: '#/components/schemas/Card'
              required:
                - card
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      card_id:
                        type: string
                        description: The unique ID of the card.
                        example: 81a94c48474bc45c03d41f7016
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Card;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CardsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set card info\n$card = new Card();\n$card->setCustomerId('87af991126405bf8e7dfb36045'); // string | The unique ID for the card holder\n$card->setCardTypeId('81eaeea13b8984a169c490a325'); // string | The unique ID for the card type\n$card->setCardNumber('CARD10101'); // string | Card number\n$card->setValidFrom('2022-10-18 16:18:00'); // string | Card validity from (YYYY-MM-DD HH:MM:SS)\n$card->setValidTo('2023-10-18 16:18:00'); // string | Card validity to (YYYY-MM-DD HH:MM:SS)\n$card->setStoreId(null); // string | The unique ID for the store, where the card was assigned to a customer\n$card->setState(1); // integer | State of the card Possible values are: 0 - blocked / 1 - active\n\n$body = new CardsBody();\n$body->setCard($card);\n\n// Call endpoint and post data\ntry\n{\n    $post_card = $care_cloud->cardsApi()->postCard($body, $accept_language);\n    $card_id = $post_card->getData()->getCardId();\n    var_dump($card_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/cards/{card_id}':
    get:
      tags:
        - Cards
      summary: Get a card
      description: Get information about a specific customer card.
      operationId: getCard
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/card_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Card'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$card_id = '82db62087b0f79a6e14e5747e7'; // string | The unique ID of the card\n\n// Call endpoint and get data\ntry\n{\n    $get_card = $care_cloud->cardsApi()->getCard($card_id, $accept_language);\n    $card = $get_card->getData();\n    var_dump($card);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    put:
      tags:
        - Cards
      summary: Update a card
      description: Update a specific customer card.
      operationId: putCard
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/card_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card:
                  $ref: '#/components/schemas/Card'
              required:
                - card
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Card;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CardsCardIdBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$card_id = '82db62087b0f79a6e14e5747e7'; // string | The unique ID of the card\n\n// Set card info\n$card = new Card();\n$card->setCustomerId('8fac83212755b729a2f3f9bbb0'); // string | The unique ID for the card holder\n$card->setCardTypeId('81eaeea13b8984a169c490a325'); // string | The unique ID for the card type\n$card->setCardNumber('CARD1011'); // string | Card number\n$card->setValidFrom('2022-10-17 16:18:00'); // string | Card validity from (YYYY-MM-DD HH:MM:SS)\n$card->setValidTo('2023-10-17 16:18:00'); // string | Card validity to (YYYY-MM-DD HH:MM:SS)\n$card->setStoreId(null); // string | The unique ID for the store, where the card was assigned to a customer\n$card->setState(1); // integer | State of the card Possible values are: 0 - blocked / 1 - active\n\n// Set card info to the request body\n$body = new CardsCardIdBody();\n$body->setCard($card);\n\n// Call endpoint and put data\ntry\n{\n    $care_cloud->cardsApi()->putCard($body, $card_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /cards/actions/assign-free-card:
    post:
      tags:
        - Cards
      summary: Assign free card
      description: |
        Assign a free card in order to the customer.
      operationId: postAssignCard
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card_type_id:
                  type: string
                  description: The unique ID of the card type.
                  example: 83d1d11ea3884a5d33253fe214
                customer_id:
                  type: string
                  description: The unique ID of the card holder.
                  example: 8ea2591121e636086a4a9c0992
                card_number:
                  type: string
                  description: Card number.
                  example: '1000000000016'
              required:
                - card_type_id
                - customer_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      card_id:
                        type: string
                        readOnly: true
                        description: The unique ID of the card.
                        example: 8fd73167342d06899c4c015320
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsAssignfreecardBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set card info to the request body\n$body = new ActionsAssignfreecardBody();\n$body->setCustomerId('83ad6b11209eaf4e2a18e0b319'); // string | The unique ID for the card holder\n$body->setCardTypeId('8bed991c68a470e7aaeffbf048'); // string | The unique ID for the card type\n\n// Call endpoint and post data\ntry\n{\n    $post_assign_card = $care_cloud->cardsApi()->postAssignCard($body, $accept_language);\n    $card_id = $post_assign_card->getData()->getCardId();\n    var_dump($card_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /cards/actions/validate-free-card:
    post:
      tags:
        - Cards
      summary: Validate free card
      description: |
        Method validates if a card is free to use(it is not blocked, used by somebody else or even not exists).
      operationId: postValidateFreeCard
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card_number:
                  type: string
                  description: Card number to validate.
                  example: '1000000000016'
              required:
                - card_number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      is_free_to_use:
                        type: boolean
                        enum:
                          - true
                          - false
                        readOnly: true
                        description: An information if the card is free to use.
                        example: 'false'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsAssignfreecardBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set card info to the request body\n$body = new ActionsAssignfreecardBody();\n$body->setCustomerId('83ad6b11209eaf4e2a18e0b319'); // string | The unique ID for the card holder\n$body->setCardTypeId('8bed991c68a470e7aaeffbf048'); // string | The unique ID for the card type\n\n// Call endpoint and post data\ntry\n{\n    $post_assign_card = $care_cloud->cardsApi()->postAssignCard($body, $accept_language);\n    $card_id = $post_assign_card->getData()->getCardId();\n    var_dump($card_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /cards/actions/generate-digital-card-file:
    post:
      tags:
        - Cards
      summary: Generate virtual card file
      description: Generate file with virtual card. File can be generated as a PNG file (QR code or Barcode) or file for Apple Wallet.
      operationId: postGenerateDigitalCard
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card_id:
                  description: ID of the card. It will generates file from this card.
                  type: string
                  example: 8fd73167342d06899c4c015320
                file_type:
                  description: 'Type of the final file. *Possible values: png - generates picture of barcode in png format / qr-png - generates picture of QR code in png format /wallet - generates pass package file for Apple Wallet*'
                  type: string
                  enum:
                    - png
                    - wallet
                    - qr-png
                  example: png
              required:
                - card_id
                - file_type
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      file_url:
                        description: URL address of the final virtual card file.
                        type: string
                        example: 'https://dev-carecloud.cortex.cz//crm/scripts/generate_mobile_card.php?account=80c4d97a736d98a90badb5128&card=8bd4811700646e0b1788109b8'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsGeneratedigitalcardfileBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set info to the request body\n$body = new ActionsGeneratedigitalcardfileBody();\n$body->setCardId('8bd253a890067595008f1d44aa'); // string | ID of the card. It will generate file from this card\n$body->setFileType('png'); // string | Type of the final file Possible values: png - generates picture in png format /wallet - generates pass package file for Apple Wallet\n\n// Call endpoint and post data\ntry\n{\n    $post_generate_card = $care_cloud->cardsApi()->postGenerateDigitalCard($body, $accept_language);\n    $file_url = $post_generate_card->getData()->getFileUrl();\n    var_dump($file_url);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /cards/batch:
    post:
      tags:
        - Cards
      summary: Create a batch of cards
      description: |
        Batch process helps to add multiple cards in one request.<br/> ⚠️ Adjust batch sizes based on processing times. We recommended use maximum amount of 1000 records and adjust the batch size based on processing time.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: postBatchCards
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cards:
                  type: array
                  description: List of the CareCloud cards.
                  items:
                    $ref: '#/components/schemas/Card'
              required:
                - cards
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Card;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CardsBatchBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the request body\n$card1 = new Card();\n$card1->setCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID of the customer (optional)\n$card1->setCardTypeId('8bed991c68a470e7aaeffbf048'); // string | The unique ID of the card type (optional)\n$card1->setCardNumber('20230310001'); // string | The number of the card\n$card1->setValidFrom(null); // string | Card validity from (YYYY-MM-DD HH:MM:SS) (optional)\n$card1->setValidTo(null); // string | Card validity to (YYYY-MM-DD HH:MM:SS) (optional)\n$card1->setStoreId(null); // string | The unique ID of the store (optional)\n$card1->setState(1); // integer | Possible values are: 0 - blocked / 1 - active\n\n$body = new CardsBatchBody();\n$body->setCards(array($card1));\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->cardsApi()->postBatchCards(\n        $body,\n        $accept_language\n    );\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /card-types:
    get:
      tags:
        - Card types
      summary: Get information about all card types
      description: Get information about all card types as a list of all customer card types.
      operationId: getCardTypes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      card_types:
                        type: array
                        description: Collection of all card types.
                        items:
                          $ref: '#/components/schemas/CardType'
                      total_items:
                        type: integer
                        description: The number of all found card types.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_card_types = $care_cloud->cardTypesApi()->getCardTypes();\n    $card_types = $get_card_types->getData()->getCardTypes();\n    $total_items = $get_card_types->getData()->getTotalItems();\n    var_dump($card_types);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Card types
      summary: Create a new card type
      description: Add a new customer card type.
      operationId: postCardType
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card_type:
                  $ref: '#/components/schemas/CardType'
              required:
                - card
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      card_type_id:
                        type: string
                        description: The unique ID of the card type.
                        example: 8bed991c68a470e7aaeffbf048
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CardType;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CardtypesBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set card type data\n$card_type = new CardType();\n$card_type->setName('New card type name'); // string | Name of the card type\n$card_type->setPrefix('12'); // string | Prefix of the specific card type cards\n\n// Set data to the request body\n$body = new CardtypesBody();\n$body->setCardType($card_type);\n\n// Call endpoint and post data\ntry\n{\n    $post_card_type = $care_cloud->cardTypesApi()->postCardType($body, $accept_language);\n    $new_card_type_id = $post_card_type->getData()->getCardTypeId();\n    var_dump($new_card_type_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/card-types/{card_type_id}':
    get:
      tags:
        - Card types
      summary: Get a card type
      description: Get information about a specific customer card type.
      operationId: getCardType
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/card_type_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CardType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$card_type_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the card type\n\n// Call endpoint and get data\ntry\n{\n    $get_card_type = $care_cloud->cardTypesApi()->getCardType($card_type_id);\n    $card_type = $get_card_type->getData();\n    var_dump($card_type);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    put:
      tags:
        - Card types
      summary: Update a card type
      description: Update a specific customer card type.
      operationId: putCardType
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/card_type_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card_type:
                  $ref: '#/components/schemas/CardType'
              required:
                - card_type
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CardType;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CardtypesCardTypeIdBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$card_type_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the card type\n\n// Set card type data\n$card_type = new CardType();\n$card_type->setName('Virtual card 11'); // string | Name of the card type\n$card_type->setPrefix('11'); // string | Prefix of the specific card type cards\n\n// Set data to the request body\n$body = new CardtypesCardTypeIdBody();\n$body->setCardType($card_type);\n\n// Call endpoint and put data\ntry\n{\n    $care_cloud->cardTypesApi()->putCardType($body, $card_type_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/card-types/{card_type_id}/cards':
    get:
      tags:
        - Card types
      summary: Get a collection of cards
      description: Get information about all cards by card types resource.
      operationId: getSubCardTypeCards
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/card_type_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/is_valid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      cards:
                        type: array
                        description: List of cards.
                        items:
                          $ref: '#/components/schemas/Card'
                      total_items:
                        type: integer
                        description: The number of all found cards.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$card_type_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the card type\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional, default is null)\n$is_valid = null; // boolean | in validity range - true / before or after validity range - false / no value - all (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_cards = $care_cloud->cardTypesApi()->getSubCardTypeCards($card_type_id, $accept_language);\n    $cards = $get_cards->getData()->getCards();\n    $total_items = $get_cards->getData()->getTotalItems();\n    var_dump($cards);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /communication-channels:
    get:
      tags:
        - Communication channels
      summary: Get all communication channels
      description: Get a list of communication channels accepted in CRM CareCloud.
      operationId: getCommunicationChannels
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      communication_channels:
                        type: array
                        description: Structure of the communication channel.
                        items:
                          $ref: '#/components/schemas/CommunicationChannel'
                      total_items:
                        type: integer
                        description: Total count of found items of the resource communication channels.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_communication_channels = $care_cloud->communicationChannelsApi()->getCommunicationChannels(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $communication_channels = $get_communication_channels->getData()->getCommunicationChannels();\n    $total_items = $get_communication_channels->getData()->getTotalItems();\n    var_dump($communication_channels);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/communication-channels/{communication_channel_id}':
    get:
      tags:
        - Communication channels
      summary: Detail of a communication channel
      description: Get information about a specific communication channel.
      operationId: getCommunicationChannel
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/communication_channel_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CommunicationChannel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$communication_channel_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the communication channel\n\n// Call endpoint and get data\ntry\n{\n    $get_communication_channel = $care_cloud->communicationChannelsApi()->getCommunicationChannel(\n        $communication_channel_id,\n        $accept_language\n    );\n    $communication_channel = $get_communication_channel->getData();\n    var_dump($communication_channel);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /countries:
    get:
      tags:
        - Countries
      summary: Get all countries
      description: Get a list of countries accepted in CRM CareCloud.
      operationId: getCountries
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/country_id'
        - $ref: '#/components/parameters/country_name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      countries:
                        type: array
                        description: List of the countries.
                        items:
                          $ref: '#/components/schemas/Country'
                      total_items:
                        type: integer
                        description: The number of all found countries.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_countries = $care_cloud->countriesApi()->getCountries(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $countries = $get_countries->getData()->getCountries();\n    var_dump($countries);\n    $total_items = $get_countries->getData()->getTotalItems();\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /credits:
    get:
      tags:
        - Credits
      summary: Get all credit records
      description: Get a list of all credit transactions and their current values.
      operationId: getCredits
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/credit_type_id'
        - $ref: '#/components/parameters/create_credit_time_from'
        - $ref: '#/components/parameters/create_credit_time_to'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      credits:
                        type: array
                        description: List of the credit records.
                        items:
                          $ref: '#/components/schemas/Credit'
                      total_items:
                        type: integer
                        description: The number of all found credit records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional)\n$credit_type_id = null; // string | The unique ID of the credit type (optional)\n$create_credit_time_from = null; // string | Date and time from of the credit record's creation (YYYY-MM-DD HH:MM:SS) (optional)\n$create_credit_time_to = null; // string | Date and time to of the credit record's creation (YYYY-MM-DD HH:MM:SS) (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_credit_records = $care_cloud->creditsApi()->getCredits(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $customer_id,\n        $credit_type_id,\n        $create_credit_time_from,\n        $create_credit_time_to\n    );\n    $credit_records = $get_credit_records->getData()->getCredits();\n    $total_items = $get_credit_records->getData()->getTotalItems();\n    var_dump($credit_records);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/credits/{credit_id}':
    get:
      tags:
        - Credits
      summary: Get a credit record
      description: Get information about a specific credit transaction.
      operationId: getCredit
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/credit_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Credit'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$credit_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the credit record\n\n// Call endpoint and get data\ntry\n{\n    $get_credit_record = $care_cloud->creditsApi()->getCredit(\n        $credit_id,\n        $accept_language\n    );\n    $credit_record = $get_credit_record->getData();\n    var_dump($credit_record);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/credits/{credit_id}/purchases':
    get:
      tags:
        - Credits
      summary: Get a collection of purchases
      description: Get information about all purchases by credit resource.
      operationId: getSubCreditPurchases
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/credit_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/store_id'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/purchase_type_id'
        - $ref: '#/components/parameters/payment_time_from'
        - $ref: '#/components/parameters/payment_time_to'
        - $ref: '#/components/parameters/purchase_items_extension'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      purchases:
                        type: array
                        description: List of purchases.
                        items:
                          $ref: '#/components/schemas/Purchase'
                      total_items:
                        type: integer
                        description: The number of all found purchases.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$credit_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the credit record\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$store_id = null; // string | The unique ID of the store (optional)\n$customer_id = null; // string | The unique ID of the customer (optional)\n$type_id = null; // string | The unique ID of the purchase type (optional)\n$payment_time_from = null; // string | Date and time from of the purchase payment (YYYY-MM-DD HH:MM:SS) (optional)\n$payment_time_to = null; // string | Date and time to of the purchase payment (YYYY-MM-DD HH:MM:SS) (optional)\n$purchase_items_extension = null; // boolean | If true, resource returns extended response with purchase items. If false, the resource won't be extended (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_purchases = $care_cloud->creditsApi()->getSubCreditPurchases(\n        $credit_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $store_id,\n        $customer_id,\n        $type_id,\n        $payment_time_from,\n        $payment_time_to,\n        $purchase_items_extension\n    );\n    $purchases = $get_purchases->getData()->getPurchases();\n    $total_items = $get_purchases->getData()->getTotalItems();\n    var_dump($purchases);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /credit-history:
    get:
      tags:
        - Credit history
      summary: Get credit transaction history
      description: Get a list of credit transactions of the customer.
      operationId: getCreditHistory
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id_required'
        - $ref: '#/components/parameters/store_id'
        - $ref: '#/components/parameters/partner_id'
        - $ref: '#/components/parameters/time_from_full'
        - $ref: '#/components/parameters/time_to_full'
        - $ref: '#/components/parameters/credit_operation_type'
        - $ref: '#/components/parameters/credit_operation_note'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      credit_history:
                        type: array
                        description: List of the credit history records.
                        items:
                          $ref: '#/components/schemas/CreditHistoryRecord'
                      total_items:
                        type: integer
                        description: The number of all found credit history records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$credit_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the credit record\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$store_id = null; // string | The unique ID of the store (optional)\n$partner_id = null; // string | The unique ID of the partner (optional)\n$time_from = null; // string | Filter results on the start of the time interval (YYYY-MM-DD HH:MM:SS) (optional)\n$time_to = null; // string | Filter results on the end of the time interval (YYYY-MM-DD HH:MM:SS) (optional)\n$credit_operation_type = null; // string | Search record by the operation type name or a part of the operation type name (optional)\n$credit_operation_note = null; // string | Search record by the operation type note or a part of the operation type note (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_credit_history = $care_cloud->creditHistoryApi()->getCreditHistory(\n        $customer_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $store_id,\n        $partner_id,\n        $time_from,\n        $time_to,\n        $credit_operation_type,\n        $credit_operation_note\n    );\n    $credit_history = $get_credit_history->getData()->getCreditHistory();\n    $total_items = $get_credit_history->getData()->getTotalItems();\n    var_dump($credit_history);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /credit-types:
    get:
      tags:
        - Credit types
      summary: Get all credit types
      description: Get a list of all credit types.
      operationId: getCreditTypes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      credit_types:
                        type: array
                        description: List of the credit types.
                        items:
                          $ref: '#/components/schemas/CreditType'
                      total_items:
                        type: integer
                        description: The number of all found credit types.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_credit_types = $care_cloud->creditTypesApi()->getCreditTypes(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $credit_types = $get_credit_types->getData()->getCreditTypes();\n    $total_items = $get_credit_types->getData()->getTotalItems();\n    var_dump($credit_types);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/credit-types/{credit_type_id}':
    get:
      tags:
        - Credit types
      summary: Get a credit type
      description: Get information about a specific credit type.
      operationId: getCreditType
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/credit_type_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CreditType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$credit_type_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the credit type\n\n// Call endpoint and get data\ntry\n{\n    $get_credit_type = $care_cloud->creditTypesApi()->getCreditType(\n        $credit_type_id,\n        $accept_language\n    );\n    $credit_type = $get_credit_type->getData();\n    var_dump($credit_type);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /currencies:
    get:
      tags:
        - Currencies
      summary: Get all currencies
      description: Get a list of currencies accepted in CRM CareCloud.
      operationId: getCurrencies
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/currency_name'
        - $ref: '#/components/parameters/currency_code'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      currencies:
                        type: array
                        description: Structure of currency.
                        items:
                          $ref: '#/components/schemas/Currency'
                      total_items:
                        type: integer
                        description: Total count of found items of resource currencies.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$currency_name = null; // string | Name or part of the name of the currency you are looking for (optional)\n$currency_code = null; // string | The unique code of a currency represented by ISO code (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_currencies = $care_cloud->currenciesApi()->getCurrencies(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $currency_name,\n        $currency_code\n    );\n    $countries = $get_currencies->getData()->getCurrencies();\n    var_dump($countries);\n    $total_items = $get_currencies->getData()->getTotalItems();\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/currencies/{currency_id}':
    get:
      tags:
        - Currencies
      summary: Detail of a currency
      description: Get information about a specific currency.
      operationId: getCurrency
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/currency_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$currency_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the reward type\n\n// Call endpoint and get data\ntry\n{\n    $get_currency = $care_cloud->currenciesApi()->getCurrency(\n        $currency_id,\n        $accept_language\n    );\n    $currency = $get_currency->getData();\n    var_dump($currency);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /customers:
    post:
      tags:
        - Customers
      summary: Create a new customer
      description: Add a new customer account in CRM CareCloud.
      operationId: postCustomer
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer:
                  $ref: '#/components/schemas/Customer'
                customer_source:
                  $ref: '#/components/schemas/CustomerSourceRecord'
                password:
                  type: string
                  format: password
                  description: 'Password of the customer. Password must satisfy the following criteria and contain: At least one number (Example: 1 2 3); At least one uppercase letter (Example: A B C); Minimum lenght of password is 8 characters; Password is not part of a common password list (Example: abc123, password, 12345). If parameter `autologin=true`, password is required, otherwise is optional.'
                  example: password_example
                autologin:
                  type: boolean
                  description: 'If true, password is required and customer is logged in. Otherwise password is optional.'
                social_network_credentials:
                  $ref: '#/components/schemas/SocialNetworkCredentials'
                property_records:
                  type: array
                  description: List of an customer property records.
                  items:
                    $ref: '#/components/schemas/PropertyRecord'
              required:
                - customer
                - customer_source
                - autologin
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_id:
                        type: string
                        description: The unique ID of the customer.
                        example: 8ea6abece4cd0a4ded0a29f093
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Address;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Agreement;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CustomAgreements;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Customer;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CustomersBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CustomerSourceRecord;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PersonalInformation;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\SocialNetworkCredentials;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set address of a new customer (optional)\n$address = new Address();\n$address->setAddress1('Old Town Square') // string | Street name of the address (optional)\n->setAddress2('34') // string | Street number/land registry number (optional)\n->setAddress3('12') // string | House number (optional)\n->setZip('11000') // string | ZIP code (optional)\n->setCity('Prague 1') // string | City (optional)\n->setCountryCode('cz'); // string | ISO code of the country Possible values de / gb / us / it / cz / etc. (optional)\n\n// Set custom agreements of a new customer (optional)\n$custom_agreement1 = new CustomAgreements();\n$custom_agreement1->setAgreementId('89ce2a1b9b01f5c939fb1e20cd'); // string | The unique ID of the agreement in CareCloud\n$custom_agreement1->setAgreementValue(1); // integer | Value of the specific agreement Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set\n$custom_agreement2 = new CustomAgreements();\n$custom_agreement2->setAgreementId('8fd73167342d06899c4c015320'); // string | The unique ID of the agreement in CareCloud\n$custom_agreement2->setAgreementValue(1); // integer | Value of the specific agreement Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set\n\n$custom_agreements = array(\n    $custom_agreement1,\n    $custom_agreement2,\n);\n\n// Set agreement of a new customer\n$agreement = new Agreement();\n$agreement->setAgreementGtc(1) // integer | Consent to General Terms & Conditions Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set\n->setAgreementProfiling(1) // integer | Consent to profiling Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set\n->setAgreementMarketingCommunication(0) // integer | Consent to marketing communication Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set\n->setCustomAgreements($custom_agreements);\n\n// Set personal information of a new customer\n$personal_information = new PersonalInformation();\n$personal_information->setSalutation('Mr. Doe') // string | Customers salutation (optional)\n->setGender(1) // integer | Gender of the customer Possible values: 1 - male, 2 - female (optional)\n->setFirstName('John') // string | First name of the customer (optional)\n->setLastName('Doe') // string | Last name of the customer (optional)\n->setBirthdate('1990-01-01') // string <date> | Customer's date of birth (YYYY-MM-DD) (optional)\n->setEmail('doe@crmcarecloud.com') // string | Email of the customer (optional)\n->setPhone('420523828932') // string | Phone number of the customer with international prefix (420000000000) (optional)\n->setLanguageId('cs') // string | The unique ID for the language by ISO 639 code\n->setStoreId(null) // string | The unique ID for the original customer account store of registration (optional)\n->setPhotoUrl(null) // string | URL address of the customer photo (optional)\n->setAddress($address)\n    ->setAgreement($agreement);\n\n$customer = new Customer();\n$customer->setPersonalInformation($personal_information);\n\n// Set source record of a new customer\n$customer_source = new CustomerSourceRecord();\n$customer_source->setCustomerSourceId('8fd73167342d06899c4c015320'); // string | The unique ID of the customer source. It identifies the system where the customer belongs or the customer account was created\n$customer_source->setExternalId('external-id'); // string | The unique external id of the customer. It may be id from the other system\n\n// Set the customer  social network credentials (optional)\n$social_network_credentials = new SocialNetworkCredentials();\n$social_network_credentials->setSocialNetworkId('instagram'); // string | The unique ID of the social network\n$social_network_credentials->setSocialNetworkToken('38e223j1jedu12d1jnjqwd'); // string | Social network customer's token\n\n// Set basic information about new customer to the request body\n$body = new CustomersBody();\n$body->setCustomer($customer)\n    ->setCustomerSource($customer_source)\n    ->setPassword(null) // string | If parameter autologin=true, password is required, otherwise is optional.\n    ->setAutologin(false) // boolean | If true, password is required and customer is logged in\n    ->setSocialNetworkCredentials($social_network_credentials);\n\n// Call endpoint and post data\ntry\n{\n    $post_customer = $care_cloud->customersApi()->postCustomer($body, $accept_language);\n    $customer_id = $post_customer->getData()->getCustomerId();\n    var_dump($customer_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
        - lang: PHP
          label: CareCloud Client
          source: |
            require_once(__DIR__ . '/vendor/autoload.php');
            // Configure HTTP basic authorization: basicAuth
            $config = CareCloud\Configuration::getDefaultConfiguration()
                          ->setUsername('YOUR_USERNAME')
                          ->setPassword('YOUR_PASSWORD');
                // Configure HTTP bearer authorization: bearerAuth
                $config = CareCloud\Configuration::getDefaultConfiguration()
                ->setAccessToken('YOUR_ACCESS_TOKEN');


            $apiInstance = new CareCloud\Api\CustomersApi(
                // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
                // This is optional, `GuzzleHttp\Client` will be used as default.
                new GuzzleHttp\Client(),
                $config
            );
            $body = new \CareCloud\Model\CustomersBody(); // \CareCloud\Model\CustomersBody |
            $accept_language = "cs, en-gb;q=0.8"; // string | The unique ID of the language code by ISO 639-1

            try {
                $result = $apiInstance->postCustomer($body, $accept_language);
                print_r($result);
            } catch (Exception $e) {
                echo 'Exception when calling CustomersApi->postCustomer: ', $e->getMessage(), PHP_EOL;
            }
    get:
      tags:
        - Customers
      summary: Get all customers
      description: Get a list of all customers.
      operationId: getCustomers
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/email'
        - $ref: '#/components/parameters/phone'
        - $ref: '#/components/parameters/customer_source_id'
        - $ref: '#/components/parameters/first_name'
        - $ref: '#/components/parameters/last_name'
        - $ref: '#/components/parameters/birthdate'
        - $ref: '#/components/parameters/email_list'
        - $ref: '#/components/parameters/customer_ids'
        - $ref: '#/components/parameters/customer_short_salutation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customers:
                        type: array
                        description: Array of customers.
                        items:
                          $ref: '#/components/schemas/Customer'
                      total_items:
                        type: integer
                        description: The number of all found customers.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = 'last_change'; // string | One of the query string parameters for sorting (optional)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional)\n$email = null; // string | Search by email (optional)\n$phone = null; // string | Phone number with international prefix (420000000) (optional)\n$customer_source_id = null; // string | The unique ID of the customer source. It identifies the system where the customer belongs or the customer account was created (optional)\n$first_name = 'John'; // string | Search by first name (optional)\n$last_name = null; // string | Search by last name (optional)\n$birthdate = null; // string | Customer's date of birth. Possible values are: YYYY-MM-DD / DD.MM.YYYY (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_customers = $care_cloud->customersApi()->getCustomers(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $email,\n        $phone,\n        $customer_source_id,\n        $first_name,\n        $last_name,\n        $birthdate\n    );\n    $customers = $get_customers->getData()->getCustomers();\n    $total_items = $get_customers->getData()->getTotalItems();\n    var_dump($customers);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
        - lang: PHP
          label: CareCloud Client
          source: |
            require_once(__DIR__ . '/vendor/autoload.php');
            // Configure HTTP basic authorization: basicAuth
            $config = CareCloud\Configuration::getDefaultConfiguration()
                          ->setUsername('YOUR_USERNAME')
                          ->setPassword('YOUR_PASSWORD');
                // Configure HTTP bearer authorization: bearerAuth
                $config = CareCloud\Configuration::getDefaultConfiguration()
                ->setAccessToken('YOUR_ACCESS_TOKEN');


            $apiInstance = new CareCloud\Api\CustomersApi(
                // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
                // This is optional, `GuzzleHttp\Client` will be used as default.
                new GuzzleHttp\Client(),
                $config
            );
            $accept_language = "cs, en-gb;q=0.8"; // string | The unique ID of the language code by ISO 639-1
            $count = 100; // int | The number of records to return.
            $offset = 0; // int | The number of records from a collection to skip.
            $sort_field = "sort_field_example"; // string | One of the query string parameters for sorting. *Response is sorted by the specified field.*
            $sort_direction = "sort_direction_example"; // string | Direction of sorting the response list.
            $email = "email_example"; // string | Search by email
            $phone = "phone_example"; // string | Phone number with international prefix (420000000)
            $customer_source_id = "customer_source_id_example"; // string | The unique ID of the customer source. It identifies the system where the customer belongs or the customer account was created
            $first_name = "first_name_example"; // string | Search by first name
            $last_name = "last_name_example"; // string | Search by last name
            $birthdate = "birthdate_example"; // string | Customer's date of birth. *Possible values are: YYYY-MM-DD / DD.MM.YYYY*

            try {
                $result = $apiInstance->getCustomers($accept_language, $count, $offset, $sort_field, $sort_direction, $email, $phone, $customer_source_id, $first_name, $last_name, $birthdate);
                print_r($result);
            } catch (Exception $e) {
                echo 'Exception when calling CustomersApi->getCustomers: ', $e->getMessage(), PHP_EOL;
            }
  '/customers/{customer_id}':
    get:
      tags:
        - Customers
      summary: Get information about a customer
      description: Get information about a specific customer account.
      operationId: getCustomer
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/customer_short_salutation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Call endpoint and get data\ntry\n{\n    $get_customer = $care_cloud->customersApi()->getCustomer($customer_id, $accept_language);\n    $customer = $get_customer->getData();\n    var_dump($customer);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
        - lang: PHP
          label: CareCloud Client
          source: |
            require_once(__DIR__ . '/vendor/autoload.php');
            // Configure HTTP basic authorization: basicAuth
            $config = CareCloud\Configuration::getDefaultConfiguration()
                          ->setUsername('YOUR_USERNAME')
                          ->setPassword('YOUR_PASSWORD');
                // Configure HTTP bearer authorization: bearerAuth
                $config = CareCloud\Configuration::getDefaultConfiguration()
                ->setAccessToken('YOUR_ACCESS_TOKEN');


            $apiInstance = new CareCloud\Api\CustomersApi(
                // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
                // This is optional, `GuzzleHttp\Client` will be used as default.
                new GuzzleHttp\Client(),
                $config
            );
            $customer_id = "87af991126405bf8e7dfb36045"; // string | The unique ID of the customer
            $accept_language = "cs, en-gb;q=0.8"; // string | The unique ID of the language code by ISO 639-1

            try {
                $result = $apiInstance->getCustomer($customer_id, $accept_language);
                print_r($result);
            } catch (Exception $e) {
                echo 'Exception when calling CustomersApi->getCustomer: ', $e->getMessage(), PHP_EOL;
            }
    put:
      tags:
        - Customers
      summary: Update a customer
      description: Update the information on a specific customer account.
      operationId: putCustomer
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer:
                  $ref: '#/components/schemas/Customer'
                password:
                  type: string
                  format: password
                  description: Password of customer.
                  example: 'fbsdfbkjebf$2,4d4fnb#,ds4@fnm,2dsf6sa'
                social_network_credentials:
                  $ref: '#/components/schemas/SocialNetworkCredentials'
              required:
                - customer
                - autologin
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Address;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Agreement;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CustomAgreements;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Customer;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CustomersCustomerIdBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PersonalInformation;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\SocialNetworkCredentials;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '85aae99524edceec17682e01b9'; // string | The unique ID of the customer\n\n// Set address of a new customer (optional)\n$address = new Address();\n$address->setAddress1('New Town Square') // string | Street name of the address (optional)\n->setAddress2('24') // string | Street number/land registry number (optional)\n->setAddress3('22') // string | House number (optional)\n->setZip('11001') // string | ZIP code (optional)\n->setCity('Prague 2') // string | City (optional)\n->setCountryCode('cz'); // string | ISO code of the country Possible values de / gb / us / it / cz / etc. (optional)\n\n// Set custom agreements of a new customer (optional)\n$custom_agreement1 = new CustomAgreements();\n$custom_agreement1->setAgreementId('89ce2a1b9b01f5c939fb1e20cd'); // string | The unique ID of the agreement in CareCloud\n$custom_agreement1->setAgreementValue(1); // integer | Value of the specific agreement Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set\n\n$custom_agreement2 = new CustomAgreements();\n$custom_agreement2->setAgreementId('8fd73167342d06899c4c015320'); // string | The unique ID of the agreement in CareCloud\n$custom_agreement2->setAgreementValue(1); // integer | Value of the specific agreement Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set\n\n$custom_agreements = array(\n    $custom_agreement1,\n    $custom_agreement2,\n);\n\n// Set agreement of a new customer\n$agreement = new Agreement();\n$agreement->setAgreementGtc(1) // integer | Consent to General Terms & Conditions Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set\n    ->setAgreementProfiling(1) // integer | Consent to profiling Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set\n    ->setAgreementMarketingCommunication(0) // integer | Consent to marketing communication Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set\n    ->setCustomAgreements($custom_agreements);\n\n// Set personal information of a new customer\n$personal_information = new PersonalInformation();\n$personal_information->setSalutation('Mr. Doe') // string | Customers salutation (optional)\n    ->setGender(1) // integer | Gender of the customer Possible values: 1 - male, 2 - female (optional)\n    ->setFirstName('John') // string | First name of the customer (optional)\n    ->setLastName('Doe') // string | Last name of the customer (optional)\n    ->setBirthdate('1990-01-01') // string <date> | Customer's date of birth (YYYY-MM-DD) (optional)\n    ->setEmail('doe@crmcarecloud.com') // string | Email of the customer (optional)\n    ->setPhone('420523828932') // string | Phone number of the customer with international prefix (420000000000) (optional)\n    ->setLanguageId('cs') // string | The unique ID for the language by ISO 639 code\n    ->setStoreId(null) // string | The unique ID for the original customer account store of registration (optional)\n    ->setPhotoUrl(null) // string | URL address of the customer photo (optional)\n    ->setAddress($address)\n    ->setAgreement($agreement);\n\n$customer = new Customer();\n$customer->setPersonalInformation($personal_information);\n\n// Set customer social network credentials (optional)\n$social_network_credentials = new SocialNetworkCredentials();\n$social_network_credentials->setSocialNetworkId('instagram'); // string | The unique ID of the social network\n$social_network_credentials->setSocialNetworkToken('38e223j1jedu12d1jnjqwd'); // string | Social network customer's token\n\n// Set basic information about new customer\n$body = new CustomersCustomerIdBody();\n$body->setCustomer($customer)\n    ->setPassword(null) // string | If parameter autologin=true, password is required, otherwise is optional.\n    ->setSocialNetworkCredentials($social_network_credentials);\n\n// Call endpoint and put data\ntry\n{\n    $care_cloud->customersApi()->putCustomer($body, $customer_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
        - lang: PHP
          label: CareCloud Client
          source: |
            require_once(__DIR__ . '/vendor/autoload.php');
            // Configure HTTP basic authorization: basicAuth
            $config = CareCloud\Configuration::getDefaultConfiguration()
                          ->setUsername('YOUR_USERNAME')
                          ->setPassword('YOUR_PASSWORD');
                // Configure HTTP bearer authorization: bearerAuth
                $config = CareCloud\Configuration::getDefaultConfiguration()
                ->setAccessToken('YOUR_ACCESS_TOKEN');


            $apiInstance = new CareCloud\Api\CustomersApi(
                // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
                // This is optional, `GuzzleHttp\Client` will be used as default.
                new GuzzleHttp\Client(),
                $config
            );
            $body = new \CareCloud\Model\CustomersCustomerIdBody(); // \CareCloud\Model\CustomersCustomerIdBody |
            $customer_id = "customer_id_example"; // string | The unique ID of the customer
            $accept_language = "cs, en-gb;q=0.8"; // string | The unique ID of the language code by ISO 639-1

            try {
                $apiInstance->putCustomer($body, $customer_id, $accept_language);
            } catch (Exception $e) {
                echo 'Exception when calling CustomersApi->putCustomer: ', $e->getMessage(), PHP_EOL;
            }
  '/customers/{customer_id}/purchases':
    get:
      tags:
        - Customers
      summary: Get all customer purchases
      description: Get information about all customer account purchases.
      operationId: getSubCustomerPurchases
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/store_id'
        - $ref: '#/components/parameters/purchase_type_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      purchases:
                        type: array
                        description: List of purchases.
                        items:
                          $ref: '#/components/schemas/Purchase'
                      total_items:
                        type: integer
                        description: The number of all found purchases.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$store_id = null; // string | The unique ID of the store (optional, default is null)\n$type_id = null; // string | Purchase type (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_purchases = $care_cloud->customersApi()->getSubCustomerPurchases(\n        $customer_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $store_id,\n        $type_id\n    );\n    $purchases = $get_purchases->getData()->getPurchases();\n    $total_items = $get_purchases->getData()->getTotalItems();\n    var_dump($purchases);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/points':
    get:
      tags:
        - Customers
      summary: Get all customer point records
      description: Get information about all customer point records.
      operationId: getSubCustomerPoints
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/point_type_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      points:
                        type: array
                        description: List of the point records.
                        items:
                          $ref: '#/components/schemas/Point'
                      total_items:
                        type: integer
                        description: The number of all found point records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$point_type_id = null; // string | The unique ID of the point type (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_point_records = $care_cloud->pointsApi()->getPoints(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $customer_id,\n        $point_type_id\n    );\n    $point_records = $get_point_records->getData()->getPoints();\n    $total_items = $get_point_records->getData()->getTotalItems();\n    var_dump($point_records);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/vouchers':
    get:
      tags:
        - Customers
      summary: Get all customer vouchers
      description: Get information about all customer vouchers.
      operationId: getSubCustomerVouchers
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/voucher_code'
        - $ref: '#/components/parameters/reward_store_id'
        - $ref: '#/components/parameters/is_valid'
        - $ref: '#/components/parameters/is_applied'
        - $ref: '#/components/parameters/without_stores'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      vouchers:
                        type: array
                        description: List of all recent vouchers.
                        items:
                          $ref: '#/components/schemas/Voucher'
                      total_items:
                        type: integer
                        description: The number of all recent vouchers.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$count = 1; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$code = null; // string | The unique code of the voucher (optional, default is null)\n$store_id = null; // string | The unique ID of the store where customer can apply the reward (optional, default is null)\n$is_valid = null; // boolean | In validity range - true / before or after validity range - false / no value - all (optional, default is null)\n$is_applied = null; // boolean | Filter by voucher application and reservation (optional, default is null)\n$without_stores = null; // boolean | If true, the data will not contain information about business units (stores). If false, or not set resource returns default structure (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_vouchers = $care_cloud->customersApi()->getSubCustomerVouchers(\n        $customer_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $code,\n        $store_id,\n        $is_valid,\n        $is_applied,\n        $without_stores\n    );\n    $vouchers = $get_vouchers->getData()->getVouchers();\n    $total_items = $get_vouchers->getData()->getTotalItems();\n    var_dump($vouchers);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/rewards':
    get:
      tags:
        - Customers
      summary: Get all customer rewards
      description: |
        Get information about all customer rewards.

        <p class="warning">⚠️ There is the logical AND between query parameters `is_valid`, `valid_from` and `valid to`.</p>
      operationId: getSubCustomerRewards
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/reward_store_id'
        - $ref: '#/components/parameters/is_valid'
        - $ref: '#/components/parameters/valid_from'
        - $ref: '#/components/parameters/valid_to'
        - $ref: '#/components/parameters/reward_code'
        - $ref: '#/components/parameters/is_automated'
        - $ref: '#/components/parameters/reward_group'
        - $ref: '#/components/parameters/customer_type_id_arr'
        - $ref: '#/components/parameters/without_stores'
        - $ref: '#/components/parameters/tag_id_arr'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      rewards:
                        type: array
                        description: List of all recent rewards.
                        items:
                          $ref: '#/components/schemas/Reward'
                      total_items:
                        type: integer
                        description: The number of all recent rewards.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n$store_id = null; // string | The unique ID of the store where customer can apply the reward (optional, default is null)\n$is_valid = null; // boolean | In validity range - true / before or after validity range - false / no value - all (optional, default is null)\n$valid_from = null; // string | Date from when is record already valid (YYYY-MM-DD) (optional, default is null)\n$valid_to = null; // string | Date to when is record still valid (YYYY-MM-DD) (optional, default is null)\n$code = null; // string | The code of the reward (optional, default is null)\n$is_automated = null; // boolean | Possible values: true - returns all automated rewards / false - returns all non automated rewards / no value - all rewards (optional)\n$reward_group = null; // integer | Possible values: 0 - cash desk reward (party time reward) / 1 - catalog reward / 2 - campaign reward / 4 - simple reward (optional)\n$customer_type_id = null; // string[] | Select by list of customer types from customer-types resource. Logic OR is used between values (optional)\n$without_stores = null; // boolean | If true, the data will not contain information about business units (stores). If false, or not set resource returns default structure (optional)\n$tag_ids = null; // string[] | Parameter filters values by a list of tag IDs. Logic OR is used between values (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_rewards = $care_cloud->customersApi()->getSubCustomerRewards(\n        $customer_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name,\n        $store_id,\n        $is_valid,\n        $valid_from,\n        $valid_to,\n        $code,\n        $is_automated,\n        $reward_group,\n        $customer_type_id,\n        $without_stores,\n        $tag_ids\n    );\n    $rewards = $get_rewards->getData()->getRewards();\n    $total_items = $get_rewards->getData()->getTotalItems();\n    var_dump($rewards);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/cards':
    get:
      tags:
        - Customers
      summary: Get all customer cards
      description: Get information about all customer cards.
      operationId: getSubCustomerCards
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/card_number'
        - $ref: '#/components/parameters/card_type_id'
        - $ref: '#/components/parameters/is_valid'
        - $ref: '#/components/parameters/card_number_list'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      cards:
                        type: array
                        description: Collection of customer cards.
                        items:
                          $ref: '#/components/schemas/Card'
                      total_items:
                        type: integer
                        description: The number of all found customer cards.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once 'vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$card_number = null; // string | Number of the customer card (optional, default is null)\n$card_type_id = null; // string | The unique ID of the card type (optional, default is null)\n$is_valid = null; // boolean | In validity range - true / before or after validity range - false / no value - all (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_cards = $care_cloud->customersApi()->getSubCustomerCards(\n        $customer_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $card_number,\n        $card_type_id,\n        $is_valid\n    );\n    $cards = $get_cards->getData()->getCards();\n    $total_items = $get_cards->getData()->getTotalItems();\n    var_dump($cards);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/segment-records':
    get:
      tags:
        - Customers
      summary: Get a collection of segment records
      description: Get information about all segment records on a customer account.
      operationId: getSubCustomerSegments
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/segment_group_ids'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      segment_records:
                        type: array
                        description: List of segment records.
                        items:
                          $ref: '#/components/schemas/SegmentRecord'
                      total_items:
                        type: integer
                        description: The number of all found segment records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$segment_group_ids = null; // string[] | List of the segment group IDs from the resource GET /segment-groups (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_segments = $care_cloud->customersApi()->getSubCustomerSegments($customer_id, $accept_language, $segment_group_ids);\n    $segments = $get_segments->getData();\n    $total_items = $get_segments->getData()->getTotalItems();\n    var_dump($segments);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/status-records':
    get:
      tags:
        - Customers
      summary: Get a collection of status records
      description: Get information about all status records on a customer account.
      operationId: getSubCustomerStatus
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/valid_now'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      status_records:
                        type: array
                        description: List of status records.
                        items:
                          $ref: '#/components/schemas/StatusRecord'
                      total_items:
                        type: integer
                        description: The number of all found status records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$count = 1; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$valid_now = null; // boolean | Status validity. Possible values are: True for valid status / False for status not valid (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_status_records = $care_cloud->customersApi()->getSubCustomerStatus(\n        $customer_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $valid_now\n    );\n    $status_records = $get_status_records->getData()->getStatusRecords();\n    $total_items = $get_status_records->getData()->getTotalItems();\n    var_dump($status_records);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/recommendation-records':
    get:
      tags:
        - Customers
      summary: Get a collection of recommendation records
      description: Get information about all recommendation records on a customer account.
      operationId: getSubCustomerRecommendation
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      recommendations:
                        type: array
                        description: List of recommendation records.
                        items:
                          $ref: '#/components/schemas/Recommendation'
                      total_items:
                        type: integer
                        description: The number of all found recommendation records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_recommendation_records = $care_cloud->customersApi()->getSubCustomerRecommendation(\n        $customer_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $recommendation_records = $get_recommendation_records->getData()->getRecommendations();\n    $total_items = $get_recommendation_records->getData()->getTotalItems();\n    var_dump($recommendation_records);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/customer-source-records':
    get:
      tags:
        - Customers
      summary: Get customer source records
      description: Get information about all customer account source records.
      operationId: getSubCustomerSource
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_external_id'
        - $ref: '#/components/parameters/customer_source_id'
        - $ref: '#/components/parameters/external_ids'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_source_records:
                        type: array
                        description: List of the customer source records.
                        items:
                          $ref: '#/components/schemas/CustomerSourceRecord'
                      total_items:
                        type: integer
                        description: The number of all found customer source records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$external_id = null; // string | The unique ID from an external system (POS, webshop, mobile app) (optional, default is null)\n$customer_source_id = null; // string | The unique ID of the customer source (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_source_records = $care_cloud->customersApi()->getSubCustomerSource(\n        $customer_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $external_id,\n        $customer_source_id\n    );\n    $source_records = $get_source_records->getData()->getCustomerSourceRecords();\n    $total_items = $get_source_records->getData()->getTotalItems();\n    var_dump($source_records);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Customers
      summary: Add a customer source record to a customer
      description: 'Add one of the [customer sources](/#tag/Customer-sources) to a customer account.'
      operationId: postSubCustomerSource
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_source_record:
                  $ref: '#/components/schemas/CustomerSourceRecord'
              required:
                - customer_source_record
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_source_record_id:
                        type: string
                        description: The unique ID of the customer source record.
                        example: 8fd73167342d06899c4c015320
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CustomerIdCustomersourcerecordsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CustomerSourceRecord;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set customer source info\n$customer_source_record = new CustomerSourceRecord();\n$customer_source_record->setCustomerSourceId('8fdd651ff3f615bcebebad87ce'); // string | The unique external id of the customer source\n$customer_source_record->setExternalId(null); // string | The unique external id of the customer (optional)\n\n// Set info to the request body\n$body = new CustomerIdCustomersourcerecordsBody();\n$body->setCustomerSourceRecord($customer_source_record);\n\n// Call endpoint and post data\ntry\n{\n    $post_source_record = $care_cloud->customersApi()->postSubCustomerSource($body, $customer_id, $accept_language);\n    $source_record_id = $post_source_record->getData()->getCustomerSourceRecordId();\n    var_dump($source_record_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/property-records':
    get:
      tags:
        - Customers
      summary: Get a collection of properties
      description: Get information about all property records on a customer account.
      operationId: getSubCustomerProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      property_records:
                        type: array
                        description: List of property records.
                        items:
                          $ref: '#/components/schemas/PropertyRecord'
                      total_items:
                        type: integer
                        description: The number of all found customer sources.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Call endpoint and get data\ntry\n{\n    $get_properties = $care_cloud->customersApi()->getSubCustomerProperties($customer_id, $accept_language);\n    $properties = $get_properties->getData()->getPropertyRecords();\n    $total_items = $get_properties->getData()->getTotalItems();\n    var_dump($properties);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Customers
      summary: Add a property to a customer
      description: Add a new specific customer property record to a customer account.
      operationId: postSubCustomerProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                property_record:
                  $ref: '#/components/schemas/PropertyRecord'
              required:
                - property_record
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      property_record_id:
                        type: string
                        description: The unique ID of the property record.
                        example: 'docasna_blokace_darce_do:8ea2591121e636086a4a9c0992'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CustomerIdPropertyrecordsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PropertyRecord;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set property record info\n$property_record = new PropertyRecord();\n$property_record->setPropertyId('is_biker'); // string | The unique ID of the property\n$property_record->setPropertyValue(true); // mixed | Value of the property (optional) (string or null) or (number or null) or (integer or null) or (boolean or null) or (Array of any or null) or (object or null)\n\n// Set property record info to the request body\n$body = new CustomerIdPropertyrecordsBody();\n$body->setPropertyRecord($property_record);\n\n// Call endpoint and post data\ntry\n{\n    $post_property_record = $care_cloud->customersApi()->postSubCustomerProperties($body, $customer_id, $accept_language);\n    $property_record_id = $post_property_record->getData()->getPropertyRecordId();\n    var_dump($property_record_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/property-records/{property_record_id}':
    put:
      tags:
        - Customers
      summary: Update a property of a customer
      description: Update a specific customer property record on a customer account.
      operationId: putSubCustomerProperty
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/property_record_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                property_record:
                  $ref: '#/components/schemas/PropertyRecord'
              required:
                - property_record
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PropertyRecord;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PropertyrecordsPropertyRecordIdBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$property_record_id = 'blokace_darce:8ea2591121e636086a4a9c0992'; // string | The unique ID of the property record\n\n// Set property record info\n$property_record = new PropertyRecord();\n$property_record->setPropertyId('blokace_darce'); // string | The unique ID of the property\n$property_record->setPropertyValue(false); // mixed | Value of the property (optional) (string or null) or (number or null) or (integer or null) or (boolean or null) or (Array of any or null) or (object or null)\n\n// Set property record info to the request body\n$body = new PropertyrecordsPropertyRecordIdBody();\n$body->setPropertyRecord($property_record);\n\n// Call endpoint and put data\ntry\n{\n    $care_cloud->customersApi()->putSubCustomerProperty($body, $customer_id, $property_record_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    delete:
      tags:
        - Customers
      summary: Delete a property of a customer
      description: Delete a specific customer property record on a customer account.
      operationId: deleteSubCustomerProperty
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/property_record_id_path'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$property_record_id = 'blokace_darce:8ea2591121e636086a4a9c0992'; // string | The unique ID of the property record\n\n// Call endpoint and delete data\ntry\n{\n    $care_cloud->customersApi()->deleteSubCustomerProperty($customer_id, $property_record_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/property-records/batch':
    post:
      tags:
        - Customers
      summary: Create a batch of property records for a customer
      description: 'Add a batch of customer property records to a customer account. In case of an existing property record, CareCloud API will update this record. In case of error, CareCloud will cancel the whole transaction, and API will return error information.'
      operationId: postSubCustomerPropertiesBatch
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                property_records:
                  type: array
                  description: List of property records.
                  items:
                    $ref: '#/components/schemas/PropertyRecord'
              required:
                - property_records
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  '/customers/{customer_id}/interest-records':
    get:
      tags:
        - Customers
      summary: Get a collection of interest records
      description: Get information about all interest records on a customer account.
      operationId: getSubCustomerInterests
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      interest_records:
                        type: array
                        description: List of interest records.
                        items:
                          $ref: '#/components/schemas/InterestRecord'
                      total_items:
                        type: integer
                        description: The number of all found interest records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Call endpoint and get data\ntry\n{\n    $get_interests = $care_cloud->customersApi()->getSubCustomerInterests($customer_id, $accept_language);\n    $interests = $get_interests->getData()->getInterestRecords();\n    $total_items = $get_interests->getData()->getTotalItems();\n    var_dump($interests);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Customers
      summary: Add an interest record to a customer
      description: Add a new specific customer interest record to a customer account.
      operationId: postSubCustomerInterest
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interest_record:
                  $ref: '#/components/schemas/InterestRecord'
              required:
                - interest_record
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      interest_record_id:
                        type: string
                        description: The unique ID of the interest record.
                        example: 81eaeea13b8984a169c490a325
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CustomerIdInterestrecordsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\InterestRecord;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set interest info\n$interest_record = new InterestRecord();\n$interest_record->setInterestId('8bed991c68a470e7aaeffbf048'); // string | The unique ID of the interest\n$interest_record->setCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID of the customer\n\n$body = new CustomerIdInterestrecordsBody();\n$body->setInterestRecord($interest_record);\n\n// Call endpoint and post data\ntry\n{\n  $post_interest = $care_cloud->customersApi()->postSubCustomerInterest($body, $customer_id, $accept_language);\n  $interest_record_id = $post_interest->getData()->getInterestRecordId();\n  var_dump($interest_record_id);\n}\ncatch(ApiException $e)\n{\n  die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/interest-records/{interest_record_id}':
    put:
      tags:
        - Customers
      summary: Update an interest record on an account
      description: Update a specific customer interest record on a customer account.
      operationId: putSubCustomerInterest
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/interest_record_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interest_record:
                  $ref: '#/components/schemas/InterestRecord'
              required:
                - property_record
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\InterestRecord;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\InterestrecordsInterestRecordIdBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$interest_record_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the interest record\n\n// Set interest info\n$interest_record = new InterestRecord();\n$interest_record->setInterestId('81eaeea13b8984a169c490a325'); // string | The unique ID of the interest\n$interest_record->setCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID of the customer\n\n$body = new InterestrecordsInterestRecordIdBody();\n$body->setInterestRecord($interest_record);\n\n// Call endpoint and put data\ntry\n{\n    $care_cloud->customersApi()->putSubCustomerInterest($body, $customer_id, $interest_record_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    delete:
      tags:
        - Customers
      summary: Delete an interest record on an account
      description: Delete a specific customer interest record on a customer account.
      operationId: deleteSubCustomerInterest
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/interest_record_id_path'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$interest_record_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the interest record\n\n// Call endpoint and delete data\ntry\n{\n    $care_cloud->customersApi()->deleteSubCustomerInterest($customer_id, $interest_record_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/addresses':
    get:
      tags:
        - Customers
      summary: Get all additional customer addresses
      description: Get information about all customer addresses.
      operationId: getSubCustomerAddresses
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_address_type_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      addresses:
                        type: array
                        description: Collection of customer addresses.
                        items:
                          $ref: '#/components/schemas/AdditionalAddress'
                      total_items:
                        type: integer
                        description: The number of all found customer addresses.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_address_type_id = null; // string | The unique ID of the customer address type (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_addresses = $care_cloud->customersApi()->getSubCustomerAddresses(\n        $customer_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $customer_address_type_id\n    );\n    $addresses = $get_addresses->getData()->getAddresses();\n    $total_items = $get_addresses->getData()->getTotalItems();\n    var_dump($addresses);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Customers
      summary: Create an additional customer address
      description: Add a new additional customer address.
      operationId: postSubCustomerAddress
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                additional_address:
                  $ref: '#/components/schemas/AdditionalAddress'
              required:
                - additional_address
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      additional_address_id:
                        type: string
                        description: The unique ID of the additional customer address.
                        example: 81a94c48474bc45c03d41f7016
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\AdditionalAddress;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Address;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CustomerIdAddressesBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set additional address\n$address = new Address();\n$address->setAddress1('Namesti Miru'); // string | Street name of the address\n$address->setAddress2('1'); // string | Street number (Land registry number)\n$address->setAddress3(null); // string | House number\n$address->setAddress4(null); // string | Next address line\n$address->setAddress5(null); // string | Next address line\n$address->setAddress6(null); // string | Next address line\n$address->setAddress7(null); // string | Next address line\n$address->setZip('11000'); // string | Zip code\n$address->setCity('Prague 2'); // string | City\n$address->setCountryCode('cz'); // string | ISO code of the country Possible values de / gb / us / it / cz / etc.\n\n$additional_address = new AdditionalAddress();\n$additional_address->setAddressType('86e05affc7a7abefcd513ab400') // string | The unique ID of the type of the address\n    ->setAddress($address);\n\n// Set additional address to the request body\n$body = new CustomerIdAddressesBody();\n$body->setAdditionalAddress($additional_address);\n\n// Call endpoint and post data\ntry\n{\n    $post_address = $care_cloud->customersApi()->postSubCustomerAddress($body, $customer_id, $accept_language);\n    $additional_address_id = $post_address->getData()->getAdditionalAddressId();\n    var_dump($additional_address_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/addresses/{additional_customer_address_id_path}':
    get:
      tags:
        - Customers
      summary: Get an additional customer address
      description: Get information about an additional customer address.
      operationId: getSubCustomerAddress
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/additional_customer_address_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AdditionalAddress'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$additional_customer_address_id_path = '86e05affc7a7abefcd513ab400'; // string | Unique ID of the customer additional address\n\n// Call endpoint and get data\ntry\n{\n    $get_address = $care_cloud->customersApi()->getSubCustomerAddress($customer_id, $additional_customer_address_id_path, $accept_language);\n    $address = $get_address->getData();\n    var_dump($address);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    put:
      tags:
        - Customers
      summary: Update an additional customer address
      description: Update a specific additional customer address.
      operationId: putSubCustomerAddress
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/additional_customer_address_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                additional_address:
                  $ref: '#/components/schemas/AdditionalAddress'
              required:
                - additional_address
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\AdditionalAddress;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Address;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\AddressesAdditionalCustomerAddressIdPathBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$additional_customer_address_id_path = '86e05affc7a7abefcd513ab400'; // string | Unique ID of the customer additional address\n\n// Set additional address\n$address = new Address();\n$address->setAddress1('Namesti Miru 2'); // string | Street name of the address\n$address->setAddress2('12'); // string | Street number (Land registry number)\n$address->setAddress3(null); // string | House number\n$address->setAddress4(null); // string | Next address line\n$address->setAddress5(null); // string | Next address line\n$address->setAddress6(null); // string | Next address line\n$address->setAddress7(null); // string | Next address line\n$address->setZip('11002'); // string | Zip code\n$address->setCity('Prague 3'); // string | City\n$address->setCountryCode('cz'); // string | ISO code of the country Possible values de / gb / us / it / cz / etc.\n\n$additional_address = new AdditionalAddress();\n$additional_address->setAddressType('86e05affc7a7abefcd513ab400'); // string | The unique ID of the type of the address\n$additional_address->setAddress($address);\n\n// Set additional address to the request body\n$body = new AddressesAdditionalCustomerAddressIdPathBody();\n$body->setAdditionalAddress($additional_address);\n\n// Call endpoint and put data\ntry\n{\n    $care_cloud->customersApi()->putSubCustomerAddress(\n        $body,\n        $customer_id,\n        $additional_customer_address_id_path,\n        $accept_language\n    );\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/events':
    get:
      tags:
        - Customers
      summary: Get information about all customer  events
      description: Get a list of customer  events in CRM CareCloud.
      operationId: getSubCustomerEvents
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/event_type_id'
        - $ref: '#/components/parameters/external_id'
        - $ref: '#/components/parameters/event_type_ids'
        - $ref: '#/components/parameters/include_property_records'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_events:
                        type: array
                        description: Collection of all events.
                        items:
                          $ref: '#/components/schemas/Event'
                      total_items:
                        type: integer
                        description: The number of all found events.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$event_type_id = null; // string | The unique ID of the event type (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional, default is null)\n$external_id = null; // string | The unique external id (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_events = $care_cloud->eventsApi()->getEvents(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $event_type_id,\n        $customer_id,\n        $external_id\n    );\n    $events = $get_events->getData()->getEvents();\n    $total_items = $get_events->getData()->getTotalItems();\n    var_dump($events);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/related-customers':
    get:
      tags:
        - Customers
      summary: Get information about all related customers
      description: Get a list of customers' relations in CRM CareCloud.
      operationId: getSubCustomerRelatedCustomers
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/related_customer_id'
        - $ref: '#/components/parameters/customer_relation_type_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      related_customers:
                        type: array
                        description: Collection of all related customers.
                        items:
                          $ref: '#/components/schemas/RelatedCustomer'
                      total_items:
                        type: integer
                        description: The number of all found related customers.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$related_customer_id = null; // string | The unique ID of the related customer (optional, default is null)\n$customer_relation_type_id = null; // string | The unique ID of the customer relation type (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_related_customers = $care_cloud->customersApi()->getSubCustomerRelatedCustomers(\n        $customer_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $related_customer_id,\n        $customer_relation_type_id\n    );\n    $related_customers = $get_related_customers->getData()->getRelatedCustomers();\n    $total_items = $get_related_customers->getData()->getTotalItems();\n    var_dump($related_customers);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Customers
      summary: Create the customer  relation
      description: Add a new customer  relation to the customer  account.
      operationId: postSubCustomerRelatedCustomers
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                related_customer:
                  $ref: '#/components/schemas/RelatedCustomer'
              required:
                - related_customer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_relation_id:
                        type: string
                        description: The unique ID of the customer  relation.
                        example: 81eaeea13b8984a169c490a325
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CustomerIdRelatedcustomersBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\RelatedCustomer;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set related customer\n$related_customer = new RelatedCustomer();\n$related_customer->setRelatedCustomerId('8ba7d0212d8f90492c7a6d59ad'); // string | The unique ID of the related customer\n$related_customer->setCustomerRelationTypeId('8bed991c68a470e7aaeffbf048'); // string | The unique ID of the customer relation type\n$related_customer->setIsLeading(false); // boolean | Parameter says, if related customer is a leader in their relationship\n\n// Set info to the request body\n$body = new CustomerIdRelatedcustomersBody();\n$body->setRelatedCustomer($related_customer);\n\n// Call endpoint and post data\ntry\n{\n    $post_related_customer = $care_cloud->customersApi()->postSubCustomerRelatedCustomers($body, $customer_id, $accept_language);\n    $customer_relation_id = $post_related_customer->getData()->getCustomerRelationId();\n    var_dump($customer_relation_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/related-customers/{customer_relation_id}':
    get:
      tags:
        - Customers
      summary: Detail of a relation between customers
      description: Get information about a specific customer relation.
      operationId: getSubCustomerRelatedCustomer
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/customer_relation_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RelatedCustomer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$customer_relation_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the relation between two customers\n\n// Call endpoint and get data\ntry\n{\n    $get_relation = $care_cloud->customersApi()->getSubCustomerRelatedCustomer($customer_id, $customer_relation_id, $accept_language);\n    $relation = $get_relation->getData();\n    var_dump($relation);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    delete:
      tags:
        - Customers
      summary: Delete the customer  relation
      description: Delete a specific customer relation.
      operationId: deleteSubCustomerRelatedCustomer
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/customer_relation_id_path'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$customer_relation_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the relation between two customers\n\n// Call endpoint and delete data\ntry\n{\n    $care_cloud->customersApi()->deleteSubCustomerRelatedCustomer(\n        $customer_id,\n        $customer_relation_id,\n        $accept_language\n    );\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/partner-records':
    get:
      tags:
        - Customers
      summary: Get information about all customer  partners
      description: |
        Get a list of customer  partners in CareCloud.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: getSubCustomerPartners
      parameters:
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      partner_records:
                        type: array
                        description: Collection of all customer  partner records.
                        items:
                          $ref: '#/components/schemas/PartnerRecord'
                      total_items:
                        type: integer
                        description: The number of all found customer  partners.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_partners = $care_cloud->customersApi()->getSubCustomerPartners(\n        $customer_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $partners = $get_partners->getData()->getPartnerRecords();\n    var_dump($partners);\n    $total_items = $get_partners->getData()->getTotalItems();\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Customers
      summary: Add a partner to the customer
      description: Add a new partner to the customer.
      operationId: postSubCustomerPartnerRecord
      parameters:
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                partner_record:
                  $ref: '#/components/schemas/PartnerRecord'
              required:
                - partner_id
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      partner_record_id:
                        type: string
                        description: The unique ID of the partner record on the customer.
                        example: 88bd53f8ac5f3b595d6bc106a4
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\CustomerIdPartnerrecordsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PartnerRecord;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$customer_id = '8fa66731256448d1ae0c19a1dd'; // string | The unique ID of the customer\n\n// Set the request body\n$partner_record = new PartnerRecord();\n$partner_record->setPartnerId('86e05affc7a7abefcd513ab400'); // string | The unique ID of the partner\n\n$body = new CustomerIdPartnerrecordsBody();\n$body->setPartnerRecord($partner_record);\n\n// Call endpoint and post data\ntry\n{\n    $post_customer_partner = $care_cloud->customersApi()->postSubCustomerPartnerRecord(\n        $body,\n        $customer_id,\n        $accept_language\n    );\n    $partner_record_id = $post_customer_partner->getData()->getPartnerRecordId();\n    var_dump($partner_record_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customers/{customer_id}/partner-records/{partner_record_id}':
    delete:
      tags:
        - Customers
      summary: Delete a partner record from an account
      description: |
        Delete a specific customer partner record from a customer account.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: deleteSubCustomerPartner
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_path'
        - $ref: '#/components/parameters/partner_record_id_path'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$partner_record_id = '86b672f8b84076d6679cac14d9'; // string | The unique ID of the partner record\n\n// Call endpoint and delete data\ntry\n{\n    $care_cloud->customersApi()->deleteSubCustomerPartner(\n        $customer_id,\n        $partner_record_id,\n        $accept_language\n    );\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /customers/actions/verify-credentials:
    post:
      tags:
        - Customers actions
      summary: Customer's credentials verification
      description: |
        Verification of a customer account credentials.
        ⚠️ Action method for verification credentials is available only in the Enterprise interface.
      operationId: postCustomerVerifyCredentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login_type:
                  type: string
                  enum:
                    - card
                    - email
                  description: 'The unique ID of the login type (available: card, email).'
                  example: email
                login_value:
                  type: string
                  description: Value of the login for customer interface API.
                  example: happy_customer@cortex.cz
                password:
                  type: string
                  format: password
                  description: Password of the customer.
                  example: password123_is_not_a_good_idea
              required:
                - login_type
                - login_value
                - password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_id:
                        type: string
                        description: The unique ID of the customer.
                        example: 8ea6abece4cd0a4ded0a29f093
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: |
            use CrmCareCloud\Webservice\RestApi\Client\ApiException;
            use CrmCareCloud\Webservice\RestApi\Client\Model\ActionsVerifycredentialsBody;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

            require_once '../vendor/autoload.php';

            $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
            $login = 'login';
            $password = 'password';
            $external_app_id = 'application_id';
            $auth_type = AuthTypes::BEARER_AUTH;

            $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

            $care_cloud = new CareCloud($config);

            //Set the request body
            $body = new ActionsVerifycredentialsBody();
            $body->setLoginType('email'); // string | The unique ID of the login type (available: card, email)
            $body->setLoginValue('customer_email@example.com'); // string | Value of the login for customer interface API
            $body->setPassword('customer_password'); // string | Password of the customer.

            // Call endpoint and post data
            try
            {
                $post_credentials = $care_cloud->customersActionsApi()->postCustomerVerifyCredentials($body);
                $customer_id = $post_credentials->getData()->getCustomerId();
                var_dump($customer_id);
            }
            catch(ApiException $e)
            {
                die(var_dump($e->getResponseBody() ?: $e->getMessage()));
            }
  /customers/actions/verify-social-network-credentials:
    post:
      tags:
        - Customers actions
      summary: Social network credentials verification
      description: |
        Verification of a customer account's social network credentials.
        ⚠️ Action method for verification credentials is available only in the Enterprise interface.
      operationId: postCustomerVerifySocialNetworkCredentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                social_network_credentials:
                  $ref: '#/components/schemas/SocialNetworkCredentials'
              required:
                - social_network_credentials
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_id:
                        type: string
                        description: The unique ID of the customer.
                        example: 8ea6abece4cd0a4ded0a29f093
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: |
            use CrmCareCloud\Webservice\RestApi\Client\ApiException;
            use CrmCareCloud\Webservice\RestApi\Client\Model\ActionsVerifysocialnetworkcredentialsBody;
            use CrmCareCloud\Webservice\RestApi\Client\Model\SocialNetworkCredentials;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

            require_once '../vendor/autoload.php';

            $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
            $login = 'login';
            $password = 'password';
            $external_app_id = 'application_id';
            $auth_type = AuthTypes::BEARER_AUTH;

            $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

            $care_cloud = new CareCloud($config);

            // Set social network credentials
            $social_network_credentials = new SocialNetworkCredentials();
            $social_network_credentials->setSocialNetworkId('twitter'); // string | The unique ID of the social network
            $social_network_credentials->setSocialNetworkToken('e123'); // string | Social network customer's token

            //Set the request body
            $body = new ActionsVerifysocialnetworkcredentialsBody();
            $body->setSocialNetworkCredentials($social_network_credentials);

            // Call endpoint and post data
            try
            {
                $post_credentials = $care_cloud->customersActionsApi()->postCustomerVerifySocialNetworkCredentials($body);
                $customer_id = $post_credentials->getData()->getCustomerId();
                var_dump($customer_id);
            }
            catch(ApiException $e)
            {
                die(var_dump($e->getResponseBody() ?: $e->getMessage()));
            }
  /customers/actions/search-customers:
    get:
      tags:
        - Customers actions
      summary: Search customers
      description: |
        Search all customers matching for parameters.

        <p class="warning">⚠️ Action method for search customers is available only in Enterprise interface.</p>
      operationId: getCustomerSearch
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/first_name'
        - $ref: '#/components/parameters/last_name'
        - $ref: '#/components/parameters/birthdate'
        - $ref: '#/components/parameters/card_number'
        - $ref: '#/components/parameters/searchMode'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CustomerSearchResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$first_name = 'Andrew'; // string | Search by first name (optional)\n$lastname = 'Black'; // string | Search by last name (optional)\n$birthdate = '1980-12-02'; // string | Customer's date of birth. Possible values are: YYYY-MM-DD / DD.MM.YYYY (optional)\n$card_number = '1000000000016'; // string | Number of the customer card (optional)\n$mode = 'strict'; // string | Possible values are: strict - return only 100% matching results (all path parameters are required)\n\n// Call endpoint and get data\ntry\n{\n    $get_customers = $care_cloud->customersActionsApi()->getCustomerSearch(\n        $accept_language,\n        $first_name,\n        $lastname,\n        $birthdate,\n        $card_number,\n        $mode\n    );\n    $customers = $get_customers->getData();\n    var_dump($customers);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /customers/actions/verify-auth-token:
    post:
      tags:
        - Customers actions
      summary: Verify auth token
      description: |
        Method verifies authentication token created by a specified application. There is the unique ID of the customer as a response. <br/> ⚠️ Endpoint method is available only in the Enterprise interface.
      operationId: postCustomersVerifyAuthToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                application_id:
                  type: string
                  description: ID of the application. Application is the source of the token.
                  example: 82de12eb8b138791e678fd11c3
                token:
                  type: string
                  description: Authentication token
                  example: V952TL
                token_request_id:
                  type: string
                  description: 'The parameter specifies the request that caused the token to be created. If two customers generated an authentication token at the same time and in the same application, the token_request_id parameter represents additional verification to identify the correct token.'
                  example: 702baa4a40a57694831321e5d02605d46c189369126ae43a81030790ea188af87e49578a
              required:
                - application_id
                - token
                - token_request_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_id:
                        type: string
                        description: The unique ID of the customer.
                        example: 8ea2591121e636086a4a9c0992
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsVerifyauthtokenBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\Interfaces;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n$interface = Interfaces::CUSTOMER;\n$token = 'token';\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type, $interface, null, $token);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$token_id = '702baa4a40a57694831321e5d02605d46c189369126ae43a81030790ea188af87e49578a'; // Client's application token\n\n// Set query parameters\n$external_application_id = '82de12eb8b138791e678fd11c3'; // string | ID of the external application\n$token_type = 1; // integer | Possible values: 1 - alphanumeric, 2 - numeric\n\n// Set the request body\n$body = new ActionsVerifyauthtokenBody();\n$body->setApplicationId($external_application_id);\n$body->setToken('V952TL');\n$body->setTokenRequestId('326a3adc83f925a27cb8c0318d9bbceeb00f65e4');\n\n// Call endpoint and post data\ntry\n{\n    $post_verify_token = $care_cloud->customersActionsApi()->postCustomersVerifyAuthToken($body);\n    $customer_id = $post_verify_token->getData()->getCustomerId();\n    var_dump($customer_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /customers/actions/upload-customer-photo:
    post:
      tags:
        - Customers actions
      summary: Upload the customer  profile photo
      description: |
        Method uploads the customer  profile photo. In case if the customer already has a photo, new photo will replace the old one. Maximum size of a picture is 2 MB. <br/>
        Available formats: `.jpg, .jpeg, .png`
      operationId: postCustomersUploadPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
                data:
                  type: string
                  description: Base 64 encoded image data.
                  example: iVBORw0KGgoAAAANSUhEUgAAAMYAAAAtCAIAAAB6eoNLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAeASURBVHhe7ZvfbxNHEMf7n/elKk
              required:
                - customer_id
                - data
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsUploadcustomerphotoBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the request body\n$body = new ActionsUploadcustomerphotoBody();\n$body->setCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID of the customer\n$body->setData('YTc4ZTExZTc3NGY3Zmh1b3dmamZram5sam5kZmpuZm5mIGRzbiBzZGpuc2Rsam5kc2Y'); // string | Base 64 encoded image data\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->customersActionsApi()->postCustomersUploadPhoto($body);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /customers/actions/set-partners:
    post:
      tags:
        - Customers actions
      summary: Set one or multiple partners to the customer
      description: |
        Set one or multiple partners to the customer.<br/> The method will set all the partners from the request available to the CareCloud API user and delete all that are not present in the request.<br/> If customer has a partner that is unavailable to the user, this partner is not going to be modified or deleted.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: postSubCustomerSetPartners
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
                partner_records:
                  type: array
                  description: Collection of all customer  partner records.
                  items:
                    $ref: '#/components/schemas/PartnerRecord'
              required:
                - partner_records
                - customer_id
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsSetpartnersBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PartnerRecord;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the request body\n$partner_record1 = new PartnerRecord();\n$partner_record1->setPartnerId('86e05affc7a7abefcd513ab400'); // string | The unique ID of the partner\n\n$body = new ActionsSetpartnersBody();\n$body->setCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID of the customer\n$body->setPartnerRecords(array($partner_record1));\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->customersActionsApi()->postSubCustomerSetPartners(\n        $body,\n        $accept_language\n    );\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /customers/actions/set-status-record:
    post:
      tags:
        - Customers actions
      summary: Set a new customer status
      description: |
        The method sets a new customer status. If another valid status exists, CareCloud deactivates it.<br/>
        ⚠️ Action method is available only in the Enterprise interface.
      operationId: postCustomersSetStatusRecord
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status_id:
                  type: string
                  description: The unique ID of the status.
                  example: 86e05affc7a7abefcd513ab400
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 89ac83ca207a820c62c79bf03a
                valid_to:
                  type: string
                  description: 'Date and time of the record valid to. If not set, validity from the status definition is applied. *(YYYY-MM-DD HH:MM:SS)*'
                  example: '2021-05-28 23:59:59'
              required:
                - status_id
                - customer_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      status_record_id:
                        type: string
                        description: The unique ID of the customer status record.
                        example: 8ea2591121e636086a4a9c0992
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /customers/actions/newsletters-sign-up:
    post:
      tags:
        - Customers actions
      summary: Sign up for newsletters
      description: |
        Method sign up a contact for the newsletter. The contact does not need to be an existing customer. 
        ⚠️ While use this method we strongly recommend you to verify a contact with Captcha before sending a request to CareCloud API
      operationId: postCustomerNewslettersSignUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contact:
                  type: string
                  description: 'The parameter could contain email, phone number or other identifier of the contact.'
                  example: happy_customer@crmcarecloud.com
                customer_source_id:
                  type: string
                  readOnly: false
                  description: The unique ID of the customer source.
                  example: 86e05affc7a7abefcd513ab400
              required:
                - contact
                - customer_source_id
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: |
            use CrmCareCloud\Webservice\RestApi\Client\ApiException;
            use CrmCareCloud\Webservice\RestApi\Client\Model\ActionsVerifycredentialsBody;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

            require_once '../vendor/autoload.php';

            $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
            $login = 'login';
            $password = 'password';
            $external_app_id = 'application_id';
            $auth_type = AuthTypes::BEARER_AUTH;

            $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

            $care_cloud = new CareCloud($config);

            //Set the request body
            $body = new ActionsVerifycredentialsBody();
            $body->setLoginType('email'); // string | The unique ID of the login type (available: card, email)
            $body->setLoginValue('customer_email@example.com'); // string | Value of the login for customer interface API
            $body->setPassword('customer_password'); // string | Password of the customer.

            // Call endpoint and post data
            try
            {
                $post_credentials = $care_cloud->customersActionsApi()->postCustomerVerifyCredentials($body);
                $customer_id = $post_credentials->getData()->getCustomerId();
                var_dump($customer_id);
            }
            catch(ApiException $e)
            {
                die(var_dump($e->getResponseBody() ?: $e->getMessage()));
            }
  /customers/actions/set-push-notifications:
    post:
      tags:
        - Customers actions
      summary: Set the customer's push notifications
      description: |
        ⚠️ The endpoint is available only in the Enterprise interface.<br/>
        ⚠️ Please make sure the ID of the device is unique. You will avoid problems with signing off other devices.<br/>
        Method will set up customer's push notifications to specified application and device.
      operationId: postCustomerSetPushNotifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
                device:
                  $ref: '#/components/schemas/Device'
                external_application_id:
                  type: string
                  description: 'ID of the external application. More information about external applications and how to get an ID is available in [Authentication section](https://carecloud.readme.io/reference/authentication#external-applications-1).'
                  example: 82de12eb8b138791e678fd11c3
                push_token:
                  type: string
                  description: Push notification token (Apple or Google).
                  example: 4f7f658bfa7a5959e093590
              required:
                - customer_id
                - device
                - external_application_id
                - push_token
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: |
            use CrmCareCloud\Webservice\RestApi\Client\ApiException;
            use CrmCareCloud\Webservice\RestApi\Client\Model\ActionsVerifycredentialsBody;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

            require_once '../vendor/autoload.php';

            $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
            $login = 'login';
            $password = 'password';
            $external_app_id = 'application_id';
            $auth_type = AuthTypes::BEARER_AUTH;

            $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

            $care_cloud = new CareCloud($config);

            //Set the request body
            $body = new ActionsVerifycredentialsBody();
            $body->setLoginType('email'); // string | The unique ID of the login type (available: card, email)
            $body->setLoginValue('customer_email@example.com'); // string | Value of the login for customer interface API
            $body->setPassword('customer_password'); // string | Password of the customer.

            // Call endpoint and post data
            try
            {
                $post_credentials = $care_cloud->customersActionsApi()->postCustomerVerifyCredentials($body);
                $customer_id = $post_credentials->getData()->getCustomerId();
                var_dump($customer_id);
            }
            catch(ApiException $e)
            {
                die(var_dump($e->getResponseBody() ?: $e->getMessage()));
            }
  /customer-address-types:
    get:
      tags:
        - Customer address types
      summary: Get all customer address types
      description: Get a list of customer address types accepted in CRM CareCloud.
      operationId: getCustomerAddressTypes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_address_types:
                        type: array
                        description: List of the customer address types.
                        items:
                          $ref: '#/components/schemas/CustomerAddressType'
                      total_items:
                        type: integer
                        description: The number of all found customer address types.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_customer_address_types = $care_cloud->customerAddressTypesApi()->getCustomerAddressTypes(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $customer_address_types = $get_customer_address_types->getData()->getCustomerAddressTypes();\n    $total_items = $get_customer_address_types->getData()->getTotalItems();\n    var_dump($customer_address_types);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customer-address-types/{customer_address_type_id}':
    get:
      tags:
        - Customer address types
      summary: Detail of a customer address type
      description: Get information about a specific customer address type.
      operationId: getCustomerAddressType
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_address_type_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CustomerAddressType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$customer_address_type_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the customer address type in CareCloud\n\n// Call endpoint and get data\ntry\n{\n    $get_customer_address_type = $care_cloud->customerAddressTypesApi()->getCustomerAddressType(\n        $customer_address_type_id,\n        $accept_language\n    );\n    $customer_address_type = $get_customer_address_type->getData();\n    var_dump($customer_address_type);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /customer-external-applications:
    get:
      tags:
        - Customer external applications
      summary: Get all customer external applications
      description: Get a list of customer external applications accepted in CRM CareCloud.
      operationId: getCustomerExternalApps
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_external_applications:
                        type: array
                        description: List of the customer external applications.
                        items:
                          $ref: '#/components/schemas/ExternalApplication'
                      total_items:
                        type: integer
                        description: The number of all found customer external applications.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_customer_external_apps = $care_cloud->customerExternalApplicationsApi()->getCustomerExternalApps(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $customer_external_apps = $get_customer_external_apps->getData()->getCustomerExternalApplications();\n    $total_items = $get_customer_external_apps->getData()->getTotalItems();\n    var_dump($customer_external_apps);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customer-external-applications/{customer_external_application_id}':
    get:
      tags:
        - Customer external applications
      summary: Detail of a customer external application
      description: Get information about a specific customer external application.
      operationId: getCustomerExternalApp
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_external_application_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ExternalApplication'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$customer_external_application_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of a customer external application\n\n// Call endpoint and get data\ntry\n{\n    $get_customer_external_app = $care_cloud->customerExternalApplicationsApi()->getCustomerExternalApp($customer_external_application_id, $accept_language);\n    $customer_external_app = $get_customer_external_app->getData();\n    var_dump($customer_external_app);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /customer-properties:
    get:
      tags:
        - Customer properties
      summary: Get all customer properties
      description: Get information about customer properties.
      operationId: getCustomerProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_properties:
                        type: array
                        description: List of all customer properties.
                        items:
                          $ref: '#/components/schemas/Property'
                      total_items:
                        type: integer
                        description: The number of all found customer properties.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_customer_properties = $care_cloud->customerPropertiesApi()->getCustomerProperties(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $customer_properties = $get_customer_properties->getData()->getCustomerProperties();\n    $total_items = $get_customer_properties->getData()->getTotalItems();\n    var_dump($customer_properties);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customer-properties/{customer_property_id}':
    get:
      tags:
        - Customer properties
      summary: Get a customer property
      description: Get information about a specific customer property.
      operationId: getCustomerProperty
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_property_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$customer_property_id = 'p1_favourite_color'; // string | The unique ID of the customer property\n\n// Call endpoint and get data\ntry\n{\n    $get_customer_property = $care_cloud->customerPropertiesApi()->getCustomerProperty($customer_property_id, $accept_language);\n    $customer_property = $get_customer_property->getData();\n    var_dump($customer_property);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /customer-relation-types:
    get:
      tags:
        - Customer relation types
      summary: Get all customer relation types
      description: Get a list of customer relation types from CareCloud.
      operationId: getCustomerRelationTypes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_relation_types:
                        type: array
                        description: List of the customer relation types.
                        items:
                          $ref: '#/components/schemas/CustomerRelationType'
                      total_items:
                        type: integer
                        description: The number of all found customer relation types.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_customer_relation_types = $care_cloud->customerRelationTypesApi()->getCustomerRelationTypes(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $customer_relation_types = $get_customer_relation_types->getData()->getCustomerRelationTypes();\n    $total_items = $get_customer_relation_types->getData()->getTotalItems();\n    var_dump($customer_relation_types);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customer-relation-types/{customer_relation_type_id}':
    get:
      tags:
        - Customer relation types
      summary: Detail of a customer relation type
      description: Get information about a specific customer relation type.
      operationId: getCustomerRelationType
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_relation_type_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CustomerRelationType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$customer_relation_type_id = '8bd48117006496e0b1788109b8'; // string | The unique ID of the customer relation type\n\n// Call endpoint and get data\ntry\n{\n    $get_customer_relation_type = $care_cloud->customerRelationTypesApi()->getCustomerRelationType($customer_relation_type_id, $accept_language);\n    $customer_relation_type = $get_customer_relation_type->getData();\n    var_dump($customer_relation_type);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /customer-sources:
    get:
      tags:
        - Customer sources
      summary: Get customer sources
      description: Get information about all customer account sources.
      operationId: getCustomerSources
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_source_text_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_sources:
                        type: array
                        description: List of the customer sources.
                        items:
                          $ref: '#/components/schemas/CustomerSource'
                      total_items:
                        type: integer
                        description: The number of all found customer sources.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_customer_sources = $care_cloud->customerSourcesApi()->getCustomerSources(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $customer_sources = $get_customer_sources->getData()->getCustomerSources();\n    $total_items = $get_customer_sources->getData()->getTotalItems();\n    var_dump($customer_sources);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customer-sources/{customer_source_id}':
    get:
      tags:
        - Customer sources
      summary: Detail of a customer source
      description: Get information about a specific customer source.
      operationId: getCustomerSource
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_source_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CustomerSource'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /customer-source-records:
    get:
      tags:
        - Customer source records
      summary: Get customer source records
      description: Get information about all customer source records.
      operationId: getCustomerSourceRecords
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/customer_external_id'
        - $ref: '#/components/parameters/customer_source_id'
        - $ref: '#/components/parameters/external_ids'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_source_records:
                        type: array
                        description: List of the customer source records.
                        items:
                          $ref: '#/components/schemas/CustomerSourceRecord'
                      total_items:
                        type: integer
                        description: The number of all found customer source records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer\n$external_id = null; // string | The unique external id\n$customer_source_id = null; // string | The unique ID of the customer source\n\n// Call endpoint and get data\ntry\n{\n    $get_customer_source_records = $care_cloud->customerSourceRecordsApi()->getCustomerSourceRecords(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $customer_id,\n        $external_id,\n        $customer_source_id\n    );\n    $customer_source_records = $get_customer_source_records->getData()->getCustomerSourceRecords();\n    $total_items = $get_customer_source_records->getData()->getTotalItems();\n    var_dump($customer_source_records);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /customer-types:
    get:
      tags:
        - Customer types
      summary: Get all customer types
      description: Get a list of customer types accepted in CRM CareCloud.
      operationId: getCustomerTypes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_types:
                        type: array
                        description: List of the customer types.
                        items:
                          $ref: '#/components/schemas/Customer-type'
                      total_items:
                        type: integer
                        description: The number of all found customer types.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_customer_types = $care_cloud->customerTypesApi()->getCustomerTypes(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $customer_types = $get_customer_types->getData()->getCustomerTypes();\n    $total_items = $get_customer_types->getData()->getTotalItems();\n    var_dump($customer_types);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/customer-types/{customer_type_id}':
    get:
      tags:
        - Customer types
      summary: Detail of a customer type
      description: Get information about a specific customer type.
      operationId: getCustomerType
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_type_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer-type'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_type_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID og the customer type\n\n// Call endpoint and get data\ntry\n{\n    $get_customer_type = $care_cloud->customerTypesApi()->getCustomerType($customer_type_id, $accept_language);\n    $customer_type = $get_customer_type->getData();\n    var_dump($customer_type);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /events:
    get:
      tags:
        - Events
      summary: Get information about all events
      description: Get a list of events in CRM CareCloud.
      operationId: getEvents
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/event_type_id'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/external_id'
        - $ref: '#/components/parameters/event_type_ids'
        - $ref: '#/components/parameters/include_property_records'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      events:
                        type: array
                        description: Collection of all events.
                        items:
                          $ref: '#/components/schemas/Event'
                      total_items:
                        type: integer
                        description: The number of all found events.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$event_type_id = null; // string | The unique ID of the event type (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional, default is null)\n$external_id = null; // string | The unique external ID (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_events = $care_cloud->eventsApi()->getEvents(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $event_type_id,\n        $customer_id,\n        $external_id\n    );\n    $events = $get_events->getData()->getEvents();\n    $total_items = $get_events->getData()->getTotalItems();\n    var_dump($events);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Events
      summary: Create a new event
      description: Add a new event.
      operationId: postEvent
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  $ref: '#/components/schemas/Event'
                property_records:
                  type: array
                  description: List of an event property records.
                  items:
                    $ref: '#/components/schemas/PropertyRecord'
              required:
                - event
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      event_id:
                        type: string
                        description: The unique ID of the event.
                        example: 82de12eb8b138791e678fd11c3
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Event;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\EventsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PropertyRecord;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the event data\n$event = new Event();\n$event->setEventTypeId('82d0f9d976dee39aacd13dc7ea'); // string | The unique ID of the event type\n$event->setCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID for the card holder\n$event->setExternalId('e123'); // string | The unique external ID of the event\n$event->setData(null); // string, string[] or object | Additional data of the event. Serialized data in JSON (optional)\n$event->setCreatedAt(null); // string | Date and time of the event (YYYY-MM-DD HH:MM:SS) (optional)\n$event->setSecondaryExternalId(null); // string | Additional external ID of the event (optional)\n\n$property_record = new PropertyRecord();\n$property_record->setPropertyId('account_event_type_records_count'); // string | The unique ID of the property\n$property_record->setPropertyValue(2); // (string or null) or (number or null) or (integer or null) or (boolean or null) or (Array of any or null) or (object or null) | Value of the property (optional)\n\n// Set the request body\n$body = new EventsBody();\n$body->setEvent($event);\n$body->setPropertyRecords(array($property_record)); // array of objects | List of an event property records (optional)\n\n// Call endpoint and post data\ntry\n{\n    $post_event = $care_cloud->eventsApi()->postEvent($body, $accept_language);\n    $event_id = $post_event->getData()->getEventId();\n    var_dump($event_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/events/{event_id}':
    get:
      tags:
        - Events
      summary: Get an event
      description: Get information about a specific event.
      operationId: getEvent
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/event_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$event_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the event\n\n// Call endpoint and get data\ntry\n{\n    $get_event = $care_cloud->eventsApi()->getEvent($event_id, $accept_language);\n    $event = $get_event->getData();\n    var_dump($event);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/events/{event_id}/property-records':
    get:
      tags:
        - Events
      summary: Get a collection of event properties records
      description: Get information about all property records on an event.
      operationId: getSubEventProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/event_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      property_records:
                        type: array
                        description: List of property records.
                        items:
                          $ref: '#/components/schemas/PropertyRecord'
                      total_items:
                        type: integer
                        description: The number of all found event property records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$event_id = '81dee640727c45e3a7da28299e'; // string | The unique ID of the event\n\n// Call endpoint and get data\ntry\n{\n    $get_property_records = $care_cloud->eventsApi()->getSubEventProperties($event_id, $accept_language);\n    $property_records = $get_property_records->getData()->getPropertyRecords();\n    $total_items = $get_property_records->getData()->getTotalItems();\n    var_dump($property_records);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /event-groups:
    get:
      tags:
        - Event groups
      summary: Get all event groups
      description: Get a list of all event groups.
      operationId: getEventGroups
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/text_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      event_groups:
                        type: array
                        description: List of all event groups.
                        items:
                          $ref: '#/components/schemas/EventGroup'
                      total_items:
                        type: integer
                        description: The number of all found event groups.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n$text_id = null; // string | Text ID of an event group\n\n// Call endpoint and get data\ntry\n{\n    $get_event_groups = $care_cloud->eventGroupsApi()->getEventGroups(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name,\n        $text_id\n    );\n    $event_groups = $get_event_groups->getData()->getEventGroups();\n    $total_items = $get_event_groups->getData()->getTotalItems();\n    var_dump($event_groups);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/event-groups/{event_group_id}':
    get:
      tags:
        - Event groups
      summary: Get an event group
      description: Get information about a specific event group.
      operationId: getEventGroup
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/event_group_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EventGroup'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$event_group_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the event group\n\n// Call endpoint and get data\ntry\n{\n    $get_event_group = $care_cloud->eventGroupsApi()->getEventGroup(\n        $event_group_id,\n        $accept_language\n    );\n    $event_group = $get_event_group->getData();\n    var_dump($event_group);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /event-properties:
    get:
      tags:
        - Event properties
      summary: Get all event properties
      description: Get information about event properties.
      operationId: getEventProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      event_properties:
                        type: array
                        description: List of all event properties.
                        items:
                          $ref: '#/components/schemas/Property'
                      total_items:
                        type: integer
                        description: The number of all found event properties.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_event_properties = $care_cloud->eventPropertiesApi()->getEventProperties(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $event_properties = $get_event_properties->getData()->getEventProperties();\n    $total_items = $get_event_properties->getData()->getTotalItems();\n    var_dump($event_properties);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/event-properties/{event_property_id}':
    get:
      tags:
        - Event properties
      summary: Get an event property
      description: Get information about a specific event property.
      operationId: getEventProperty
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/event_property_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$event_property_id = 'account_event_type_records_count'; // string | The unique ID of the event property\n\n// Call endpoint and get data\ntry\n{\n    $get_event_property = $care_cloud->eventPropertiesApi()->getEventProperty($event_property_id, $accept_language);\n    $event_property = $get_event_property->getData();\n    var_dump($event_property);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /event-types:
    get:
      tags:
        - Event types
      summary: Get all event types
      description: Get a list of all event types.
      operationId: getEventTypes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      event_types:
                        type: array
                        description: List of all event types.
                        items:
                          $ref: '#/components/schemas/EventType'
                      total_items:
                        type: integer
                        description: The number of all found event types.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_event_types = $care_cloud->eventTypesApi()->getEventTypes(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $event_types = $get_event_types->getData()->getEventTypes();\n    $total_items = $get_event_types->getData()->getTotalItems();\n    var_dump($event_types);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/event-types/{event_type_id}':
    get:
      tags:
        - Event types
      summary: Get an event type
      description: Get information about a specific event type.
      operationId: getEventType
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/event_type_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EventType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$event_type_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the event type\n\n// Call endpoint and get data\ntry\n{\n    $get_event_type = $care_cloud->eventTypesApi()->getEventType($event_type_id, $accept_language);\n    $event_type = $get_event_type->getData();\n    var_dump($event_type);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/event-types/{event_type_id}/event-properties':
    get:
      tags:
        - Event types
      summary: Get a collection of event type properties
      description: Get information about all properties of event type.
      operationId: getSubEventTypeProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/event_type_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      event_properties:
                        type: array
                        description: List of event properties.
                        items:
                          $ref: '#/components/schemas/Property'
                      total_items:
                        type: integer
                        description: The number of all found event properties.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once 'vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$event_type_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the event type\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_event_properties = $care_cloud->eventTypesApi()->getSubEventTypeProperties(\n        $event_type_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $event_properties = $get_event_properties->getData()->getEventProperties();\n    $total_items = $get_event_properties->getData()->getTotalItems();\n    var_dump($event_properties);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /interests:
    get:
      tags:
        - Interests
      summary: Get all interests
      description: Get information about interests as a list of all interests.
      operationId: getInterests
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      interests:
                        type: array
                        description: List of all interests.
                        items:
                          $ref: '#/components/schemas/Interest'
                      total_items:
                        type: integer
                        description: The number of all found interests.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_interests = $care_cloud->interestsApi()->getInterests(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $interests = $get_interests->getData()->getInterests();\n    $total_items = $get_interests->getData()->getTotalItems();\n    var_dump($interests);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/interests/{interest_id}':
    get:
      tags:
        - Interests
      summary: Get an interest
      description: Get information about a specific interest.
      operationId: getInterest
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/interest_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$interest_id = '81eaeea13b8984a169c490a325'; // string | The unique ID of the interest\n\n// Call endpoint and get data\ntry\n{\n    $get_interest = $care_cloud->interestsApi()->getInterest($interest_id, $accept_language);\n    $interest = $get_interest->getData();\n    var_dump($interest);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /languages:
    get:
      tags:
        - Languages
      summary: Get all languages
      description: Get a list of all languages accepted in CRM CareCloud.
      operationId: getLanguages
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/language_list_type'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      languages:
                        type: array
                        description: List of the language codes by ISO 639-1.
                        items:
                          $ref: '#/components/schemas/Language'
                      total_items:
                        type: integer
                        description: The number of all found languages.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$language_list_type = 'web-portal'; // string | Type of language list, possible values: \"carecloud-api\" \"web-portal\" \"customer-communication\" (optional, the default value is \"carecloud-api\")\n\n// Call endpoint and get data\ntry\n{\n    $get_languages = $care_cloud->languagesApi()->getLanguages($accept_language, $language_list_type);\n    $languages = $get_languages->getData()->getLanguages();\n    $total_items = $get_languages->getData()->getTotalItems();\n    var_dump($languages);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /messages:
    get:
      tags:
        - Messages
      summary: Get all messages
      description: Get information about messages as a list.
      operationId: getMessages
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/contact'
        - $ref: '#/components/parameters/communication_channel_id'
        - $ref: '#/components/parameters/send_time_from'
        - $ref: '#/components/parameters/send_time_to'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      messages:
                        type: array
                        description: List of all messages.
                        items:
                          $ref: '#/components/schemas/Message'
                      total_items:
                        type: integer
                        description: The number of all found messages.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once 'vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional)\n$contact = null; // string | Email of phone number that was used as a contact in message (optional)\n$communication_channel_id = null; // integer | The unique ID of the communication channel. Possible values are: 1 - email / 2- SMS / 4 - PUSH notification (Apple or Google)/ 5 - internal system notification (optional)\n$send_time_from = null; // string | Start date and time of the time interval YYYY-MM-DD HH:MM:SS (optional)\n$send_time_to = null; // string | End date and time of the time interval YYYY-MM-DD HH:MM:SS (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_messages = $care_cloud->messagesApi()->getMessages(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $customer_id,\n        $contact,\n        $communication_channel_id,\n        $send_time_from,\n        $send_time_to\n    );\n    $messages = $get_messages->getData()->getMessages();\n    $total_items = $get_messages->getData()->getTotalItems();\n    var_dump($messages);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/messages/{message_id}':
    get:
      tags:
        - Messages
      summary: Get a message
      description: Get information about a specific message.
      operationId: getMessage
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/message_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$message_id = '8bd62e6ba18b3c791a9402cf3e'; // string | The unique ID of the message\n\n// Call endpoint and get data\ntry\n{\n    $get_message = $care_cloud->messagesApi()->getMessage(\n        $message_id,\n        $accept_language\n    );\n    $message = $get_message->getData();\n    var_dump($message);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/messages/{message_id}/detail':
    get:
      tags:
        - Messages
      summary: Get a message detail
      description: Get a message detail with customer data.
      operationId: getSubMessageDetail
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/message_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/MessageDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$message_id = '8bd62e6ba18b3c791a9402cf3e'; // string | The unique ID of the message\n\n// Call endpoint and get data\ntry\n{\n    $get_message_detail = $care_cloud->messagesApi()->getSubMessageDetail(\n        $message_id,\n        $accept_language\n    );\n    $message_detail = $get_message_detail->getData();\n    var_dump($message_detail);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /messages/actions/send-message:
    post:
      tags:
        - Messages
      summary: Send message
      description: |
        Send message (email, SMS or PUSH notification) to customer.
        ⚠️ Action methods are available only in theEnterprise interface.
      operationId: postMessageSend
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  $ref: '#/components/schemas/Message'
              required:
                - message
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsSendmessageBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Message;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Parameter;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the request body\n$parameter = new Parameter();\n$parameter->setParameterName('parameter_name');\n$parameter->setValue('parameter_value');\n\n$message = new Message();\n$message->setCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID of the customer\n$message->setMessageTemplateId('8bed991c68a470e7aaeffbf048'); // string | The unique ID of the message template\n$message->setContact('happycustomer@crmcarecloud.com'); // string | Email address or phone number of customer in case of send message to different contact than customer has in database (optional)\n$message->setCommunicationChannelId(1); // integer | 1 - email / 2- SMS / 4 - PUSH notification (Apple or Google)/ 5 - internal system notification\n$message->setMessageData(array($parameter));\n\n$body = new ActionsSendmessageBody();\n$body->setMessage($message);\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->messagesApi()->postMessageSend(\n        $body,\n        $accept_language\n    );\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /message-templates:
    get:
      tags:
        - Message templates
      summary: Get all message templates
      description: Get information about message templates as a list of all message templates.
      operationId: getMessageTemplates
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/communication_channel_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message_templates:
                        type: array
                        description: List of all message templates.
                        items:
                          $ref: '#/components/schemas/MessageTemplate'
                      total_items:
                        type: integer
                        description: The number of all found message templates.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_message_templates = $care_cloud->messageTemplatesApi()->getMessageTemplates(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $message_templates = $get_message_templates->getData()->getMessageTemplates();\n    $total_items = $get_message_templates->getData()->getTotalItems();\n    var_dump($message_templates);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/message-templates/{message_template_id}':
    get:
      tags:
        - Message templates
      summary: Get a message template
      description: Get information about a specific message template.
      operationId: getMessageTemplate
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/message_template_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/MessageTemplate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$message_template_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the message template\n\n// Call endpoint and get data\ntry\n{\n    $get_message_template = $care_cloud->messageTemplatesApi()->getMessageTemplate($message_template_id, $accept_language);\n    $message_template = $get_message_template->getData();\n    var_dump($message_template);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /one-time-password/actions/send:
    post:
      tags:
        - One Time Password
      summary: Send a one-time password to a communication channel.
      description: |
        Action method sends generated password to the selected communication channel and provides verification string.
        Resource provides a mechanism OTP for the verification using a unique password that can only be used once.
      operationId: postSendOtp
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                external_application_id:
                  description: 'ID of the external application that requested one time password. If you dont have external application id, guide how to get it is available [here](#section/Authentication).'
                  type: string
                  example: 82de12eb8b138791e678fd11c3
                communication_channel_id:
                  type: integer
                  enum:
                    - 1
                    - 2
                    - 4
                    - 5
                  description: 'The unique ID of the communication channel. *Possible values are: 1 - email / 2- SMS / 4 - PUSH notification (Apple or Google)/ 5 - internal system notification*'
                  example: 1
                recipient:
                  type: string
                  description: 'Recipient of the message with OTP. The parameter could contain email, phone number or other identifier of the message recipient.'
                  example: happy_customer@crmcarecloud.com
                otp_type:
                  type: integer
                  description: 'Parameter sets witch OTP type should be generated. *Possible values: 1 - alphanumeric, 2 - numeric*'
                  enum:
                    - 1
                    - 2
                  example: 2
                  default: 1
                message_template_id:
                  type: string
                  description: 'The unique ID of the message_template. If not set, CareCloud uses default value from the system configuration.'
                  example: null
              required:
                - communication_channel_id
                - recipient
                - external_application_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      request_id:
                        type: string
                        description: 'The parameter specifies the request that caused the OTP to be created. Request ID will be used as one of the parameter in method [/one-time-password/actions/verify](#operation/postVerifyOtp).'
                        example: c27c29917a1dec03ef0673d823619b776ab93353
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsSendBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the request body\n$body = new ActionsSendBody();\n$body->setExternalApplicationId($external_app_id) // string | ID of the external application that requested one time password\n->setCommunicationChannelId(1) // integer | The unique ID of the communication channel. Possible values are: 1 - email / 2- SMS / 4 - PUSH notification (Apple or Google)/ 5 - internal system notification\n->setRecipient('happy_customer@cortex.cz') // string | Recipient of the message with OTP. The parameter could contain email, phone number or other identifier of the message recipient\n->setOtpType(1) // integer | Parameter sets witch OTP type should be generated. Possible values: 1- alphanumeric, 2- numeric (optional)\n->setMessageTemplateId(null); // string | The unique ID of the message_template. If not set, CareCloud uses default value from the system configuration (optional)\n\n// Call endpoint and post data\ntry\n{\n    $post_otp = $care_cloud->oneTimePasswordApi()->postSendOtp($body, $accept_language);\n    $request_id = $post_otp->getData()->getRequestId();\n    var_dump($request_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /one-time-password/actions/verify:
    post:
      tags:
        - One Time Password
      summary: Verify a one-time password
      description: |
        Action method verify one time password. Resource provides a mechanism OTP for the verification using a unique password that can only be used once.
      operationId: postVerifyOtp
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                verification_code:
                  type: string
                  description: 'Verification code from email, SMS or notification provided by recipient.'
                  example: '7256'
                request_id:
                  type: string
                  description: 'The parameter specifies the request that caused the OTP to be created. Request ID was created in the action method [/one-time-password/actions/send](#operation/postSendOtp).'
                  example: 106c5ce60ed0830ffb813135bfff7cad9f4c3e47
                external_application_id:
                  type: string
                  description: 'ID of the external application that requested one time password. If you dont have external application id, guide how to get it is available [here](#section/Authentication).'
                  example: 82de12eb8b138791e678fd11c3
              required:
                - verification_code
                - request_id
                - external_application_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      is_valid:
                        type: boolean
                        description: Result of the OTP verification.
                        example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsVerifyBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n$body = new ActionsVerifyBody();\n$body->setVerificationCode('7R29') // string | Verification code from email, SMS or notification provided by recipient\n->setRequestId('b223286fbc1de2db689d443be35b1f6078f059d3') // string | The parameter specifies the request that caused the OTP to be created\n->setExternalApplicationId($external_app_id); // string | ID of the external application that requested one time password\n\n// Call endpoint and post data\ntry\n{\n    $post_verify_otp = $care_cloud->oneTimePasswordApi()->postVerifyOtp($body, $accept_language);\n    $is_valid = $post_verify_otp->getData()->getIsValid();\n    var_dump($is_valid);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /orders:
    get:
      tags:
        - Orders
      summary: Get all orders
      description: Get information about all customer orders.
      operationId: getOrders
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/state'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      orders:
                        type: array
                        description: Collection of the customer orders.
                        items:
                          $ref: '#/components/schemas/Order'
                      total_items:
                        type: integer
                        description: The number of all found customer orders.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    post:
      tags:
        - Orders
      summary: Create an order
      description: Create a new order for customer.
      operationId: postOrder
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  $ref: '#/components/schemas/Order'
              required:
                - order
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      order_id:
                        type: string
                        description: The unique ID of the order.
                        example: 80af8a5dcc0702daf336f4de41
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  '/orders/{order_id}':
    get:
      tags:
        - Orders
      summary: Get an order
      description: Get information about a specific order.
      operationId: getOrder
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/order_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /partners:
    get:
      tags:
        - Partners
      summary: Get all partners
      description: Get a list of partners accepted in CRM CareCloud.
      operationId: getPartners
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      partners:
                        type: array
                        description: List of a partners.
                        items:
                          $ref: '#/components/schemas/Partner'
                      total_items:
                        type: integer
                        description: The number of all found partners.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_partners = $care_cloud->partnersApi()->getPartners(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $partners = $get_partners->getData()->getPartners();\n    $total_items = $get_partners->getData()->getTotalItems();\n    var_dump($partners);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/partners/{partner_id}':
    get:
      tags:
        - Partners
      summary: Get a partner
      description: Get information about a specific partner.
      operationId: getPartner
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/partner_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Partner'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$partner_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the partner\n\n// Call endpoint and get data\ntry\n{\n    $get_partner = $care_cloud->partnersApi()->getPartner($partner_id, $accept_language);\n    $partner = $get_partner->getData();\n    var_dump($partner);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/partners/{partner_id}/property-records':
    get:
      tags:
        - Partners
      summary: Get a collection of property records
      description: Get information about all property records tied to the partner.
      operationId: getSubPartnerProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/partner_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      property_records:
                        type: array
                        description: List of property records.
                        items:
                          $ref: '#/components/schemas/PropertyRecord'
                      total_items:
                        type: integer
                        description: The number of all found partner property records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /partner-properties:
    get:
      tags:
        - Partner properties
      summary: Get all partner properties
      description: |
        Get information about partner properties.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: getPartnerProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      partner_properties:
                        type: array
                        description: List of all partner properties.
                        items:
                          $ref: '#/components/schemas/Property'
                      total_items:
                        type: integer
                        description: The number of all found partner properties.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  '/partner-properties/{partner_property_id}':
    get:
      tags:
        - Partner properties
      summary: Get a partner property
      description: Get information about a specific partner property.
      operationId: getPartnerProperty
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/partner_property_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /payment-types:
    get:
      tags:
        - Payment types
      summary: Get all payment types
      description: Get a list of payment types accepted in CRM CareCloud.
      operationId: getPaymentTypes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      payment_types:
                        type: array
                        description: List of the payment types.
                        items:
                          $ref: '#/components/schemas/PaymentType'
                      total_items:
                        type: integer
                        description: The number of all found payment types.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  '/payment-types/{payment_type_id}':
    get:
      tags:
        - Payment types
      summary: Detail of an payment type
      description: Get information about a specific payment type.
      operationId: getPaymentType
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/payment_type_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PaymentType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /points:
    get:
      tags:
        - Points
      summary: Get all point records
      description: Get a list of all point transactions and their current values.
      operationId: getPoints
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/point_type_id'
        - $ref: '#/components/parameters/create_point_time_from'
        - $ref: '#/components/parameters/create_point_time_to'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      points:
                        type: array
                        description: List of the point records.
                        items:
                          $ref: '#/components/schemas/Point'
                      total_items:
                        type: integer
                        description: The number of all found point records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional, default is null)\n$point_type_id = null; // string | The unique ID of the point type (optional, default is null)\n$create_point_time_from = null; // string | Date and time from of the create point record (YYYY-MM-DD HH:MM:SS) (optional, default is null)\n$create_point_time_to = null; // string | Date and time to of the create point record (YYYY-MM-DD HH:MM:SS) (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_points = $care_cloud->pointsApi()->getPoints(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $customer_id,\n        $point_type_id,\n        $create_point_time_from,\n        $create_point_time_to\n    );\n    $points = $get_points->getData()->getPoints();\n    $total_items = $get_points->getData()->getTotalItems();\n    var_dump($points);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/points/{point_id}':
    get:
      tags:
        - Points
      summary: Get a point record
      description: Get information about a specific point transaction.
      operationId: getPoint
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/point_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Point'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$point_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the point record\n\n// Call endpoint and get data\ntry\n{\n    $get_point_record = $care_cloud->pointsApi()->getPoint($point_id, $accept_language);\n    $point_record = $get_point_record->getData();\n    var_dump($point_record);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/points/{point_id}/purchases':
    get:
      tags:
        - Points
      summary: Get a collection of purchases
      description: Get information about all purchases by points resource.
      operationId: getSubPointPurchases
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/point_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/store_id'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/purchase_type_id'
        - $ref: '#/components/parameters/payment_time_from'
        - $ref: '#/components/parameters/payment_time_to'
        - $ref: '#/components/parameters/purchase_items_extension'
        - $ref: '#/components/parameters/external_purchase_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      purchases:
                        type: array
                        description: List of purchases.
                        items:
                          $ref: '#/components/schemas/Purchase'
                      total_items:
                        type: integer
                        description: The number of all found purchases.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$point_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the point record\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$store_id = null; // string | The unique ID of the store (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional, default is null)\n$type_id = null; // string | The unique ID of the purchase type (optional, default is null)\n$payment_time_from = null; // string | Date and time from of the create point record (YYYY-MM-DD HH:MM:SS) (optional, default is null)\n$payment_point_time_to = null; // string | Date and time to of the create point record (YYYY-MM-DD HH:MM:SS) (optional, default is null)\n$purchase_items_extension = false; // boolean | If true, resource returns extended response with purchase items. If false, the resource won't be extended. (optional, default is false)\n\n// Call endpoint and get data\ntry\n{\n    $get_purchases = $care_cloud->pointsApi()->getSubPointPurchases(\n        $point_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $store_id,\n        $customer_id,\n        $type_id,\n        $payment_time_from,\n        $payment_point_time_to,\n        $purchase_items_extension\n    );\n    $purchases = $get_purchases->getData()->getPurchases();\n    $total_items = $get_purchases->getData()->getTotalItems();\n    var_dump($purchases);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /points/actions/reduce-points:
    post:
      tags:
        - Points
      summary: Points redemption
      description: |
        New point redemption record is created.
        ⚠️ Action methods are available only in the Enterprise interface.
      operationId: postPointsRedemption
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: float
                  description: Number of redeemed points.
                  example: 100
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
                partner_id:
                  type: string
                  readOnly: false
                  description: The unique ID of the partner.
                  example: 86e05affc7a7abefcd513ab400
                point_type_id:
                  type: string
                  readOnly: false
                  description: 'The unique ID of the point type. If the parameter is not set, a default point type is set.'
                  example: 86e05affc7a7abefcd513ab400
                note:
                  type: string
                  readOnly: false
                  description: Note for the new point record.
                  example: Birthdate point reward
              required:
                - amount
                - customer_id
                - partner_id
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      point_id:
                        type: string
                        readOnly: true
                        description: The unique ID of the point redemption.
                        example: 80c2c110a50db9f8134b6b72b3
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsReducepointsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the request body\n$body = new ActionsReducepointsBody();\n$body->setAmount(17); // float | Number of redeemed points\n$body->setCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID of the customer\n$body->setPartnerId(null); // string | The unique ID of the partner (optional)\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->pointsApi()->postPointsRedemption($body, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /points/actions/assign-points:
    post:
      tags:
        - Points
      summary: Assign of points
      description: |
        Creates a new point collection record with the corresponding value.
        ⚠️ Action methods are available only in Enterprise interface.
      operationId: postPointsAssign
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: float
                  description: The number of collected points.
                  example: 1500
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
                partner_id:
                  type: string
                  readOnly: false
                  description: The unique ID of the partner.
                  example: 86e05affc7a7abefcd513ab400
                point_type_id:
                  type: string
                  readOnly: false
                  description: 'The unique ID of the point type. If the parameter is not set, a default point type is set.'
                  example: 86e05affc7a7abefcd513ab400
                note:
                  type: string
                  readOnly: false
                  description: Note for the new point record.
                  example: Birthdate point reward
              required:
                - amount
                - customer_id
                - partner_id
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      point_id:
                        type: string
                        description: The unique ID of the point record.
                        example: 82de12eb8b138791e678fd11c3
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsAssignpointsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the request body\n$body = new ActionsAssignpointsBody();\n$body->setAmount(100); // float | Number of assigned points\n$body->setCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID of the customer\n$body->setPartnerId(null); // string | The unique ID of the partner (optional)\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->pointsApi()->postPointsAssign($body, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /points/actions/transfer-points:
    post:
      tags:
        - Points
      summary: Transfer points
      description: |
        Transfers points from one customer to another.
      operationId: postPointsTransfer
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                original_customer_id:
                  type: string
                  description: ID of the original points holder.
                  example: 8ea2591121e636086a4a9c0992
                new_customer_id:
                  type: string
                  description: ID of the new points holder.
                  example: 84b9167cc2f01ff007d98e1633
                amount:
                  type: number
                  format: float
                  description: Number of the transferred points.
                  example: 100
                point_type_id:
                  type: string
                  readOnly: false
                  description: Type of the transferred points.
                  example: 8adcb83164fa7e12668035d43e
                note:
                  type: string
                  readOnly: false
                  description: Note for the new point record.
                  example: Birthdate point reward
              required:
                - original_customer_id
                - new_customer_id
                - amount
                - point_type_id
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsTransferpointsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1. Default: cs, en-gb;q=0.8\n\n// Set the request body\n$body = new ActionsTransferpointsBody();\n$body->setAmount(100); // float | Number of transferred points\n$body->setOriginalCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID of the original point's holder\n$body->setNewCustomerId('88a1b431227d2172d60285b4e1'); // string | The unique ID of the new point's holder\n$body->setPointTypeId('8adcb83164fa7e12668035d43e'); // string | Type of the transferred points\n\n// Call endpoint and post data\ntry\n{\n  $care_cloud->pointsApi()->postPointsTransfer($body, $accept_language);\n}\ncatch(ApiException $e)\n{\n  die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /point-history:
    get:
      tags:
        - Point history
      summary: Get point transaction history
      description: Get a list of point transactions of the customer.
      operationId: getPointHistory
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id_required'
        - $ref: '#/components/parameters/store_id'
        - $ref: '#/components/parameters/partner_id'
        - $ref: '#/components/parameters/time_from_full'
        - $ref: '#/components/parameters/time_to_full'
        - $ref: '#/components/parameters/point_operation_type'
        - $ref: '#/components/parameters/point_operation_note'
        - $ref: '#/components/parameters/point_type_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      point_history:
                        type: array
                        description: List of the point history records.
                        items:
                          $ref: '#/components/schemas/PointHistoryRecord'
                      total_items:
                        type: integer
                        description: The number of all found point history records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once 'vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 10; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$store_id = null; // string | The unique ID of the store in CareCloud (optional, default is null)\n$partner_id = null; // string | Unique ID of the partner from the resource GET /partners (optional, default is null)\n$time_from = null; // string | Filter results on the start of the time interval, YYYY-MM-DD HH:MM:SS (optional, default is null)\n$time_to = null; // string | Filter results on the end of the time interval, YYYY-MM-DD HH:MM:SS (optional, default is null)\n$point_operation_type = null; // string | Search record by the operation type name or a part of the operation type name (optional, default is null)\n$point_operation_note = null; // string | Search record by the operation note or a part of the operation note (optional, default is null)\n$point_type_id = null; // string | The unique ID of a point type (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_point_history = $care_cloud->pointHistoryApi()->getPointHistory(\n        $customer_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $store_id,\n        $partner_id,\n        $time_from,\n        $time_to,\n        $point_operation_type,\n        $point_operation_note,\n        $point_type_id\n    );\n    $point_history = $get_point_history->getData()->getPointHistory();\n    $total_items = $get_point_history->getData()->getTotalItems();\n    var_dump($point_history);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /point-reservations:
    get:
      tags:
        - Point reservation
      summary: Get all point reservations
      description: Get a list of all point reservations.
      operationId: getPointReservations
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/pointRes_external_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      point_reservations:
                        type: array
                        description: List of the point reservations.
                        items:
                          $ref: '#/components/schemas/PointReservation'
                      total_items:
                        type: integer
                        description: The number of all found point reservations.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional, default is null)\n$external_id = null; // string | The external ID of the point reservation (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_point_reservations = $care_cloud->pointReservationsApi()->getPointReservations(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $customer_id,\n        $external_id\n    );\n    $point_reservations = $get_point_reservations->getData()->getPointReservations();\n    $total_items = $get_point_reservations->getData()->getTotalItems();\n    var_dump($point_reservations);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/point-reservations/{point_reservation_id}':
    get:
      tags:
        - Point reservation
      summary: Get a point reservation
      description: Get information about a specific point reservation.
      operationId: getPointReservation
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/point_reservation_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PointReservation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$point_reservation_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the point reservation\n\n// Call endpoint and get data\ntry\n{\n    $get_point_reservation = $care_cloud->pointReservationsApi()->getPointReservation($point_reservation_id, $accept_language);\n    $point_reservation = $get_point_reservation->getData();\n    var_dump($point_reservation);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /point-reservations/actions/reserve-points:
    post:
      tags:
        - Point reservation
      summary: Create point reservation
      description: New point reservation is created.
      operationId: postPointReservationCreate
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                external_id:
                  type: string
                  readOnly: false
                  description: The external unique ID of the product brand.
                  example: '123459'
                customer_id:
                  type: string
                  readOnly: false
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
                amount:
                  type: number
                  format: float
                  readOnly: false
                  description: The number of reserved points.
                  example: 11
                expiration_time:
                  type: string
                  readOnly: false
                  description: 'Date and time of the point reservation expiration. *(YYYY-MM-DD HH:MM:SS)*'
                  example: '2023-10-31 00:00:00'
              required:
                - customer_id
                - external_id
                - amount
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsReservepointsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the request body\n$body = new ActionsReservepointsBody();\n$body->setExternalId('e134'); // string | The external unique ID of the product brand\n$body->setCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID of the customer\n$body->setAmount(100); // float | The number of the reserved points\n$body->setExpirationTime(null); // string | Date and time of the point reservation expiration (YYYY-MM-DD HH:MM:SS) (optional)\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->pointReservationsApi()->postPointReservationCreate($body, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /point-reservations/actions/free-points:
    post:
      tags:
        - Point reservation
      summary: Free points from reservation
      description: Release reserved points.
      operationId: postPointReservationRelease
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                external_id:
                  type: string
                  description: The external ID of the point reservation.
                  example: '123461'
              required:
                - external_id
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsFreepointsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the request body\n$body = new ActionsFreepointsBody();\n$body->setExternalId('e134'); // string | The external ID of the point reservation\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->pointReservationsApi()->postPointReservationRelease($body, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /point-types:
    get:
      tags:
        - Point types
      summary: Get all point types
      description: Get a list of all point types.
      operationId: getPointsTypes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      point_types:
                        type: array
                        description: List of the point types.
                        items:
                          $ref: '#/components/schemas/PointType'
                      total_items:
                        type: integer
                        description: The number of all found point types.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_point_types = $care_cloud->pointTypesApi()->getPointsTypes(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $point_types = $get_point_types->getData()->getPointTypes();\n    $total_items = $get_point_types->getData()->getTotalItems();\n    var_dump($point_types);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/point-types/{point_type_id}':
    get:
      tags:
        - Point types
      summary: Get a point type
      description: Get information about a specific point type.
      operationId: getPointType
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/point_type_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PointType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$point_type_id = '81d503b99cc748b3ca189383ad'; // string | The unique ID of the point type\n\n// Call endpoint and get data\ntry\n{\n    $get_point_type = $care_cloud->pointTypesApi()->getPointType($point_type_id, $accept_language);\n    $point_type = $get_point_type->getData();\n    var_dump($point_type);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /products:
    get:
      tags:
        - Products
      summary: Collection of available products
      description: Get information about all available products.
      operationId: getProducts
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/product_code'
        - $ref: '#/components/parameters/external_id'
        - $ref: '#/components/parameters/external_type_code'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      products:
                        type: array
                        description: List of CareCloud products.
                        items:
                          $ref: '#/components/schemas/Product'
                      total_items:
                        type: integer
                        description: The number of all found products.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n$code = null; // string | The code of the product (optional, default is null)\n$external_id = null; // string | The unique external id (optional, default is null)\n$external_type_code = 'GLOBAL'; // string | If the parameter is not set, API uses as a default value GLOBAL (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_products = $care_cloud->productsApi()->getProducts(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name,\n        $code,\n        $external_id,\n        $external_type_code\n    );\n    $products = $get_products->getData()->getProducts();\n    $total_items = $get_products->getData()->getTotalItems();\n    var_dump($products);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/products/{product_id}':
    get:
      tags:
        - Products
      summary: Detail of a product
      description: Get information about a specific product.
      operationId: getProduct
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/product_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$product_id = '89bdacbffb5c82f2c52cb9ae8f'; // string | The unique ID of the product\n\n// Call endpoint and get data\ntry\n{\n    $get_product = $care_cloud->productsApi()->getProduct($product_id, $accept_language);\n    $product = $get_product->getData();\n    var_dump($product);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /products/batch:
    post:
      tags:
        - Products
      summary: 'Create a batch of products. If a product already exists, an update is applied.'
      description: |
        Batch process helps to add multiple products in one request.<br/>  ⚠️ Adjust batch sizes based on processing times. We recommended use maximum amount of 1000 records and adjust the batch size based on processing time.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: postBulkProducts
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  description: List of the CareCloud products.
                  items:
                    $ref: '#/components/schemas/ProductBatch'
              required:
                - products
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PluId;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ProductBatch;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ProductsBatchBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set products info\n$plu_id = new PluId();\n$plu_id->setListCode('GLOBAL'); // string | Code of the particular product list (“GLOBAL”, “SKU”, “PLU”, etc.)\n$plu_id->setCode('abc123'); // string | Code of product from the product list\n\n$product1 = new ProductBatch();\n$product1->setName('Apple Clock'); // strong | The name of the product\n$product1->setCode(null); // string | The code of the product (optional)\n$product1->setPluIds(array($plu_id)); // array of PluID objects\n$product1->setProductGroupId(null); // string | The unique ID of the product group (optional)\n$product1->setProductGroupExternalId(null); // string | The unique external ID of the product group (optional)\n$product1->setProductBrandId(null); // string | The unique ID of the product brand (optional)\n$product1->setProductBrandExternalId(null); // string | The unique external ID of the product brand (optional)\n$product1->setStoreId(null); // string | The unique ID for the store where the product group is valid (optional)\n\n// Set the request body\n$body = new ProductsBatchBody();\n$body->setProducts(array($product1));\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->productsApi()->postBulkProducts($body, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /product-brands:
    get:
      tags:
        - Product brands
      summary: Get all product brand
      description: Get a list of all product brands.
      operationId: getProductBrands
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      product_brands:
                        type: array
                        description: List of all product brands.
                        items:
                          $ref: '#/components/schemas/ProductBrand'
                      total_items:
                        type: integer
                        description: The number of all found product brands.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_product_brands = $care_cloud->productBrandsApi()->getProductBrands(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $product_brands = $get_product_brands->getData()->getProductBrands();\n    $total_items = $get_product_brands->getData()->getTotalItems();\n    var_dump($product_brands);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/product-brands/{product_brand_id}':
    get:
      tags:
        - Product brands
      summary: Get a product brand
      description: Get information about a specific product brand.
      operationId: getProductBrand
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/product_brand_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProductBrand'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$product_brand_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the product brand\n\n// Call endpoint and get data\ntry\n{\n    $get_product_brand = $care_cloud->productBrandsApi()->getProductBrand($product_brand_id, $accept_language);\n    $product_brand = $get_product_brand->getData();\n    var_dump($product_brand);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /product-brands/batch:
    post:
      tags:
        - Product brands
      summary: Create a batch of product brands
      description: |
        Batch process helps to add multiple product brands in one request.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: postBulkProductBrands
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_brands:
                  type: array
                  description: List of the CareCloud product brands.
                  items:
                    $ref: '#/components/schemas/ProductBrand'
                error_processing:
                  type: integer
                  enum:
                    - 1
                    - 2
                  description: 'The parameter describes the batch method behavior in case of error occurs. *Possible values are: 1 - It returns the first error found and rollback all previous changes (this is also the default behavior if the parameter is not set) / 2 - It creates all valid records and creates an error report from failed attempts.*'
              required:
                - product_brands
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ProductBrand;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ProductbrandsBatchBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set product brand info\n$product_brand = new ProductBrand();\n$product_brand->setName('Test brand'); // string | The name of the product brand\n$product_brand->setExternalId('123'); // string | The unique external ID of the product brand\n\n// Set the request body\n$body = new ProductbrandsBatchBody();\n$body->setProductBrands(array($product_brand));\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->productBrandsApi()->postBulkProductBrands($body, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /product-groups:
    get:
      tags:
        - Product groups
      summary: Get all product groups
      description: Get a list of all product groups.
      operationId: getProductGroups
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/store_id'
        - $ref: '#/components/parameters/product_group_code'
        - $ref: '#/components/parameters/external_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      product_groups:
                        type: array
                        description: List of all product groups.
                        items:
                          $ref: '#/components/schemas/ProductGroup'
                      total_items:
                        type: integer
                        description: The number of all found product groups.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n$store_id = null; // string | The unique ID of the store (optional, default is null)\n$code = null; // string | The code of the product group (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_product_groups = $care_cloud->productGroupsApi()->getProductGroups(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name,\n        $store_id,\n        $code\n    );\n    $product_groups = $get_product_groups->getData()->getProductGroups();\n    $total_items = $get_product_groups->getData()->getTotalItems();\n    var_dump($product_groups);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/product-groups/{product_group_id}':
    get:
      tags:
        - Product groups
      summary: Get a product group
      description: Get information about a specific product group.
      operationId: getProductGroup
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/product_group_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProductGroup'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$product_group_id = '8bf3397ab62d3ffd876fc9ae16'; // string | The unique ID of the product group\n\n// Call endpoint and get data\ntry\n{\n    $get_product_group = $care_cloud->productGroupsApi()->getProductGroup($product_group_id, $accept_language);\n    $product_group = $get_product_group->getData();\n    var_dump($product_group);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /product-groups/batch:
    post:
      tags:
        - Product groups
      summary: 'Create a batch of product groups. If a group already exists, an update is applied.'
      description: |
        Batch process helps to add multiple product groups in one request.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: postBulkProductGroups
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_groups:
                  type: array
                  description: List of the CareCloud product groups.
                  items:
                    $ref: '#/components/schemas/ProductGroup'
              required:
                - product_groups
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ProductGroup;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ProductgroupsBatchBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set product group info\n$product_group = new ProductGroup();\n$product_group->setName('Test group'); // string | Name of the product group\n$product_group->setExternalId('12'); // string | The external unique id of the product group\n$product_group->setParentProductGroupId(null); // string | The unique ID for the parent product group (optional)\n$product_group->setParentExternalId(null); // string | The unique external id for the parent product group (optional)\n$product_group->setCode(null); // string | The code of the product group (optional)\n$product_group->setStoreId(null); // string | The unique ID for the store where the product group is valid (optional)\n\n// Set the request body\n$body = new ProductgroupsBatchBody();\n$body->setProductGroups(array($product_group));\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->productGroupsApi()->postBulkProductGroups($body, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /product-properties:
    get:
      tags:
        - Product properties
      summary: Get all product properties
      description: Get information about product properties.
      operationId: getProductProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      product_properties:
                        type: array
                        description: List of all product properties.
                        items:
                          $ref: '#/components/schemas/Property'
                      total_items:
                        type: integer
                        description: The number of all found product properties.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_product_properties = $care_cloud->productPropertiesApi()->getProductProperties(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $product_properties = $get_product_properties->getData()->getProductProperties();\n    $total_items = $get_product_properties->getData()->getTotalItems();\n    var_dump($product_properties);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/product-properties/{product_property_id}':
    get:
      tags:
        - Product properties
      summary: Get a product property
      description: Get information about a specific product property.
      operationId: getProductProperty
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/product_property_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$product_property_id = 'for_recommendation_engine'; // string | The unique ID of the product group\n\n// Call endpoint and get data\ntry\n{\n    $get_product_property = $care_cloud->productPropertiesApi()->getProductProperty($product_property_id, $accept_language);\n    $product_property = $get_product_property->getData();\n    var_dump($product_property);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /product-reservations:
    get:
      tags:
        - Product reservations
      summary: Get all product reservations
      description: Get a list of product reservations.
      operationId: getProductReservations
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/store_id'
        - $ref: '#/components/parameters/reservation_state'
        - $ref: '#/components/parameters/external_reservation_list_type_id'
        - $ref: '#/components/parameters/external_reservation_code'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      product_reservations:
                        type: array
                        description: List of the product reservations.
                        items:
                          $ref: '#/components/schemas/ProductReservation'
                      total_items:
                        type: integer
                        description: The number of all found product reservations.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$reservation_code = null; // string | Code of the reservation (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional, default is null)\n$store_id = null; // string | The unique ID of the store (optional, default is null)\n$reservation_state = null; // integer | Current state of the product reservation. Possible values: 0 - Canceled / 1 - Entered / 2 - Accepted / 3 - Ready / 4 - Delivered / 5 - In progress / 6 - Not Picked up / 7 - Ordered / 8 - Being solved /\n\n// Call endpoint and get data\ntry\n{\n    $get_product_reservations = $care_cloud->productReservationsApi()->getProductReservations(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $reservation_code,\n        $customer_id,\n        $store_id,\n        $reservation_state\n    );\n    $product_reservations = $get_product_reservations->getData()->getProductReservations();\n    $total_items = $get_product_reservations->getData()->getTotalItems();\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Product reservations
      summary: Create a reservation
      description: Create a new product reservation in CRM CareCloud.
      operationId: postProductReservation
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_reservation:
                  $ref: '#/components/schemas/ProductReservation'
              required:
                - product_reservation
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      product_reservation_id:
                        type: string
                        description: The unique ID of the product reservation.
                        example: 81d503b99cc748b3ca189383ad
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  '/product-reservations/{product_reservation_id}':
    get:
      tags:
        - Product reservations
      summary: Get a product-reservation
      description: Get information about a specific product-reservation.
      operationId: getProductReservation
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/product_reservation_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProductReservation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  '/product-reservations/{product_reservation_id}/actions/cancel-reservation':
    post:
      tags:
        - Product reservations
      summary: Cancel reservation
      description: Cancel an existing reservation.
      operationId: postProductReservationCancel
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/product_reservation_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_reservation_id:
                  type: string
                  description: The unique ID of the product reservation.
                  example: 81d503b99cc748b3ca189383ad
              required:
                - product_reservation_id
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /product-reservations/actions/set-product-reservation-external-codes:
    post:
      tags:
        - Product reservations
      summary: Set one or multiple external reservation codes of different types to the product reservation
      description: |
        Set one or multiple external reservation codes of different types to the product reservation.<br/> The method will set all the reservation codes from the request.<br/> If a reservation code type already exists in the reservation, it will be replaced with a new value from the request. If the request does not contain the reservation code type already in the reservation, CareCloud will make no changes to the reservation code.
      operationId: postProductReservationSetExternalReservationCode
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_reservation_id:
                  type: string
                  description: The unique ID of the product reservation.
                  example: 81eaeea13b8984a169c490a325
                external_reservation_codes:
                  type: array
                  items:
                    $ref: '#/components/schemas/ExternalCode'
                  description: List of the external reservation codes. Id codes can have different sources. Please get in touch with your account manager for the list of ID sources.
              required:
                - product_reservation_id
                - external_reservation_codes
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /product-reservation-sources:
    get:
      tags:
        - Product reservation sources
      summary: Get all product reservation sources
      description: Get a list of product reservation sources accepted in CRM CareCloud.
      operationId: getProductReservationSources
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      product_reservation_sources:
                        type: array
                        description: List of the product reservation sources.
                        items:
                          $ref: '#/components/schemas/ProductReservationSource'
                      total_items:
                        type: integer
                        description: The number of all found product reservation sources.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_product_reservation_sources = $care_cloud->productReservationSourcesApi()->getProductReservationSources(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $product_reservation_sources = $get_product_reservation_sources->getData()->getProductReservationSources();\n    $total_items = $get_product_reservation_sources->getData()->getTotalItems();\n    var_dump($product_reservation_sources);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/product-reservation-sources/{product_reservation_source_id}':
    get:
      tags:
        - Product reservation sources
      summary: Detail of a product reservation source
      description: Get information about a specific product reservation source.
      operationId: getProductReservationSource
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/product_reservation_source_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProductReservationSource'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$product_reservation_source_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the product reservation source\n\n// Call endpoint and get data\ntry\n{\n    $get_product_reservation_source = $care_cloud->productReservationSourcesApi()->getProductReservationSource($product_reservation_source_id, $accept_language);\n    $product_reservation_source = $get_product_reservation_source->getData();\n    var_dump($product_reservation_source);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /product-reservation-external-list-types:
    get:
      tags:
        - Product reservation external list types
      summary: Get all product reservation external list types
      description: Get a list of product reservation external list types.
      operationId: getProductReservationExternalListTypes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/product_reservation_external_list_type_name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      product_reservation_external_list_types:
                        type: array
                        description: List of the product reservation external list types.
                        items:
                          $ref: '#/components/schemas/ProductReservationExternalListType'
                      total_items:
                        type: integer
                        description: The number of all found product reservation external list types.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_product_reservation_ext_list_types = $care_cloud->productReservationExternalListTypesApi()->getProductReservationExternalListTypes(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $product_reservation_ext_list_types = $get_product_reservation_ext_list_types->getData()->getProductReservationExternalListTypes();\n    $total_items = $get_product_reservation_ext_list_types->getData()->getTotalItems();\n    var_dump($product_reservation_ext_list_types);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/product-reservation-external-list-types/{product_reservation_external_list_type_id}':
    get:
      tags:
        - Product reservation external list types
      summary: Detail of a product reservation external list type
      description: Get information about a specific product reservation external list type.
      operationId: getProductReservationExternalListType
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/product_reservation_external_list_type_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProductReservationExternalListType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$product_reservation_external_list_type_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID\n\n// Call endpoint and get data\ntry\n{\n    $get_product_reservation_ext_list_type = $care_cloud->productReservationExternalListTypesApi()->getProductReservationExternalListType(\n        $product_reservation_external_list_type_id,\n        $accept_language\n    );\n    $product_reservation_ext_list_type = $get_product_reservation_ext_list_type->getData();\n    var_dump($product_reservation_ext_list_type);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /reservable-products:
    get:
      tags:
        - Reservable products
      summary: Get all reservable products
      description: Get the information as a list of reservable products.
      operationId: getReservableProducts
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/product_code'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      reservable_products:
                        type: array
                        description: List of reservable products.
                        items:
                          $ref: '#/components/schemas/Product'
                      total_items:
                        type: integer
                        description: The number of all found reservable products.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n$code = null; // string | Code of the product (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_reservable_products = $care_cloud->reservableProductsApi()->getReservableProducts(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name,\n        $code\n    );\n    $reservable_products = $get_reservable_products->getData()->getReservableProducts();\n    $total_items = $get_reservable_products->getData()->getTotalItems();\n    var_dump($reservable_products);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/reservable-products/{reservable_product_id}':
    get:
      tags:
        - Reservable products
      summary: Get a reservable product
      description: Get information about a specific reservable product.
      operationId: getReservableProduct
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/reservable_product_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$reservable_product_id = '89bdacbffb5c82f2c52cb9ae8f'; // string | The unique ID f the reservable product\n\n// Call endpoint and get data\ntry\n{\n    $get_reservable_product = $care_cloud->reservableProductsApi()->getReservableProduct($reservable_product_id, $accept_language);\n    $reservable_product = $get_reservable_product->getData();\n    var_dump($reservable_product);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /reservable-products/actions/search-reservable-products:
    post:
      tags:
        - Reservable products
      summary: Search reservable products
      operationId: postReservableProductsSearch
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                search_string:
                  type: string
                  description: String used for searching the results.
                  example: Ap
              required:
                - search_string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      search_results:
                        type: array
                        description: List of the results.
                        items:
                          $ref: '#/components/schemas/SearchResult'
                      total_items:
                        type: integer
                        description: Count of the results.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsSearchreservableproductsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Set the request body\n$body = new ActionsSearchreservableproductsBody();\n$body->setSearchString('Ca'); // string | String used for searching the results\n\n// Call endpoint and post data\ntry\n{\n    $post_reservable_products_search = $care_cloud->reservableProductsApi()->postReservableProductsSearch(\n        $body,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $reservable_products = $post_reservable_products_search->getData()->getSearchResults();\n    $total_items = $post_reservable_products_search->getData()->getTotalItems();\n    var_dump($reservable_products);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /purchases:
    get:
      tags:
        - Purchases
      summary: Get all purchases
      description: Get a list of purchases saved in CRM.
      operationId: getPurchases
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/store_id'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/purchase_type_id'
        - $ref: '#/components/parameters/payment_time_from'
        - $ref: '#/components/parameters/payment_time_to'
        - $ref: '#/components/parameters/purchase_items_extension'
        - $ref: '#/components/parameters/external_purchase_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      purchases:
                        type: array
                        description: List of purchases.
                        items:
                          $ref: '#/components/schemas/Purchase'
                      total_items:
                        type: integer
                        description: The number of all found purchases.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameter\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$store_id = null; // string | The unique ID of the store (optional, default is null)\n$type_id = null; // string | Purchase type (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_purchases = $care_cloud->customersApi()->getSubCustomerPurchases(\n        $customer_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $store_id,\n        $type_id\n    );\n    $purchases = $get_purchases->getData()->getPurchases();\n    $total_items = $get_purchases->getData()->getTotalItems();\n    var_dump($purchases);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/purchases/{purchase_id}':
    get:
      tags:
        - Purchases
      summary: Get a purchase
      description: Get information about a specific purchase.
      operationId: getPurchase
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/purchase_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$purchase_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the purchase\n\n// Call endpoint and get data\ntry\n{\n    $get_purchase = $care_cloud->purchasesApi()->getPurchase($purchase_id, $accept_language);\n    $purchase = $get_purchase->getData();\n    var_dump($purchase);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    put:
      tags:
        - Purchases
      summary: Update a purchase
      description: |
        Update a specific purchase.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: putPurchase
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/purchase_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                purchase:
                  $ref: '#/components/schemas/Purchase'
              required:
                - purchase
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  '/purchases/{purchase_id}/purchase-items':
    get:
      tags:
        - Purchases
      summary: Get purchase items tied to a purchase
      description: Get information about all purchase items created in relation to a specific purchase.
      operationId: getSubPurchaseItems
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/purchase_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      purchase_items:
                        type: array
                        description: List of purchase items tied to a purchase.
                        items:
                          $ref: '#/components/schemas/PurchaseItem'
                      total_items:
                        type: integer
                        description: The number of all found purchase items.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$purchase_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the booking ticket\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_purchase_items = $care_cloud->purchasesApi()->getSubPurchaseItems(\n        $purchase_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n    );\n    $purchase_items = $get_purchase_items->getData()->getPurchaseItems();\n    $total_items = $get_purchase_items->getData()->getTotalItems();\n    var_dump($purchase_items);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/purchases/{purchase_id}/vouchers':
    get:
      tags:
        - Purchases
      summary: Get vouchers tied to a purchase
      description: Get information about all vouchers created in relation to a specific purchase.
      operationId: getSubPurchaseVouchers
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/purchase_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      vouchers:
                        type: array
                        description: List of all recent vouchers.
                        items:
                          $ref: '#/components/schemas/Voucher'
                      total_items:
                        type: integer
                        description: The number of all recent vouchers.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$purchase_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the purchase\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_purchase_vouchers = $care_cloud->purchasesApi()->getSubPurchaseVouchers(\n        $purchase_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $purchase_vouchers = $get_purchase_vouchers->getData()->getVouchers();\n    $total_items = $get_purchase_vouchers->getData()->getTotalItems();\n    var_dump($purchase_vouchers);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/purchases/{purchase_id}/points':
    get:
      tags:
        - Purchases
      summary: Get point records tied to a purchase
      description: Get information about all point records created in relation to a specific purchase.
      operationId: getSubPurchasePoints
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/purchase_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      points:
                        type: array
                        description: List of the point records.
                        items:
                          $ref: '#/components/schemas/Point'
                      total_items:
                        type: integer
                        description: The number of all found point records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$purchase_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the booking ticket\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_purchase_points = $care_cloud->purchasesApi()->getSubPurchasePoints(\n        $purchase_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $purchase_points = $get_purchase_points->getData()->getPoints();\n    $total_items = $get_purchase_points->getData()->getTotalItems();\n    var_dump($purchase_points);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/purchases/{purchase_id}/actions/payment-summary':
    get:
      tags:
        - Purchases
      summary: Return payment summary
      description: 'Action method shows credit, point and voucher summary of a purchase.'
      operationId: getPurchasePaymentSummary
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/purchase_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      earned_points:
                        type: number
                        format: float
                        description: Amount of earned points of the purchase.
                        example: 376
                      used_credits:
                        type: number
                        format: float
                        description: Amount of credits used to pay of the purchase.
                        example: 0
                      used_points:
                        type: number
                        format: float
                        description: Amount of points used to pay of the purchase.
                        example: 0
                      used_points_total:
                        type: number
                        format: float
                        description: Amount of points used to pay and used in vouchers of the purchase.
                        example: 0
                      used_vouchers:
                        type: array
                        items:
                          $ref: '#/components/schemas/Voucher'
                        description: List of used vouchers.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$purchase_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the purchase\n\n// Call endpoint and get data\ntry\n{\n    $get_payment_summary = $care_cloud->purchasesApi()->getPurchasePaymentSummary($purchase_id, $accept_language);\n    $payment_summary = $get_payment_summary->getData();\n    var_dump($payment_summary);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /purchases/actions/recommended-best-rewards:
    post:
      tags:
        - Purchases
      summary: Recommended best rewards
      description: 'Method returns all available rewards for POS installation. The output contains list of all available and valid rewards. Each reward contains a parameter of maximum usage of rewards in a purchase. If amount equals zero, reward can not be applied. Rewards are allways connected to products through bill items.'
      operationId: postPurchaseRecommendedRewards
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: ID of the store.
                  example: 8bed991c68a470e7aaeffbf048
                cashdesk_number:
                  type: integer
                  description: Number of the cash-desk in the store.
                  example: 1
                card_number:
                  type: string
                  description: The customer card number.
                  example: '1000000000016'
                customer_id:
                  type: string
                  description: ID of the customer that made the purchase. You can search customers by plenty parameter in the resource customers.
                  example: 8ea2591121e636086a4a9c0992
                reward_list_type:
                  type: string
                  enum:
                    - F
                    - C
                    - A
                  description: |
                    Type of the rewards.
                    *Possible values: F - full (all manual rewards available and valid of the specific POS)/ C -condensed (only manual rewards corresponding to items on the bill - maxCount not equals zero)/ A - all rewards list including automatic apply this is only for the DATA CUBE*
                  example: A
                bill:
                  $ref: '#/components/schemas/Bill'
              required:
                - store_id
                - cashdesk_number
                - reward_list_type
                - bill
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      recommended_best_rewards:
                        type: array
                        description: List of the best rewards for POS.
                        items:
                          $ref: '#/components/schemas/RecommendedReward'
                      total_items:
                        type: integer
                        description: The number of all found rewards.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsRecommendedbestrewardsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Bill;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\BillItem;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PluId;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the bill info\n$plu_ids = new PluId();\n$plu_ids->setListCode('GLOBAL');\n$plu_ids->setCode('r456');\n\n$bill_item = new BillItem();\n$bill_item->setPluIds(array($plu_ids));\n$bill_item->setPluName('Teapot');\n$bill_item->setCategoryPluId('1110001');\n$bill_item->setVatRate(0);\n$bill_item->setQuantity(1);\n$bill_item->setPaidAmount(100);\n$bill_item->setPrice(100);\n$bill_item->setBillItemId('teapot_id_01');\n$bill_item->setLoyaltyOff(true);\n$bill_item->setPurchaseItemTypeId('86e05affc7a7abefcd513ab400');\n$bill_item->setCustomerId(null);\n\n$bill = new Bill();\n$bill->setBillId('bill001');\n$bill->setBillNumber(null);\n$bill->setPaymentTime('2022-10-30T15:51:49+02:00');\n$bill->setCreatedBy(null);\n$bill->setCurrencyId('8bed991c68a470e7aaeffbf048');\n$bill->setTotalPrice(100);\n$bill->setBillItems(array($bill_item));\n\n// Set the request body\n$body = new ActionsRecommendedbestrewardsBody();\n$body->setStoreId('8bed991c68a470e7aaeffbf048');\n$body->setCashdeskNumber(1);\n$body->setCardNumber(null);\n$body->setCustomerId(null);\n$body->setRewardListType('A');\n$body->setBill($bill);\n\n// Call endpoint and get data\ntry\n{\n    $post_best_rewards = $care_cloud->purchasesApi()->postPurchaseRecommendedRewards($body, $accept_language);\n    $best_rewards = $post_best_rewards->getData()->getRecommendedBestRewards();\n    $total_items = $post_best_rewards->getData()->getTotalItems();\n    var_dump($best_rewards);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /purchases/actions/accept-payment:
    post:
      tags:
        - Purchases
      summary: Accept payment
      description: 'The method processes bill closure requests. CareCloud returns information about discounts, applied vouchers, and points used for payment that change the bill''s final price.'
      operationId: postPurchaseAcceptPayment
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: ID of the store.
                  example: 8bed991c68a470e7aaeffbf048
                cashdesk_number:
                  type: integer
                  description: Number of the cash-desk in the store.
                  example: 1
                card_number:
                  type: string
                  description: The customer  card number.
                  example: '1000000000016'
                customer_id:
                  type: string
                  description: ID of the customer that made the purchase. You can search customers by plenty parameter in resource customers.
                  example: 8ea2591121e636086a4a9c0992
                payment_type:
                  type: string
                  enum:
                    - S
                    - A
                    - C
                    - D
                  description: |
                    Payment type changes the checkout process depending on the value of the parameter you can allow/deny the use of benefits.
                    *Possible values are: "S" - with standard setup checkout process allows you to collect points, but isn't possible to apply overall discounts  / "A"- checkout process allows you to collect points and apply overall discounts too / "C" - use credits for payment, allows you to collect points, but isn't possible to apply overall discounts / "D"- will enable you to use overall discounts, but you are not able to collect points with this setup.*
                  example: S
                max_points:
                  type: number
                  format: float
                  description: Amount of points to be redeemed.
                  example: 0
                max_credit:
                  type: number
                  format: float
                  description: Amount of credit customer wants to use in the purchase.
                  example: 7
                benefit_codes:
                  type: array
                  items:
                    type: string
                  description: The bill closure will use present codes and recommend discounts.
                  example:
                    - PTV2
                bill:
                  $ref: '#/components/schemas/Bill'
              required:
                - store_id
                - cashdesk_number
                - payment_type
                - bill
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AcceptedPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsAcceptpaymentBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Bill;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\BillItem;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PluId;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the bill info\n$plu_ids = new PluId();\n$plu_ids->setListCode('local_code');\n$plu_ids->setCode('e345');\n\n$bill_item = new BillItem();\n$bill_item->setPluIds(array($plu_ids));\n$bill_item->setPluName('Teapot');\n$bill_item->setCategoryPluId('1110001');\n$bill_item->setVatRate(0);\n$bill_item->setQuantity(1);\n$bill_item->setPaidAmount(100);\n$bill_item->setPrice(100);\n$bill_item->setBillItemId('teapot_id_01');\n$bill_item->setLoyaltyOff(true);\n$bill_item->setPurchaseItemTypeId('86e05affc7a7abefcd513ab400');\n$bill_item->setCustomerId(null);\n\n$bill = new Bill();\n$bill->setBillId('bill001');\n$bill->setBillNumber(null);\n$bill->setPaymentTime('2022-10-30T15:51:49+02:00');\n$bill->setCreatedBy(null);\n$bill->setCurrencyId('8bed991c68a470e7aaeffbf048');\n$bill->setTotalPrice(100);\n$bill->setBillItems(array($bill_item));\n\n// Set the request body\n$body = new ActionsAcceptpaymentBody();\n$body->setStoreId('8bed991c68a470e7aaeffbf048');\n$body->setCashdeskNumber(1);\n$body->setCardNumber(null);\n$body->setCustomerId(null);\n$body->setPaymentType('S');\n$body->setMaxPoints(null);\n$body->setMaxCredit(null);\n$body->setBenefitCodes(null);\n$body->setBill($bill);\n\n// Call endpoint and post data\ntry\n{\n    $post_payment = $care_cloud->purchasesApi()->postPurchaseAcceptPayment($body, $accept_language);\n    $data = $post_payment->getData();\n    var_dump($data);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /purchases/actions/send-purchase:
    post:
      tags:
        - Purchases
      summary: Send purchase
      description: The method sends the final closed bill to CareCloud. It returns info about success/failure in the response.
      operationId: postPurchaseSend
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: ID of the store.
                  example: 81eaeea13b8984a169c490a325
                cashdesk_number:
                  type: integer
                  description: Number of the cash-desk in store.
                  example: 1
                card_number:
                  type: string
                  description: The customer card number.
                  example: '1000000000016'
                customer_id:
                  type: string
                  description: ID of the customer that made the purchase. You can search customers by plenty parameter in the resource customers.
                  example: 8ea2591121e636086a4a9c0992
                bill:
                  $ref: '#/components/schemas/FinalBill'
              required:
                - store_id
                - cashdesk_number
                - bill
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      purchase_id:
                        type: string
                        description: The unique ID of the purchase.
                        example: 85c763ebcec2fa488f8857bee
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsSendpurchaseBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\BillItem;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\FinalBill;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PluId;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the bill info\n$plu_ids = new PluId();\n$plu_ids->setListCode('local_code');\n$plu_ids->setCode('e345');\n\n$bill_item = new BillItem();\n$bill_item->setPluIds(array($plu_ids));\n$bill_item->setPluName('Teapot');\n$bill_item->setCategoryPluId('1110001');\n$bill_item->setVatRate(0);\n$bill_item->setQuantity(1);\n$bill_item->setPaidAmount(100);\n$bill_item->setPrice(100);\n$bill_item->setBillItemId('teapot_id_01');\n$bill_item->setLoyaltyOff(true);\n$bill_item->setPurchaseItemTypeId('86e05affc7a7abefcd513ab400');\n$bill_item->setCustomerId(null);\n\n$bill = new FinalBill();\n$bill->setFiscal(false);\n$bill->setPurchaseTypeId('86e05affc7a7abefcd513ab400');\n$bill->setCanceled(false);\n$bill->setPaymentType('S');\n$bill->setPaymentRecap(null);\n$bill->setBillId('bill003');\n$bill->setBillNumber(null);\n$bill->setPaymentTime('2022-10-31T15:51:49+02:00');\n$bill->setCreatedBy(null);\n$bill->setCurrencyId('8bed991c68a470e7aaeffbf048');\n$bill->setTotalPrice(100);\n$bill->setUtm(null);\n$bill->setBillItems(array($bill_item));\n\n// Set the request body\n$body = new ActionsSendpurchaseBody();\n$body->setStoreId('8bed991c68a470e7aaeffbf048');\n$body->setCashdeskNumber(1);\n$body->setCardNumber(null);\n$body->setCustomerId(null);\n$body->setBill($bill);\n\n// Call endpoint and post data\ntry\n{\n    $post_purchase = $care_cloud->purchasesApi()->postPurchaseSend($body, $accept_language);\n    $purchase_id = $post_purchase->getData()->getPurchaseId();\n    var_dump($purchase_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /purchases/actions/assign-customer:
    post:
      tags:
        - Purchases
      summary: Assign customer
      description: |
        The method assigns customer to the existing purchase. If customer could collect points, he is going to gain corresponding amount of points.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: postPurchaseAssignCustomer
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: ID of the store.
                  example: 81eaeea13b8984a169c490a325
                external_purchase_id:
                  type: string
                  description: The unique external ID of the purchase.
                  example: 8fbea1c1eaa8edd35e7f288
                card_number:
                  type: string
                  description: Number of the customer  card. Parameter is mandatory only if customer_id is not set.
                  example: '1000000000016'
                customer_id:
                  type: string
                  description: The unique ID of the customer. Parameter is mandatory only if card_number is not set.
                  example: 8ea2591121e636086a4a9c0992
              required:
                - store_id
                - external_purchase_id
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsAssigncustomerBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the request body\n$body = new ActionsAssigncustomerBody();\n$body->setStoreId('8fd73167342d06899c4c015320'); // string | The unique ID of the store\n$body->setExternalPurchaseId('123'); // string | The unique external id of the purchase\n$body->setCardNumber(null); // string | Number of the customer  card. Parameter is mandatory only if customer_id is not set\n$body->setCustomerId('8ea02b112ccac496a3d423c5b1'); // string | Number of the customer  card. The unique ID of the customer. Parameter is mandatory only if card_number is not set\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->purchasesApi()->postPurchaseAssignCustomer($body, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /purchase-item-types:
    get:
      tags:
        - Purchase item types
      summary: Get all purchase item types
      description: Get a list of purchase item types accepted in CRM CareCloud.
      operationId: getPurchaseItemTypes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      purchase_item_types:
                        type: array
                        description: List of the purchase item types.
                        items:
                          $ref: '#/components/schemas/Purchase-item-type'
                      total_items:
                        type: integer
                        description: The number of all found purchase types.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_purchase_item_types = $care_cloud->purchaseItemTypesApi()->getPurchaseItemTypes(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $purchase_item_types = $get_purchase_item_types->getData()->getPurchaseItemTypes();\n    $total_items = $get_purchase_item_types->getData()->getTotalItems();\n    var_dump($purchase_item_types);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /purchase-types:
    get:
      tags:
        - Purchase types
      summary: Get all purchase types
      description: Get a list of purchase types accepted in CRM CareCloud.
      operationId: getPurchaseTypes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      purchase_types:
                        type: array
                        description: List of the purchase types.
                        items:
                          $ref: '#/components/schemas/Purchase-type'
                      total_items:
                        type: integer
                        description: The number of all found purchase types.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_purchase_types = $care_cloud->purchaseTypesApi()->getPurchaseTypes(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $purchase_types = $get_purchase_types->getData()->getPurchaseTypes();\n    $total_items = $get_purchase_types->getData()->getTotalItems();\n    var_dump($purchase_types);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /recommendations:
    get:
      tags:
        - Hints
      summary: Get all recommendations
      description: Get the information as a list of all recommendations.
      operationId: getRecommendations
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      recommendations:
                        type: array
                        description: List of the recommendations.
                        items:
                          $ref: '#/components/schemas/Recommendation'
                      total_items:
                        type: integer
                        description: The number of all found recommendations.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_recommendations = $care_cloud->hintApi()->getRecommendations(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $recommendations = $get_recommendations->getData()->getRecommendations();\n    $total_items = $get_recommendations->getData()->getTotalItems();\n    var_dump($recommendations);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/recommendations/{recommendation_id}':
    get:
      tags:
        - Hints
      summary: Get a recommendation
      description: Get information about a specific recommendation.
      operationId: getRecommendation
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/recommendation_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Recommendation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$recommendation_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the recommendation\n\n// Call endpoint and get data\ntry\n{\n    $get_recommendation = $care_cloud->hintApi()->getRecommendation($recommendation_id, $accept_language);\n    $recommendation = $get_recommendation->getData();\n    var_dump($recommendation);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /recommendation-engine/product/actions/eliminate:
    post:
      tags:
        - Product recommendation engine
      summary: Get the best recommendation with an elimination
      description: It selects the best products from an initial list for the customer. Eliminates all products that don't match future customer preferences (depends on his previous shopping behavior). The method doesn't have to return any results depending on the initial list (no product match future customer preferences).
      operationId: postRecommendationProductEliminate
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
                product_id_list:
                  type: array
                  description: List of the product IDs. Initial products of the recommendation engine.
                  items:
                    type: string
                  example:
                    - 8fd73167342d0689c4c015320
                    - 84aec0f62c76448621d68d343c
              required:
                - customer_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      recommended_products_list:
                        type: array
                        description: List of the recommended products.
                        items:
                          $ref: '#/components/schemas/RecommendedProduct'
                      total_items:
                        type: integer
                        description: The number of all found product IDs.
                        example: 3
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /recommendation-engine/product/actions/order:
    post:
      tags:
        - Product recommendation engine
      summary: Order products for the best recommendation.
      description: 'The method returns the algorithm ordered products from the initial list (best first). Results depend on the customer and his previous shopping behavior. If needed, the initial parameter might define the number of results.'
      operationId: postRecommendationProductOrder
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
                product_id_list:
                  type: array
                  description: List of the product IDs. Initial products of the recommendation engine.
                  items:
                    type: string
                  example:
                    - 89d88719b8b442de2d11b401a2
                    - 88bb88399cc74d81edbe19d684
                count:
                  type: integer
                  description: The number of records to return.
                  example: 5
              required:
                - customer_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      recommended_products_list:
                        type: array
                        description: List of the recommended products.
                        items:
                          $ref: '#/components/schemas/RecommendedProduct'
                      total_items:
                        type: integer
                        description: The number of all found product IDs.
                        example: 3
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /recommendation-engine/product/actions/combine:
    post:
      tags:
        - Product recommendation engine
      summary: Get the best recommendation
      description: 'It selects the best products from an initial list for the customer. Eliminates all products that don''t match future customer preferences (depends on his previous shopping behavior). If needed, it fills the missing number of results from the best products depends on the prediction algorithms.'
      operationId: postRecommendationProductCombine
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
                product_id_list:
                  type: array
                  description: List of the product IDs. Initial products of the recommendation engine.
                  items:
                    type: string
                  example:
                    - 89d88719b8b442de2d11b401a2
                    - 88bb88399cc74d81edbe19d684
                count:
                  type: integer
                  description: The number of records to return.
                  example: 5
              required:
                - customer_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      recommended_products_list:
                        type: array
                        description: List of the recommended products.
                        items:
                          $ref: '#/components/schemas/RecommendedProduct'
                      total_items:
                        type: integer
                        description: The number of all found product IDs.
                        example: 3
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /recommendation-engine/shopping-cart/actions/eliminate:
    post:
      tags:
        - Product recommendation engine
      summary: Get the best recommendation with elimination for shopping cart
      description: It selects the best products from an initial list for the customer shopping cart. Eliminates all products that don't match future customer preferences (depends on other customers' shopping behavior with the same products). The method doesn't have to return any results depending on the initial list (no product match future customer preferences).
      operationId: postRecommendationCartEliminate
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
                cart_product_ids:
                  type: array
                  description: List of the product IDs in the customer shopping cart.
                  items:
                    type: string
                  example:
                    - 8fd73167342d0689c4c015320
                    - 84aec0f62c76448621d68d343c
                product_id_list:
                  type: array
                  description: List of the product IDs. Initial products of the recommendation engine.
                  items:
                    type: string
                  example:
                    - 89d88719b8b442de2d11b401a2
                    - 88bb88399cc74d81edbe19d684
              required:
                - customer_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      recommended_products_list:
                        type: array
                        description: List of the recommended products.
                        items:
                          $ref: '#/components/schemas/RecommendedProduct'
                      total_items:
                        type: integer
                        description: The number of all found product IDs.
                        example: 2
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /recommendation-engine/shopping-cart/actions/order:
    post:
      tags:
        - Product recommendation engine
      summary: Order products for the best recommendation for a shopping cart
      description: 'The method returns the algorithm ordered products from the initial list (best first). Results depend on the customer  shopping cart and his previous shopping behavior. If needed, the initial parameter might define the number of results.'
      operationId: postRecommendationCartOrder
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cart_product_ids:
                  type: array
                  description: List of the product IDs in the customer shopping cart.
                  items:
                    type: string
                  example:
                    - 8fd73167342d0689c4c015320
                    - 84aec0f62c76448621d68d343c
                product_id_list:
                  type: array
                  description: List of the product IDs. Initial products of the recommendation engine.
                  items:
                    type: string
                  example:
                    - 89d88719b8b442de2d11b401a2
                    - 88bb88399cc74d81edbe19d684
                count:
                  type: integer
                  description: The number of records to return.
                  example: 5
              required:
                - cart_product_ids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      recommended_products_list:
                        type: array
                        description: List of the recommended products.
                        items:
                          $ref: '#/components/schemas/RecommendedProduct'
                      total_items:
                        type: integer
                        description: The number of all found product IDs.
                        example: 2
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /recommendation-engine/shopping-cart/actions/combine:
    post:
      tags:
        - Product recommendation engine
      summary: Get the best recommendation for shopping cart
      description: 'It selects the best products from an initial list for the customer shopping cart. Eliminates all products that don''t match future customer preferences (depends on other customers'' shopping behavior with the same products). If needed, it fills the missing number of results from the best products depends on the prediction algorithms.'
      operationId: postRecommendationCartCombine
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
                cart_product_ids:
                  type: array
                  description: List of the product IDs in the customer shopping cart.
                  items:
                    type: string
                  example:
                    - 8fd73167342d0689c4c015320
                    - 84aec0f62c76448621d68d343c
                product_id_list:
                  type: array
                  description: List of the product IDs. Initial products of the recommendation engine.
                  items:
                    type: string
                  example:
                    - 89d88719b8b442de2d11b401a2
                    - 88bb88399cc74d81edbe19d684
                count:
                  type: integer
                  description: The number of records to return.
                  example: 5
              required:
                - customer_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      recommended_products_list:
                        type: array
                        description: List of the recommended products.
                        items:
                          $ref: '#/components/schemas/RecommendedProduct'
                      total_items:
                        type: integer
                        description: The number of all found product IDs.
                        example: 2
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /third-party-recommendations/batch:
    post:
      tags:
        - Product recommendation engine
      summary: Create a batch of the third party recommendations
      description: Batch process helps to add multiple third party recommendations in one request. A third party may submit products recommended to a selected customer based on their previous shopping behavior or products recommended based on links to the current content of their shopping cart.
      operationId: postBulkThirdPartyRecommendations
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                third_party_recommendations:
                  type: array
                  description: List of the Recommendations from third party system.
                  items:
                    $ref: '#/components/schemas/ThirdPartyRecommendation'
              required:
                - third_party_recommendations
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /rewards:
    get:
      tags:
        - Rewards
      summary: Get all rewards
      description: |
        Get information about rewards as a list of all rewards.

        <p class="warning">⚠️ There is the logical AND between query parameters `is_valid`, `valid_from` and `valid to`.</p>
      operationId: getRewards
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/reward_store_id'
        - $ref: '#/components/parameters/is_valid'
        - $ref: '#/components/parameters/valid_from'
        - $ref: '#/components/parameters/valid_to'
        - $ref: '#/components/parameters/reward_code'
        - $ref: '#/components/parameters/is_automated'
        - $ref: '#/components/parameters/reward_group'
        - $ref: '#/components/parameters/customer_type_id_arr'
        - $ref: '#/components/parameters/without_stores'
        - $ref: '#/components/parameters/tag_id_arr'
        - $ref: '#/components/parameters/partner_id'
        - $ref: '#/components/parameters/reward_type_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      rewards:
                        type: array
                        description: List of all rewards.
                        items:
                          $ref: '#/components/schemas/Reward'
                      total_items:
                        type: integer
                        description: The number of all found rewards.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n$store_id = null; // string | The unique ID of the store where the customer can apply reward (optional, default is null)\n$is_valid = null; // boolean | in validity range - true / before or after validity range - false / no value - all (optional)\n$valid_from = null; // string | Date from when is record already valid (YYYY-MM-DD) (optional)\n$valid_to = null; // string | Date to when is record still valid (YYYY-MM-DD) (optional)\n$code = null; // string | Code of the reward (optional)\n$is_automated = null; // boolean | Filter of the automated rewards Possible values: true - returns all automated rewards / false - returns all non automated rewards / no value - all rewards (optional)\n$reward_group = null; // integer | The unique ID of the reward group Possible values: 0 - cash desk reward (party time reward) / 1 - catalog reward / 2 - campaign reward / 4 - simple reward (optional)\n$customer_type_id = null; // string[] | Select by list of customer types from customer-types resource (optional)\n$without_stores = null; // boolean | If true, the data will not contain information about business units (stores). If false, or not set resource returns default structure (optional)\n$tag_ids = null; // string[] | Parameter filters values by a list of tag IDs. Logic OR is used between values (optional)\n$partner_id = null; // string | The unique ID of the partner (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_rewards = $care_cloud->rewardsApi()->getRewards(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name,\n        $store_id,\n        $is_valid,\n        $valid_from,\n        $valid_to,\n        $code,\n        $is_automated,\n        $reward_group,\n        $customer_type_id,\n        $without_stores,\n        $tag_ids,\n        $partner_id\n    );\n    $rewards = $get_rewards->getData()->getRewards();\n    $total_items = $get_rewards->getData()->getTotalItems();\n    var_dump($rewards);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/rewards/{reward_id}':
    get:
      tags:
        - Rewards
      summary: Get a reward
      description: Get information about a specific reward.
      operationId: getReward
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/reward_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Reward'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$reward_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the reward\n\n// Call endpoint and get data\ntry\n{\n    $get_reward = $care_cloud->rewardsApi()->getReward($reward_id, $accept_language);\n    $reward = $get_reward->getData();\n    var_dump($reward);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/rewards/{reward_id}/vouchers':
    get:
      tags:
        - Rewards
      summary: Get vouchers tied to a reward
      description: Get information about all vouchers created in relation to the specific reward.
      operationId: getSubRewardVouchers
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/reward_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/reward_store_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      vouchers:
                        type: array
                        description: List of vouchers tied to the reward
                        items:
                          $ref: '#/components/schemas/Voucher'
                      total_items:
                        type: integer
                        description: The number of all found vouchers.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$reward_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the reward\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional, default is null)\n$store_id = null; // string | The unique ID of the store where the customer can apply reward (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_vouchers = $care_cloud->rewardsApi()->getSubRewardVouchers(\n        $reward_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $customer_id,\n        $store_id\n    );\n    $vouchers = $get_vouchers->getData()->getVouchers();\n    $total_items = $get_vouchers->getData()->getTotalItems();\n    var_dump($vouchers);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/rewards/{reward_id}/products':
    get:
      tags:
        - Rewards
      summary: Get products tied to a reward
      description: Get information about all products created in relation to the specific reward.
      operationId: getSubRewardProducts
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/reward_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      products:
                        type: array
                        description: List of products tied to the reward.
                        items:
                          $ref: '#/components/schemas/RewardProduct'
                      total_items:
                        type: integer
                        description: The number of all found products.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$reward_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the reward\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_products = $care_cloud->rewardsApi()->getSubRewardProducts(\n        $reward_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $products = $get_products->getData()->getProducts();\n    $total_items = $get_products->getData()->getTotalItems();\n    var_dump($products);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/rewards/{reward_id}/product-groups':
    get:
      tags:
        - Rewards
      summary: Get product groups tied to a reward
      description: Get information about all product groups created in relation to a specific reward.
      operationId: getSubRewardProductGroups
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/reward_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      product_groups:
                        type: array
                        description: List of product groups tied to the reward.
                        items:
                          $ref: '#/components/schemas/ProductGroup'
                      total_items:
                        type: integer
                        description: The number of all found product groups.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$reward_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the reward\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_product_groups = $care_cloud->rewardsApi()->getSubRewardProductGroups(\n        $reward_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $product_groups = $get_product_groups->getData()->getProductGroups();\n    $total_items = $get_product_groups->getData()->getTotalItems();\n    var_dump($product_groups);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/rewards/{reward_id}/product-brands':
    get:
      tags:
        - Rewards
      summary: Get product brands tied to a reward
      description: Get information about all product brands created in relation to a specific reward.
      operationId: getSubRewardProductBrands
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/reward_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      product_brands:
                        type: array
                        description: List of product brands tied to the reward.
                        items:
                          $ref: '#/components/schemas/ProductBrand'
                      total_items:
                        type: integer
                        description: Number of all found product brands.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$reward_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the reward\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_product_brands = $care_cloud->rewardsApi()->getSubRewardProductBrands(\n        $reward_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $product_brands = $get_product_brands->getData()->getProductBrands();\n    $total_items = $get_product_brands->getData()->getTotalItems();\n    var_dump($product_brands);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/rewards/{reward_id}/stores':
    get:
      tags:
        - Rewards
      summary: Get all stores
      description: Get information as a list of all stores of specific reward. Customer can apply this reward in every of these stores.
      operationId: getSubRewardStores
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/reward_id_path'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/visible_for_customer'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      stores:
                        type: array
                        description: List of the all stores where customer can apply reward.
                        items:
                          $ref: '#/components/schemas/Store'
                      total_items:
                        type: integer
                        description: The number of all found stores.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$reward_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the reward\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$visible_for_customer = null; // integer | State of the visibility of the customer Possible values are: 0 - invisible / 1- visible. If query string is not used, return both (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_stores = $care_cloud->rewardsApi()->getSubRewardStores(\n        $reward_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $visible_for_customer\n    );\n    $stores = $get_stores->getData()->getStores();\n    $total_items = $get_stores->getData()->getTotalItems();\n    var_dump($stores);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /rewards/tags:
    get:
      tags:
        - Rewards
      summary: Get all tags for resource rewards
      description: Get information as a list of all tags of resource rewards. Tags from the list could be use for reward filtering.
      operationId: getSubRewardTags
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/text_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      tags:
                        type: array
                        description: List of the all tags assigned to the resource rewards.
                        items:
                          $ref: '#/components/schemas/Tag'
                      total_items:
                        type: integer
                        description: The number of all found tags.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional)\n$text_id = null; // string | Text id of an event group (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_reward_tags = $care_cloud->rewardsApi()->getSubRewardTags(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name,\n        $text_id\n    );\n    $reward_tags = $get_reward_tags->getData()->getTags();\n    $total_items = $get_reward_tags->getData()->getTotalItems();\n    var_dump($reward_tags);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/rewards/{reward_id}/actions/create-voucher':
    post:
      tags:
        - Rewards
      summary: Create a new voucher
      description: |
        Create a new voucher for a specific customer based on a reward features definition.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: postRewardCreateVoucher
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/reward_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
                code:
                  type: string
                  description: Code of the voucher.
                  example: w7TU7KfeE1
                note:
                  type: string
                  description: The voucher note.
                  example: Use before 28.03.2024 get another one for free
              required:
                - customer_id
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      voucher_id:
                        type: string
                        description: The unique ID of the voucher.
                        example: 82d0f9d976dee39aacd13dc7ea
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsCreatevoucherBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$reward_id = '8fd73167342d06899c4c015320'; // string | The unique ID of the reward\n\n// Set the request body\n$body = new ActionsCreatevoucherBody();\n$body->setCustomerId('8ea2591121e636086a4a9c0992'); // string | The unique ID of the customer\n$body->setCode('e1234'); // string | Code of the voucher (optional)\n$body->setNote('test voucher 2'); // string | Note for the voucher\n\n// Call endpoint and post data\ntry\n{\n    $post_voucher = $care_cloud->rewardsApi()->postRewardCreateVoucher(\n        $body,\n        $reward_id,\n        $accept_language\n    );\n    $voucher_id = $post_voucher->getData()->getVoucherId();\n    var_dump($voucher_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /reward-properties:
    get:
      tags:
        - Reward properties
      summary: Get all reward properties
      description: Get information about reward properties.
      operationId: getRewardProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      rewards_properties:
                        type: array
                        description: List of all reward properties.
                        items:
                          $ref: '#/components/schemas/Property'
                      total_items:
                        type: integer
                        description: The number of all found reward properties.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_reward_properties = $care_cloud->rewardPropertiesApi()->getRewardProperties(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $reward_properties = $get_reward_properties->getData()->getRewardProperties();\n    $total_items = $get_reward_properties->getData()->getTotalItems();\n    var_dump($reward_properties);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/reward-properties/{reward_property_id}':
    get:
      tags:
        - Reward properties
      summary: Get a reward property
      description: Get information about a specific reward property.
      operationId: getRewardProperty
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/reward_property_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$reward_property_id = 'additional_payment'; // string | The unique ID of the reward property\n\n// Call endpoint and get data\ntry\n{\n    $get_reward_property = $care_cloud->rewardPropertiesApi()->getRewardProperty($reward_property_id, $accept_language);\n    $reward_property = $get_reward_property->getData();\n    var_dump($reward_property);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /reward-types:
    get:
      tags:
        - Reward types
      summary: Get all reward types
      description: Get information about reward types.
      operationId: getRewardTypes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      reward_types:
                        type: array
                        description: List of all reward types.
                        items:
                          $ref: '#/components/schemas/RewardType'
                      total_items:
                        type: integer
                        description: The number of all found reward types.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_reward_types = $care_cloud->rewardTypesApi()->getRewardTypes(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $reward_types = $get_reward_types->getData()->getRewardsTypes();\n    $total_items = $get_reward_types->getData()->getTotalItems();\n    var_dump($reward_types);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/reward-types/{reward_type_id}':
    get:
      tags:
        - Reward types
      summary: Get a reward type
      description: Get information about a specific reward type.
      operationId: getRewardtype
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/reward_type_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RewardType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$reward_type_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the reward type\n\n// Call endpoint and get data\ntry\n{\n    $get_reward_type = $care_cloud->rewardTypesApi()->getRewardtype(\n        $reward_type_id,\n        $accept_language\n    );\n    $reward_type = $get_reward_type->getData();\n    var_dump($reward_type);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /segments:
    get:
      tags:
        - Segments
      summary: Get all segments
      description: Get information about segments as a list of all segments.
      operationId: getSegments
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/segment_group_ids'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      segments:
                        type: array
                        description: List of all segments.
                        items:
                          $ref: '#/components/schemas/Segment'
                      total_items:
                        type: integer
                        description: The number of all found segments.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$segment_group_ids = null; // string[] | List of the segment group IDs (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_segments = $care_cloud->segmentsApi()->getSegments(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $segment_group_ids\n    );\n    $segments = $get_segments->getData()->getSegments();\n    $total_items = $get_segments->getData()->getTotalItems();\n    var_dump($segments);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/segments/{segment_id}':
    get:
      tags:
        - Segments
      summary: Get a segment
      description: Get information about a specific segment.
      operationId: getSegment
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/segment_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Segment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$segment_id = '82de12eb8b138791e678fd11c3'; // string | The unique ID of the segment\n\n// Call endpoint and get data\ntry\n{\n    $get_segment = $care_cloud->segmentsApi()->getSegment($segment_id, $accept_language);\n    $segment = $get_segment->getData();\n    var_dump($segment);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/segments/{segment_id}/segment-records':
    get:
      tags:
        - Segments
      summary: Get a collection of segment records
      description: Get information about all segment records on segments resource.
      operationId: getSubSegmentRecords
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/segment_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      segment_records:
                        type: array
                        description: List of segment records.
                        items:
                          $ref: '#/components/schemas/SegmentRecord'
                      total_items:
                        type: integer
                        description: The number of all found segment records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$segment_id = '82de12eb8b138791e678fd11c3'; // string | The unique ID of the segment\n\n// Call endpoint and get data\ntry\n{\n    $get_segment_records = $care_cloud->segmentsApi()->getSubSegmentRecords($segment_id, $accept_language);\n    $segment_records = $get_segment_records->getData()->getSegmentRecords();\n    $total_items = $get_segment_records->getData()->getTotalItems();\n    var_dump($segment_records);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/segments/{segment_id}/actions/add-customer':
    post:
      tags:
        - Segments
      summary: Add customer to a segment
      description: Action method that adds customer to specified segment.
      operationId: postSegmentAddCustomer
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/segment_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
              required:
                - customer_id
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsAddcustomerBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$segment_id = '82de12eb8b138791e678fd11c3'; // string | The unique ID of the segment\n\n// Set the request body\n$body = new ActionsAddcustomerBody();\n$body->setCustomerId('8fae1b952efb32fff53dfb899a');\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->segmentsApi()->postSegmentAddCustomer($body, $segment_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/segments/{segment_id}/actions/remove-customer':
    post:
      tags:
        - Segments
      summary: Remove customer from a segment
      description: Action method that removes customer from a specified segment.
      operationId: postSegmentRemoveCustomer
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/segment_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: The unique ID of the customer.
                  example: 8ea2591121e636086a4a9c0992
              required:
                - customer_id
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsRemovecustomerBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$segment_id = '82de12eb8b138791e678fd11c3'; // string | The unique ID of the segment\n\n// Set the request body\n$body = new ActionsRemovecustomerBody();\n$body->setCustomerId('8fae1b952efb32fff53dfb899a');\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->segmentsApi()->postSegmentRemoveCustomer($body, $segment_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /segment-groups:
    get:
      tags:
        - Segments
      summary: Get all segment groups
      description: Get information about segment groups.
      operationId: getSegmentGroups
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/segment_group_name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      segment_groups:
                        type: array
                        description: List of all segment groups.
                        items:
                          $ref: '#/components/schemas/SegmentGroup'
                      total_items:
                        type: integer
                        description: The number of all found segments.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_segment_groups = $care_cloud->segmentsApi()->getSegmentGroups(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $segment_groups = $get_segment_groups->getData()->getSegmentGroups();\n    $total_items = $get_segment_groups->getData()->getTotalItems();\n    var_dump($segment_groups);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/segment-groups/{segment_group_id}':
    get:
      tags:
        - Segments
      summary: Get a segment group
      description: Get information about a specific segment group.
      operationId: getSegmentGroup
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/segment_group_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SegmentGroup'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$segment_group_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the segment group\n\n// Call endpoint and get data\ntry\n{\n    $get_segment_group = $care_cloud->segmentsApi()->getSegmentGroup($segment_group_id, $accept_language);\n    $segment_group = $get_segment_group->getData();\n    var_dump($segment_group);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /entrances:
    get:
      tags:
        - Charged entrances
      summary: Get all entrances
      description: Get a list of entrances in CRM CareCloud.
      operationId: getEntrances
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/pos_id'
        - $ref: '#/components/parameters/external_order_id'
        - $ref: '#/components/parameters/entrance_name'
        - $ref: '#/components/parameters/resort_name'
        - $ref: '#/components/parameters/customer_category_name'
        - $ref: '#/components/parameters/entrance_card_id'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/entrance_type_id'
        - $ref: '#/components/parameters/entrance_state'
        - $ref: '#/components/parameters/external_entrance_id'
        - $ref: '#/components/parameters/is_valid'
        - $ref: '#/components/parameters/is_cancelled'
        - $ref: '#/components/parameters/valid_from'
        - $ref: '#/components/parameters/valid_to'
        - $ref: '#/components/parameters/product_id'
        - $ref: '#/components/parameters/external_turnstile_permission_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      entrances:
                        type: array
                        description: List of available entrances.
                        items:
                          $ref: '#/components/schemas/Entrance'
                      total_items:
                        type: integer
                        description: The number of all found entrances.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  '/entrances/{entrance_id}':
    get:
      tags:
        - Charged entrances
      summary: Get an entrance
      description: Get information about a specific entrance resource.
      operationId: getEntrance
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/entrance_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Entrance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    put:
      tags:
        - Charged entrances
      summary: Update an entrance
      description: This method updates a specific entrance resource.
      operationId: putEntrance
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/entrance_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entrance:
                  $ref: '#/components/schemas/Entrance'
              required:
                - entrance
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /entrances/actions/overview:
    get:
      tags:
        - Charged entrances
      summary: Get entrances overview
      description: Get information about entrances in time interval.
      operationId: getEntrancesOverview
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/valid_from'
        - $ref: '#/components/parameters/valid_to'
        - $ref: '#/components/parameters/pos_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      active_entrances:
                        type: integer
                        description: Amount of active entrances in date range. Active entrances can be used by customers in their validity range.
                        example: 113655
                      canceled_entrances:
                        type: integer
                        description: Amount of canceled entrances in date range. Canceled entrances in production systems and in CareCloud. Customers cannot use them anymore.
                        example: 446
                      deactivated_entrances:
                        type: integer
                        description: Amount of deactivated entrances in date range. Entrances deactivated in CareCloud only. These entrances are usually not sent to production systems. Deactivation have been done in system CareCloud.
                        example: 233834
                      sold_entrances:
                        type: integer
                        description: Amount of sold entrances in date range. Entrances deactivated in CareCloud only. These entrances are usually not sent to production systems. Deactivation have been done in system CareCloud.
                        example: 347489
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /entrances/actions/customer-stats:
    get:
      tags:
        - Charged entrances
      summary: Get a customer entrances usage stats
      description: 'Get an information about how a customer used the entrances (usage, gamification, etc.)'
      operationId: getEntrancesCustomerStats
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_required'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      distance:
                        type: number
                        description: Amount of kilometers that customer skied in the date range.
                        example: 130.25
                      elevation:
                        type: number
                        description: Elevation gained during skiing in the date range in meters.
                        example: 10000
                      skier_days:
                        type: integer
                        description: Number of days in the date range that a customer used his entrance ticket
                        example: 20
                      ski_achievement_text_id:
                        type: string
                        description: It represents a ski achievement text ID gained by the customer.
                        example: blue_powder
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /statuses:
    get:
      tags:
        - Statuses
      summary: Get all statuses
      description: Get information as a collection of all recent statuses.
      operationId: getStatuses
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      statuses:
                        type: array
                        description: List of recent statuses.
                        items:
                          $ref: '#/components/schemas/Status'
                      total_items:
                        type: integer
                        description: The number of all found statuses.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_statuses = $care_cloud->statusesApi()->getStatuses(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $statuses = $get_statuses->getData()->getStatuses();\n    var_dump($statuses);\n    $total_items = $get_statuses->getData()->getTotalItems();\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/statuses/{status_id}':
    get:
      tags:
        - Statuses
      summary: Get a status
      description: Get information about a specific status.
      operationId: getStatus
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/status_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$status_id = '8fd73167342d06899c4c015320'; // string | The unique ID of the status\n\n// Call endpoint and get data\ntry\n{\n    $get_status = $care_cloud->statusesApi()->getStatus($status_id, $accept_language);\n    $status = $get_status->getData();\n    var_dump($status);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /stores:
    get:
      tags:
        - Stores
      summary: Get all stores
      description: Get information as a list of all stores.
      operationId: getStores
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/visible_for_customer'
        - $ref: '#/components/parameters/property_id'
        - $ref: '#/components/parameters/property_value'
        - $ref: '#/components/parameters/store_system_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      stores:
                        type: array
                        description: List of all stores.
                        items:
                          $ref: '#/components/schemas/Store'
                      total_items:
                        type: integer
                        description: The number of all found stores.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$reward_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the reward\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$visible_for_customer = null; // integer | State of the visibility of the customer Possible values are: 0 - invisible / 1- visible. If query string is not used, return both (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_stores = $care_cloud->rewardsApi()->getSubRewardStores(\n        $reward_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $visible_for_customer\n    );\n    $stores = $get_stores->getData()->getStores();\n    $total_items = $get_stores->getData()->getTotalItems();\n    var_dump($stores);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Stores
      summary: Create a store
      description: Add a new store.
      operationId: postStore
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store:
                  $ref: '#/components/schemas/Store'
              required:
                - store
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      store_id:
                        type: string
                        description: The unique ID of the store in CareCloud.
                        example: 86e05affc7a7abefcd513ab400
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Store;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\StoresBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the store info\n$store = new Store();\n$store->setStoreCode('candystorecode'); // string | The external code of the store\n$store->setName('CandyStore'); // string | The name of the store\n$store->setStoreAddress(null); // object | The address of the store\n$store->setContactEmail(null); // string | The contact email of the store (optional)\n$store->setManagerName(null); // string | The name of the store manager (optional)\n$store->setPhoneNumber(null); // string^[1-9][0-9]*$ Phone number of the store with international prefix (420000000000) (optional)\n$store->setPartnerId('86e05affc7a7abefcd513ab400'); // string | The unique ID of the partner\n$store->setSystemId('candystoreid'); // string | The unique ID of the store in the external system\n$store->setGpsCoordinates(null); // object | GPS coordinates of the store (optional)\n$store->setUrlAddress(null); // string | The URL of the store (optional)\n$store->setOpening(null); // object | The list of the opening days (optional)\n$store->setShortDescription(null); // string | The short description of the store (optional)\n$store->setDescription(null); // string | The long description of the store (optional)\n$store->setRegistrationId(null); // string | The legal registration number of the store (optional)\n\n// Set the request body\n$body = new StoresBody();\n$body->setStore($store);\n\n// Call endpoint and post data\ntry\n{\n    $post_store = $care_cloud->storesApi()->postStore($body, $accept_language);\n    $store_id = $post_store->getData()->getStoreId();\n    var_dump($store_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/stores/{store_id}':
    get:
      tags:
        - Stores
      summary: Get a store
      description: Get information about a specific store.
      operationId: getStore
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/store_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Store'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$store_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the store\n\n// Call endpoint and get data\ntry\n{\n    $get_store = $care_cloud->storesApi()->getStore($store_id, $accept_language);\n    $store = $get_store->getData();\n    var_dump($store);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    put:
      tags:
        - Stores
      summary: Update a store
      description: This method updates a specific store.
      operationId: putStore
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/store_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store:
                  $ref: '#/components/schemas/Store'
              required:
                - store
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Store;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\StoresStoreIdBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$store_id = '80c0d6299ac63863b2e05e66fb'; // string | The unique ID of the store\n\n// Set the store info\n$store = new Store();\n$store->setStoreCode('candystorecode'); // string | The external code of the store\n$store->setName('SuperCandyStore'); // string | The name of the store\n$store->setStoreAddress(null); // object | The address of the store\n$store->setContactEmail(null); // string | The contact email of the store (optional)\n$store->setManagerName(null); // string | The name of the store manager (optional)\n$store->setPhoneNumber(null); // string^[1-9][0-9]*$ Phone number of the store with international prefix (420000000000) (optional)\n$store->setPartnerId('86e05affc7a7abefcd513ab400'); // string | The unique ID of the partner\n$store->setSystemId('candystoreid'); // string | The unique ID of the store in the external system\n$store->setGpsCoordinates(null); // object | GPS coordinates of the store (optional)\n$store->setUrlAddress(null); // string | The URL of the store (optional)\n$store->setOpening(null); // object | The list of the opening days (optional)\n$store->setShortDescription(null); // string | The short description of the store (optional)\n$store->setDescription(null); // string | The long description of the store (optional)\n$store->setRegistrationId(null); // string | The legal registration number of the store (optional)\n\n// Set the request body\n$body = new StoresStoreIdBody();\n$body->setStore($store);\n\n// Call endpoint and put data\ntry\n{\n    $care_cloud->storesApi()->putStore($body, $store_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/stores/{store_id}/property-records':
    get:
      tags:
        - Stores
      summary: Get a collection of properties
      description: Get information about all property records tied to the store.
      operationId: getSubStoreProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/store_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      property_records:
                        type: array
                        description: List of property records.
                        items:
                          $ref: '#/components/schemas/PropertyRecord'
                      total_items:
                        type: integer
                        description: The number of all found store property records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$store_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the store\n\n// Call endpoint and get data\ntry\n{\n    $get_store_properties = $care_cloud->storesApi()->getSubStoreProperties($store_id, $accept_language);\n    $store_properties = $get_store_properties->getData()->getPropertyRecords();\n    var_dump($store_properties);\n    $total_items = $get_store_properties->getData()->getTotalItems();\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Stores
      summary: Add a property to a store
      description: Add a new store property record to a store.
      operationId: postSubStoreProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/store_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                property_record:
                  $ref: '#/components/schemas/PropertyRecord'
              required:
                - property_record
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      property_record_id:
                        type: string
                        description: The unique ID of the property record.
                        example: 'contact_person:8aa2049ac2f84952014d96bb23'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PropertyRecord;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\StoreIdPropertyrecordsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$store_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the store\n\n// Set property record info\n$property_record = new PropertyRecord();\n$property_record->setPropertyId('datum_otevreni'); // string | The unique ID of the property\n$property_record->setPropertyValue('2022-10-31'); // (string or null) or (number or null) or (integer or null) or (boolean or null) or (Array of any or null) or (object or null) | Value of the property (optional)\n\n// Set the request body\n$body = new StoreIdPropertyrecordsBody();\n$body->setPropertyRecord($property_record);\n\n// Call endpoint and post data\ntry\n{\n    $post_store_properties = $care_cloud->storesApi()->postSubStoreProperties($body, $store_id, $accept_language);\n    $property_record_id = $post_store_properties->getData()->getPropertyRecordId();\n    var_dump($property_record_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/stores/{store_id}/store-group-records':
    get:
      tags:
        - Stores
      summary: Get a collection of store group records
      description: Get information about all store group records tied to the store.
      operationId: getSubStoreGroups
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/store_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      store_group_records:
                        type: array
                        description: List of the store group records.
                        items:
                          $ref: '#/components/schemas/StoreGroupRecord'
                      total_items:
                        type: integer
                        description: The number of all found store group records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$store_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the store\n\n// Call endpoint and get data\ntry\n{\n    $get_store_groups = $care_cloud->storesApi()->getSubStoreGroups($store_id, $accept_language);\n    $store_groups = $get_store_groups->getData()->getStoreGroupRecords();\n    var_dump($store_groups);\n    $total_items = $get_store_groups->getData()->getTotalItems();\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/stores/{store_id}/property-records/{property_record_id}':
    put:
      tags:
        - Stores
      summary: Update a property record of the store
      description: Update a specific store property record tied to the store.
      operationId: putSubStoreProperty
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/store_id_path'
        - $ref: '#/components/parameters/property_record_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                property_record:
                  $ref: '#/components/schemas/PropertyRecord'
              required:
                - property_record
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PropertyRecord;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\PropertyrecordsPropertyRecordIdBody1;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$store_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the store\n$property_record_id = 'datum_otevreni:8bed991c68a470e7aaeffbf048'; // string | The unique ID of the property record\n\n// Set property record info\n$property_record = new PropertyRecord();\n$property_record->setPropertyId('datum_otevreni'); // string | The unique ID of the property\n$property_record->setPropertyValue('2022-10-30'); // (string or null) or (number or null) or (integer or null) or (boolean or null) or (Array of any or null) or (object or null) | Value of the property (optional)\n\n// Set the request body\n$body = new PropertyrecordsPropertyRecordIdBody1();\n$body->setPropertyRecord($property_record);\n\n// Call endpoint and put data\ntry\n{\n    $care_cloud->storesApi()->putSubStoreProperty($body, $store_id, $property_record_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    delete:
      tags:
        - Stores
      summary: Delete a property record of the store
      description: Delete a specific store property record tied to the store.
      operationId: deleteSubStoreProperty
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/store_id_path'
        - $ref: '#/components/parameters/property_record_id_path'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$store_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the store\n$property_record_id = 'datum_otevreni:8bed991c68a470e7aaeffbf048'; // string | The unique ID of the property record\n\n// Call endpoint and delete data\ntry\n{\n    $care_cloud->storesApi()->deleteSubStoreProperty($store_id, $property_record_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /store-groups:
    get:
      tags:
        - Store groups
      summary: Get all store groups
      description: Get a list of all store groups.
      operationId: getStoreGroups
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      store_groups:
                        type: array
                        description: List of all store groups.
                        items:
                          $ref: '#/components/schemas/StoreGroup'
                      total_items:
                        type: integer
                        description: The number of all found store groups.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_store_groups = $care_cloud->storeGroupsApi()->getStoreGroups(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $store_groups = $get_store_groups->getData()->getStoreGroups();\n    var_dump($store_groups);\n    $total_items = $get_store_groups->getData()->getTotalItems();\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/store-groups/{store_group_id}':
    get:
      tags:
        - Store groups
      summary: Get a store group
      description: Get information about a specific store group.
      operationId: getStoreGroup
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/store_group_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StoreGroup'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$store_group_id = '8fd73167342d06899c4c015320'; // string | The unique ID of the store group\n\n// Call endpoint and get data\ntry\n{\n    $get_store_group = $care_cloud->storeGroupsApi()->getStoreGroup($store_group_id, $accept_language);\n    $store_group = $get_store_group->getData();\n    var_dump($store_group);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /store-properties:
    get:
      tags:
        - Store properties
      summary: Get all store properties
      description: Get information about store properties.
      operationId: getStoreProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      store_properties:
                        type: array
                        description: List of all store properties.
                        items:
                          $ref: '#/components/schemas/Property'
                      total_items:
                        type: integer
                        description: The number of all found store properties.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_store_properties = $care_cloud->storePropertiesApi()->getStoreProperties(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $store_properties = $get_store_properties->getData()->getStoreProperties();\n    var_dump($store_properties);\n    $total_items = $get_store_properties->getData()->getTotalItems();\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/store-properties/{store_property_id}':
    get:
      tags:
        - Store properties
      summary: Get a store property
      description: Get information about a specific store property.
      operationId: getStoreProperty
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/store_property_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$store_property_id = 'datum_otevreni'; // string | The unique ID of the store property\n\n// Call endpoint and get data\ntry\n{\n    $get_store_property = $care_cloud->storePropertiesApi()->getStoreProperty($store_property_id, $accept_language);\n    $store_property = $get_store_property->getData();\n    var_dump($store_property);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /tasks:
    get:
      tags:
        - Tasks
      summary: Get all tasks
      description: Get information as a list of all tasks.
      operationId: getTasks
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/task_type_id'
        - $ref: '#/components/parameters/task_state_id'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/task_priority'
        - $ref: '#/components/parameters/task_due_date'
        - $ref: '#/components/parameters/task_title'
        - $ref: '#/components/parameters/task_note'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      tasks:
                        type: array
                        description: List of all tasks.
                        items:
                          $ref: '#/components/schemas/Task'
                      total_items:
                        type: integer
                        description: The number of all found tasks.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$task_type_id = null; // string | Task type ID from the resource task-types. The parameter filters tasks by their type (optional)\n$task_state_id = null; // string | Task state ID from the resource task-states. The parameter filters tasks by their state (optional)\n$customer_id = null; // string | The unique ID of the customer (optional)\n$priority = 3; // integer | The parameter filters tasks by their priority. Possible values are: 1 - Critical / 2 - Major / 3 - Normal / 4 - Minor (optional)\n$due_date = null; // string | Date (ISO 8601) when the task due (YYYY-MM-DD) (optional)\n$task_title = null; // string | Search record by the task summary or a part of the task summary (optional)\n$task_note = null; // string | Search record by the task note or a part of the task note (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_tasks = $care_cloud->tasksApi()->getTasks(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $task_type_id,\n        $task_state_id,\n        $customer_id,\n        $priority,\n        $due_date,\n        $task_title,\n        $task_note\n    );\n    $tasks = $get_tasks->getData()->getTasks();\n    $total_items = $get_tasks->getData()->getTotalItems();\n    var_dump($tasks);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Tasks
      summary: Create a task
      description: Add a new task
      operationId: postTasks
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  $ref: '#/components/schemas/Task'
                property_records:
                  type: array
                  description: List of a task property records
                  items:
                    $ref: '#/components/schemas/PropertyRecord'
                assignees:
                  type: array
                  description: List of a task assignees
                  items:
                    $ref: '#/components/schemas/TaskAssignee'
              required:
                - task
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      task_id:
                        type: string
                        description: The unique ID of the task in CareCloud
                        example: 86e05affc7a7abefcd513ab400
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Task;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\TasksBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once 'vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the task info\n$task = new Task();\n$task->setTaskTypeId('8bed991c68a470e7aaeffbf048') // string | The unique ID of the task type\n->setTaskStateId('86e05affc7a7abefcd513ab400') // string | The unique ID of the task state\n->setCustomerId('85aae99524edceec17682e01b9') // string | The unique ID of the customer\n->setTaskNote(null) // string | Text note of the task (optional)\n->setTaskTitle('Test task n.1') // string | Title of the task\n->setTaskPriority(3) // integer | The parameter filters tasks by their priority. Possible values are: 1 - Critical / 2 - Major / 3 - Normal / 4 - Minor.\n->setDueDate(null); // string | Due date of the task (YYYY-MM-DD) (optional)\n\n// Set the request body\n$body = new TasksBody();\n$body->setTask($task);\n$body->setAssignees(null); // array of objects | List of an task assignees (optional)\n$body->setPropertyRecords(null); // array of objects | List of an task property records (optional)\n\n// Call endpoint and post data\ntry\n{\n    $post_task = $care_cloud->tasksApi()->postTasks($body, $accept_language);\n    $task_id = $post_task->getData()->getTaskId();\n    var_dump($task_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/tasks/{task_id}':
    get:
      tags:
        - Tasks
      summary: Get a task
      description: Get information about a specific task resource.
      operationId: getTask
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/task_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$task_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task\n\n// Call endpoint and get data\ntry\n{\n    $get_task = $care_cloud->tasksApi()->getTask($task_id, $accept_language);\n    $task = $get_task->getData();\n    var_dump($task);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    put:
      tags:
        - Tasks
      summary: Update a task
      description: This method updates a specific task resource.
      operationId: putTask
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/task_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  $ref: '#/components/schemas/Task'
              required:
                - task
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Task;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\TasksTaskIdBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once 'vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$task_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task\n\n// Set the task info\n$task = new Task();\n$task->setTaskTypeId('8bed991c68a470e7aaeffbf048') // string | The unique ID of the task type\n->setTaskStateId('86e05affc7a7abefcd513ab400') // string | The unique ID of the task state\n->setCustomerId('85aae99524edceec17682e01b9') // string | The unique ID of the customer\n->setTaskNote(null) // string | Text note of the task (optional)\n->setTaskTitle('Test task n.01') // string | Title of the task\n->setTaskPriority(1) // integer | The parameter filters tasks by their priority. Possible values are: 1 - Critical / 2 - Major / 3 - Normal / 4 - Minor.\n->setDueDate(null); // string | Due date of the task (YYYY-MM-DD) (optional)\n\n// Set the request body\n$body = new TasksTaskIdBody();\n$body->setTask($task);\n\n// Call endpoint and put data\ntry\n{\n    $care_cloud->tasksApi()->putTask($body, $task_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/tasks/{task_id}/task-comments':
    get:
      tags:
        - Tasks
      summary: Get all task comments
      description: Get information as a list of all task comments.
      operationId: getTaskComments
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/task_id_path'
        - $ref: '#/components/parameters/task_comment_text'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      task_comments:
                        type: array
                        description: List of all task comments.
                        items:
                          $ref: '#/components/schemas/TaskComment'
                      total_items:
                        type: integer
                        description: The number of all found task comments.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once 'vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$task_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$task_comment_text = null; // string | Search record by the task comment text or a part of the text (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_comments = $care_cloud->tasksApi()->getTaskComments(\n        $task_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $task_comment_text\n    );\n    $task_comments = $get_comments->getData()->getTaskComments();\n    $total_items = $get_comments->getData()->getTotalItems();\n    var_dump($task_comments);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Tasks
      summary: Create a task comment
      description: Add a new comment to the task.
      operationId: postTaskComment
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/task_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task_comment:
                  $ref: '#/components/schemas/TaskComment'
              required:
                - task_comment
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      task_comment_id:
                        type: string
                        description: The unique ID of the task comment in CareCloud.
                        example: 86e05affc7a7abefcd513ab400
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\TaskComment;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\TaskIdTaskcommentsBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$task_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task\n\n// Set the task comment\n$task_comment = new TaskComment();\n$task_comment->setText('Text of the comment'); // string | Text of the comment\n\n// Set the request body\n$body = new TaskIdTaskcommentsBody();\n$body->setTaskComment($task_comment);\n\n// Call endpoint and post data\ntry\n{\n    $post_comment = $care_cloud->tasksApi()->postTaskComment($body, $task_id, $accept_language);\n    $task_comment_id = $post_comment->getData()->getTaskCommentId();\n    var_dump($task_comment_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/tasks/{task_id}/task-comments/{task_comment_id}':
    get:
      tags:
        - Tasks
      summary: Get a task comment
      description: Get a specific task comment.
      operationId: getTaskComment
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/task_comment_id_path'
        - $ref: '#/components/parameters/task_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TaskComment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$task_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task\n$task_comment_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task comment\n\n// Call endpoint and get data\ntry\n{\n    $get_comment = $care_cloud->tasksApi()->getTaskComment($task_comment_id, $task_id, $accept_language);\n    $task_comment = $get_comment->getData();\n    var_dump($task_comment);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/tasks/{task_id}/assignees':
    get:
      tags:
        - Tasks
      summary: Get all task assignees
      description: Get information as a list of all task assignees.
      operationId: getTaskAssignees
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/task_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      task_assignees:
                        type: array
                        description: List of all task assignees.
                        items:
                          $ref: '#/components/schemas/TaskAssignee'
                      total_items:
                        type: integer
                        description: The number of all found task assignees.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$task_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_assignees = $care_cloud->tasksApi()->getTaskAssignees(\n        $task_id,\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $assignees = $get_assignees->getData()->getTaskAssignees();\n    $total_items = $get_assignees->getData()->getTotalItems();\n    var_dump($assignees);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    post:
      tags:
        - Tasks
      summary: Create a task assignee
      description: |
        Add a new assignee to the task.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: postTaskAssignee
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/task_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task_assignee:
                  $ref: '#/components/schemas/TaskAssignee'
              required:
                - task_assignee
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      task_assignee_id:
                        type: string
                        description: The unique ID of the task assignee in CareCloud.
                        example: 86e05affc7a7abefcd513ab400
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\TaskAssignee;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\TaskIdAssigneesBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$task_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task\n\n// Set the task assignee info\n$task_assignee = new TaskAssignee();\n$task_assignee->setUserId('8a84da45ed2c825a741a321d50'); // string | The unique ID of the assigned user\n\n// Set the request body\n$body = new TaskIdAssigneesBody();\n$body->setTaskAssignee($task_assignee);\n\n// Call endpoint and post data\ntry\n{\n    $post_assignee = $care_cloud->tasksApi()->postTaskAssignee($body, $task_id, $accept_language);\n    $task_assignee_id = $post_assignee->getData()->getTaskAssigneeId();\n    var_dump($task_assignee_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/tasks/{task_id}/assignees/{assignee_id}':
    get:
      tags:
        - Tasks
      summary: Get a task assignee
      description: Get a specific task assignee.
      operationId: getTaskAssignee
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/task_assignee_id_path'
        - $ref: '#/components/parameters/task_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TaskAssignee'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$task_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task\n$assignee_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task assignee\n\n// Call endpoint and get data\ntry\n{\n    $get_assignee = $care_cloud->tasksApi()->getTaskAssignee($assignee_id, $task_id, $accept_language);\n    $assignee = $get_assignee->getData();\n    var_dump($assignee);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    delete:
      tags:
        - Tasks
      summary: Delete a task assignee from the task
      description: |
        Delete a new assignee from the task.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: deleteSubTasksAssignee
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/task_id_path'
        - $ref: '#/components/parameters/task_assignee_id_path'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$task_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task\n$assignee_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task assignee\n\n// Call endpoint and delete data\ntry\n{\n    $care_cloud->tasksApi()->deleteSubTasksAssignee(\n        $task_id,\n        $assignee_id,\n        $accept_language\n    );\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /task-types:
    get:
      tags:
        - Tasks
      summary: Get all task types
      description: Get information as a list of all task types.
      operationId: getTaskTypes
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      task_types:
                        type: array
                        description: List of all task types.
                        items:
                          $ref: '#/components/schemas/TaskType'
                      total_items:
                        type: integer
                        description: The number of all found task types.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once 'vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_types = $care_cloud->tasksApi()->getTaskTypes(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $task_types = $get_types->getData()->getTaskTypes();\n    $total_items = $get_types->getData()->getTotalItems();\n    var_dump($task_types);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/task-types/{task_type_id}':
    get:
      tags:
        - Tasks
      summary: Get a task type
      description: Get information about a specific task type resource.
      operationId: getTaskType
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/task_type_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TaskType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$task_type_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task\n\n// Call endpoint and get data\ntry\n{\n    $get_type = $care_cloud->tasksApi()->getTaskType($task_type_id, $accept_language);\n    $task_type = $get_type->getData();\n    var_dump($task_type);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /task-states:
    get:
      tags:
        - Tasks
      summary: Get all task states
      description: Get information as a list of all task states.
      operationId: getTaskStates
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      task_states:
                        type: array
                        description: List of all task states.
                        items:
                          $ref: '#/components/schemas/TaskState'
                      total_items:
                        type: integer
                        description: The number of all found task states.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_states = $care_cloud->tasksApi()->getTaskStates(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $task_states = $get_states->getData()->getTaskStates();\n    $total_items = $get_states->getData()->getTotalItems();\n    var_dump($task_states);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/task-states/{task_state_id}':
    get:
      tags:
        - Tasks
      summary: Get a task state
      description: Get information about a specific task state resource.
      operationId: getTaskState
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/task_state_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TaskState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$task_state_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task\n\n// Call endpoint and get data\ntry\n{\n    $get_state = $care_cloud->tasksApi()->getTaskState($task_state_id, $accept_language);\n    $task_state = $get_state->getData();\n    var_dump($task_state);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /task-properties:
    get:
      tags:
        - Task properties
      summary: Get all task properties
      description: Get information about task properties.
      operationId: getTaskProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      task_properties:
                        type: array
                        description: List of all task properties.
                        items:
                          $ref: '#/components/schemas/Property'
                      total_items:
                        type: integer
                        description: The number of all found task properties.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once 'vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_task_properties = $care_cloud->taskPropertiesApi()->getTaskProperties(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $task_properties = $get_task_properties->getData()->getTaskProperties();\n    $total_items = $get_task_properties->getData()->getTotalItems();\n    var_dump($task_properties);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/task-properties/{task_property_id}':
    get:
      tags:
        - Task properties
      summary: Get a task property
      description: Get information about a specific task property.
      operationId: getTaskProperty
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/task_property_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once 'vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$task_property_id = 'p1_communication_reasons'; // string | The unique ID of the task property\n\n// Call endpoint and get data\ntry\n{\n    $get_task_property = $care_cloud->taskPropertiesApi()->getTaskProperty($task_property_id, $accept_language);\n    $task_property = $get_task_property->getData();\n    var_dump($task_property);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/tasks/{task_id}/property-records':
    get:
      tags:
        - Tasks
      summary: Get a collection of task properties records
      description: Get information about all property records on a task.
      operationId: getSubTaskProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/task_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      property_records:
                        type: array
                        description: List of property records.
                        items:
                          $ref: '#/components/schemas/PropertyRecord'
                      total_items:
                        type: integer
                        description: The number of all found task property records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once 'vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$task_id = '8bed991c68a470e7aaeffbf048'; // string | The unique ID of the task\n\n// Call endpoint and get data\ntry\n{\n    $get_properties = $care_cloud->tasksApi()->getSubTaskProperties($task_id, $accept_language);\n    $properties = $get_properties->getData()->getPropertyRecords();\n    $total_items = $get_properties->getData()->getTotalItems();\n    var_dump($properties);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /tests/connection:
    get:
      tags:
        - Tests
      summary: Connection test
      description: 'If you need test REST API availability, please use this resource.'
      operationId: getTestsConnection
      parameters:
        - $ref: '#/components/parameters/test_string'
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      test_string:
                        type: string
                        description: Reverted value of input parameters.
                        example: '!dlroW olleH'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: |
            use CrmCareCloud\Webservice\RestApi\Client\ApiException;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\CareCloud;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\Config;
            use CrmCareCloud\Webservice\RestApi\Client\SDK\Data\AuthTypes;

            require_once '../vendor/autoload.php';

            $project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';
            $login = 'login';
            $password = 'password';
            $external_app_id = 'application_id';
            $auth_type = AuthTypes::BEARER_AUTH;

            $config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);

            $care_cloud = new CareCloud($config);

            // Set query parameters
            $test_string = 'taco cat'; // string | Test string send to REST API. Correct result should return a reverted string

            // Call endpoint and get data
            try
            {
                $get_connection_test = $care_cloud->productRecommendationEngineApi()->getRecommendationCartCombined();
                $test_string_reverted = $get_connection_test->getData()->getTestString();
                var_dump($test_string_reverted);
            }
            catch(ApiException $e)
            {
                die(var_dump($e->getResponseBody() ?: $e->getMessage()));
            }
  /tokens:
    servers:
      - url: 'https://sandbox.crmcarecloud.com/webservice/rest-api/customer-interface/v1.0'
    post:
      tags:
        - Tokens
      summary: Create a token
      description: |
        Create a token and setup of the client application. <br/> ⚠️ The endpoint is available only in the Customer interface.<br/> ⚠️ When creating a new token, the request doesn't need to contain an Authentication header.<br/> ⚠️ Warning: We highly recommend filling all identifications in the tokens resource (device and application) to avoid problems if multiple applications use the CareCloud REST API on one device.<br/>
      operationId: postToken
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device:
                  $ref: '#/components/schemas/Device'
                setup:
                  $ref: '#/components/schemas/Setup'
                external_application_id:
                  type: string
                  description: 'ID of the external application. More information about external applications and how to get an ID is available in [Authentication section](https://carecloud.readme.io/reference/authentication#external-applications-1)'
                  example: 82de12eb8b138791e678fd11c3
                push_token:
                  type: string
                  description: Push notification token (Apple or Google).
                  example: 4f7f658bfa7a5959e093590
              required:
                - device
                - setup
                - external_application_id
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      token_id:
                        type: string
                        description: The client application token.
                        example: 4d8121dea8ae3c7b7fc66e6924ecc466dc7aa13e299ac757d87533ab2630f31bd906aadf
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Device;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Setup;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\TokensBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\Interfaces;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/customer-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BASIC_AUTH;\n$interface = Interfaces::CUSTOMER;\n$token = 'BASE64_encoded_string_user_name';\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the device info\n$device = new Device();\n$device->setDeviceId('test121212'); // string | The unique ID of the client device\n$device->setDeviceSystem('iOS'); // string | Operation system of the device\n$device->setDeviceName('Apple iPhone'); // string | The name of the device\n$device->setDeviceType('test_device'); // string | Type of device by producer (product line)\n\n// Set the setup info\n$setup = new Setup();\n$setup->setLanguageId('en'); // string | The unique ID of the language by ISO 639-1 code from languages resource\n$setup->setAllowedGps(false); // boolean | Permission to GPS tracking in the mobile application\n$setup->setAllowedNotifications(false); // boolean | Permission to the mobile application's notifications\n\n// Set the request body\n$body = new TokensBody();\n$body->setDevice($device);\n$body->setSetup($setup);\n$body->setExternalApplicationId('82de12eb8b138791e678fd11c3'); // string | ID of the customer-external-application resource\n$body->setPushToken(''); // string | Push notification token (Apple or Google) (optional)\n\n// Call endpoint and post data\ntry\n{\n    $post_token = $care_cloud->tokensApi()->postToken($body, $accept_language);\n    $token_id = $post_token->getData()->getTokenId();\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/tokens/{token_id}':
    servers:
      - url: 'https://sandbox.crmcarecloud.com/webservice/rest-api/customer-interface/v1.0'
    put:
      tags:
        - Tokens
      summary: Edit a push token
      description: |
        Update a push token and installation setup. <br/> ⚠️ Endpoint is available only in Customer interface. <br/>
      operationId: putToken
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/token_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                setup:
                  $ref: '#/components/schemas/Setup'
                push_token:
                  type: string
                  description: Push notification token (Apple or Google).
                  example: 4f7f658bfa7a5959e093590
              required:
                - setup
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\Setup;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\TokensTokenIdBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\Interfaces;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/customer-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BASIC_AUTH;\n$interface = Interfaces::CUSTOMER;\n$token = 'BASE64_encoded_string_user_name';\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type, $interface, null, $token);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the setup info\n$setup = new Setup();\n$setup->setLanguageId('en'); // string | The unique ID of the language by ISO 639-1 code from languages resource\n$setup->setAllowedGps(false); // boolean | Permission to GPS tracking in the mobile application\n$setup->setAllowedNotifications(false); // boolean | Permission to the mobile application's notifications\n\n// Set path parameters\n$token_id = '702baa4a40a57694831321e5d02605d46c189369126ae43a81030790ea188af87e49578a'; // Client's application token\n\n// Set the request body\n$body = new TokensTokenIdBody();\n$body->setSetup($setup);\n$body->setPushToken('321e5d02605d46c18936912'); // string | Push notification token (Apple or Google) (optional)\n\n// Call endpoint and put data\ntry\n{\n    $care_cloud->tokensApi()->putToken($body, $token_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/tokens/{token_id}/actions/login':
    servers:
      - url: 'https://sandbox.crmcarecloud.com/webservice/rest-api/customer-interface/v1.0'
    post:
      tags:
        - Tokens
      summary: Login to the application
      description: |
        Login of a customer account to client's application.<br/> ⚠️ Endpoint is available only in Customer interface.<br/>
      operationId: postTokenLogin
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/token_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login_type:
                  type: string
                  enum:
                    - card
                    - email
                  description: The unique ID of the login type.
                  example: email
                login_value:
                  type: string
                  description: Value of the login to Customer interface API.
                  example: example@crmcarecloud.com
                password:
                  type: string
                  format: password
                  description: Password of the customer.
                  example: password_example
              required:
                - device
                - setup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_id:
                        type: string
                        description: The unique ID of the customer.
                        example: 8ea2591121e636086a4a9c0992
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsLoginBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\Interfaces;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/customer-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BASIC_AUTH;\n$interface = Interfaces::CUSTOMER;\n$token = 'BASE64_encoded_string_user_name';\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type, $interface, null, $token);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$token_id = '702baa4a40a57694831321e5d02605d46c189369126ae43a81030790ea188af87e49578a'; // Client's application token\n\n// Set the request body\n$body = new ActionsLoginBody();\n$body->setLoginType('email'); // string | The unique ID for the login type ('card' or 'email' only)\n$body->setLoginValue('happy_customer@example.com'); // string | Value of the login to Customer interface API\n$body->setPassword('secret_password'); // string | Customer's password\n\n// Call endpoint and post data\ntry\n{\n    $post_token_login = $care_cloud->tokensApi()->postTokenLogin($body, $token_id, $accept_language);\n    $customer_id = $post_token_login->getData()->getCustomerId();\n    var_dump($customer_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/tokens/{token_id}/actions/logout':
    servers:
      - url: 'https://sandbox.crmcarecloud.com/webservice/rest-api/customer-interface/v1.0'
    post:
      tags:
        - Tokens
      summary: Logout from the application
      description: Logout of a customer account to client's application.
      operationId: postTokenLogout
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/token_id_path'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\Interfaces;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/customer-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BASIC_AUTH;\n$interface = Interfaces::CUSTOMER;\n$token = 'BASE64_encoded_string_user_name';\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type, $interface, null, $token);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$token_id = '702baa4a40a57694831321e5d02605d46c189369126ae43a81030790ea188af87e49578a'; // Client's application token\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->tokensApi()->postTokenLogout($token_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/tokens/{token_id}/actions/social-network-login':
    servers:
      - url: 'https://sandbox.crmcarecloud.com/webservice/rest-api/customer-interface/v1.0'
    post:
      tags:
        - Tokens
      summary: Login via social network
      description: |
        Login of a customer account to client's application via social network. <br/> ⚠️ Endpoint is available only in Customer interface.<br/>
      operationId: postTokenSocialLogin
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/token_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                social_network_credentials:
                  $ref: '#/components/schemas/SocialNetworkCredentials'
              required:
                - social_network_credentials
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_id:
                        type: string
                        description: The unique ID of the customer.
                        example: 8ea6abece4cd0a4ded0a29f093
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  '/tokens/{token_id}/actions/send-password-setup-email':
    servers:
      - url: 'https://sandbox.crmcarecloud.com/webservice/rest-api/customer-interface/v1.0'
    post:
      tags:
        - Tokens
      summary: Send email for set up of the new customer password
      description: |
        Send email, that contains link to set up a new customer password.<br/> The use case [Forgotten password](https://www.crmcarecloud.com/build-a-mobile-app/) shows how to use this action method.<br/> ⚠️ Endpoint is available only in Customer interface.<br/> ⚠️ An extra setup of event type in CareCloud could be necessary to make this method work correctly. If so, don't hesitate to get in touch with the CareCloud administrator in your organization.<br/>
      operationId: postTokenSendPasswordSetup
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/token_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Message with a setup password link will be delivered to this email address.
                  example: happy_customer@carecloud.com
              required:
                - email
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsSendpasswordsetupemailBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\Interfaces;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/customer-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BASIC_AUTH;\n$interface = Interfaces::CUSTOMER;\n$token = 'BASE64_encoded_string_user_name';\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type, $interface, null, $token);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$token_id = '702baa4a40a57694831321e5d02605d46c189369126ae43a81030790ea188af87e49578a'; // Client's application token\n\n// Set the request body\n$body = new ActionsSendpasswordsetupemailBody();\n$body->setEmail('happy_customer@example.com'); // string | Message with a setup password link will be delivered to this email address\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->tokensApi()->postTokenSendPasswordSetup($body, $token_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/tokens/{token_id}/actions/auth-token':
    servers:
      - url: 'https://sandbox.crmcarecloud.com/webservice/rest-api/customer-interface/v1.0'
    get:
      tags:
        - Tokens
      summary: Get authentication token
      description: |
        Returns authentication token for specific external application. <br/> ⚠️ Endpoint is available only in Customer interface.<br/>
      operationId: getTokenAuthentication
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/token_id_path'
        - $ref: '#/components/parameters/external_application_id'
        - $ref: '#/components/parameters/token_type'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        description: Authentication token for external application.
                        example: LQ55EH
                      token_request_id:
                        type: string
                        description: 'The parameter specifies the request that caused the token to be created. If two customers generated an authentication token at the same time and in the same application, the token_request_id parameter represents additional verification to identify the correct token.'
                        example: 6fb977c6fce6da6c0fa32aa1bc6417c621c116c65a5d638fefac1488334d67e33867675d
                      valid_to:
                        type: string
                        description: 'Date and time of the token validity. *(YYYY-MM-DD HH:MM:SS)*'
                        example: '2019-01-04 10:31:56'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\Interfaces;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/customer-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BASIC_AUTH;\n$interface = Interfaces::CUSTOMER;\n$token = 'BASE64_encoded_string_user_name';\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type, $interface, null, $token);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$token_id = '8ea02b112ccac496a3d423c5b1'; // string | Client's application token\n\n// Set query parameters\n$external_application_id = '82de12eb8b138791e678fd11c3'; // string | ID of the external application\n$token_type = 1; // integer | Possible values: 1- alphanumeric, 2- numeric\n\n// Call endpoint and get data\ntry\n{\n    $get_token = $care_cloud->tokensApi()->getTokenAuthentication(\n        $token_id,\n        $external_application_id,\n        $token_type,\n        $accept_language\n    );\n    $token = $get_token->getData();\n    var_dump($token);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/tokens/{token_id}/actions/login-test-customer':
    servers:
      - url: 'https://sandbox.crmcarecloud.com/webservice/rest-api/customer-interface/v1.0'
    post:
      tags:
        - Tokens
      summary: Login to the application for test customer
      description: |
        Login of a test customer account to client's application. <br/> ⚠️ Endpoint is available only in Customer interface.<br/>
      operationId: postTokenTestCustomerLogin
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/token_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customer_id:
                        type: string
                        description: The unique ID of the customer.
                        example: 83aef431283443591a98d04070
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\Interfaces;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/customer-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BASIC_AUTH;\n$interface = Interfaces::CUSTOMER;\n$token = 'BASE64_encoded_string_user_name';\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type, $interface, null, $token);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$token_id = '702baa4a40a57694831321e5d02605d46c189369126ae43a81030790ea188af87e49578a'; // Client's application token\n\n// Call endpoint and post data\ntry\n{\n    $post_test_login = $care_cloud->tokensApi()->postTokenTestCustomerLogin($token_id, $accept_language);\n    $customer_id = $post_test_login->getData()->getCustomerId();\n    var_dump($customer_id);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /users:
    get:
      tags:
        - Users
      summary: Get all users
      description: |
        Get a list of all users in CareCloud.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: getUsers
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/email'
        - $ref: '#/components/parameters/phone'
        - $ref: '#/components/parameters/login'
        - $ref: '#/components/parameters/first_name'
        - $ref: '#/components/parameters/last_name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      users:
                        type: array
                        description: A list of all users.
                        items:
                          $ref: '#/components/schemas/User'
                      total_items:
                        type: integer
                        description: The number of all found users.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$email = null; // string | Search by email (optional)\n$phone = null; // string | Search by phone number with international prefix (optional)\n$login = null; // string | Search by login (optional)\n$first_name = null; // string | Search by first name (optional)\n$last_name = null; // string | Search by last name (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_users = $care_cloud->usersApi()->getUsers(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $email,\n        $phone,\n        $login,\n        $first_name,\n        $last_name\n    );\n    $users = $get_users->getData()->getUsers();\n    $total_items = $get_users->getData()->getTotalItems();\n    var_dump($users);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/users/{user_id}':
    get:
      tags:
        - Users
      summary: Get information about a user
      description: |
        Get information about a specific user.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/user_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$user_id = '8a84da45ed2c825a741a321d50'; // string | The unique ID of the user\n\n// Call endpoint and get data\ntry\n{\n    $get_user = $care_cloud->usersApi()->getUser($user_id, $accept_language);\n    $user = $get_user->getData();\n    var_dump($user);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /users/actions/verify-auth-token:
    post:
      tags:
        - Users
      summary: Verify user auth token
      description: |
        Verification of the user auth token.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: postUserVerifyAuthToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auth_token:
                  type: string
                  description: Authentication token for user verification.
                  example: 95d22b814d9495b4e723e7a17ee104319
              required:
                - auth_token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user_id:
                        type: string
                        description: The unique ID of the user.
                        example: 838b73aacb5ac326cec4030c80
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /users/actions/login:
    post:
      tags:
        - Users
      summary: User login
      description: |
        User login to external application.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: postUserLogin
      security: []
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_external_application_id:
                  type: string
                  description: 'ID of an external application where user wants to be logged in from resource [user-external-application](#tag/Customer-external-applications).'
                  example: 89d1a6111b3fb6e74665d948
                login:
                  type: string
                  description: Login name of user in CareCloud.
                  example: example@crmcarecloud.com
                password:
                  type: string
                  format: password
                  description: The CareCloud user password.
                  example: password_example
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      bearer_token:
                        type: string
                        description: 'Authentication bearer token for an user. Token can be used for authentication in REST API with Bearer Authentication (more information about it [here](#section/Authorization/bearerAuth)).'
                        example: 09359095c5da43c7ae11e710eabce49418715a6a
                      valid_to:
                        type: string
                        description: 'Date and time (local time zone of the project) of the token validity.   *(YYYY-MM-DD HH:MM:SS)*'
                        example: '2019-01-04 10:31:56'
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsLoginBody1;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the request body\n$body = new ActionsLoginBody1();\n$body->setUserExternalApplicationId('external_id'); // string | ID of an external application where user wants to be logged in\n$body->setLogin('user_login'); // string | Login name of the user\n$body->setPassword('user_password'); // string | User's password\n\n// Call endpoint and post data\ntry\n{\n    $post_login = $care_cloud->usersApi()->postUserLogin($body, $accept_language);\n    $login_data = $post_login->getData();\n    var_dump($login_data);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /users/actions/sso-login:
    post:
      tags:
        - Users
      summary: User SSO login
      description: |
        User Signe sign-on login to external application. In this case it is necessary cary SSO token from CareCloud to login user.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: postUserSsoLogin
      security: []
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_external_application_id:
                  type: string
                  description: 'ID of an external application where user wants to be logged in. If you don''t have id, please contact your account manager.'
                  example: 89d1a6111b3fb6e74665d948
                sso_token:
                  type: string
                  description: Single sign-on token from CareCloud.
                  example: ae11e710ea4d9495da43c7ae11e71b4e723e7bce494a
              required:
                - social_network_credentials
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      bearer_token:
                        type: string
                        description: 'Authentication bearer token for an user. Token can be used for authentication in REST API with Bearer Authentication (more information about it [here](#section/Authorization/bearerAuth))'
                        example: 09359095c5da43c7ae11e710eabce49418715a6a
                      valid_to:
                        type: string
                        description: 'Date and time (local time zone of the project) of the token validity.  *(YYYY-MM-DD HH:MM:SS)*'
                        example: '2019-01-04 10:31:56'
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /users/actions/logout:
    post:
      tags:
        - Users
      summary: User logout
      description: |
        User logout from external application.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: postUserLogout
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_external_application_id:
                  type: string
                  description: 'ID of an external application where user wants to be logged in from resource [user-external-application](#tag/Customer-external-applications).'
                  example: 89d1a6111b3fb6e74665d948
                bearer_token:
                  type: string
                  description: Authentication bearer token for an user.
                  example: 09359095c5da43c7ae11e710eabce49418715a6a
              required:
                - user_external_application_id
                - bearer_token
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsLogoutBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set the request body\n$body = new ActionsLogoutBody();\n$body->setUserExternalApplicationId('82de12eb8b138791e678fd11c3'); // string | ID of an external application where user wants to be logged in\n$body->setBearerToken('bearer_token'); // string | Authentication bearer token for a user\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->usersApi()->postUserLogout($body, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /user-roles:
    get:
      tags:
        - User roles
      summary: Get all user roles
      description: |
        Get a list of all user roles in CareCloud.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: getUserRoles
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user_roles:
                        type: array
                        description: Array of user roles.
                        items:
                          $ref: '#/components/schemas/UserRole'
                      total_items:
                        type: integer
                        description: The number of all found user roles.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n\n// Call endpoint and get data\ntry\n{\n    $get_user_roles = $care_cloud->userRolesApi()->getUserRoles(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction\n    );\n    $user_roles = $get_user_roles->getData()->getUserRoles();\n    $total_items = $get_user_roles->getData()->getTotalItems();\n    var_dump($user_roles);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/user-roles/{user_role_id}':
    get:
      tags:
        - User roles
      summary: Get information about a user role
      description: |
        Get information about a specific user role.<br/> ⚠️ Endpoint is available only in the Enterprise interface.<br/>
      operationId: getUserRole
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/user_role_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserRole'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$user_role_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the user role\n\n// Call endpoint and get data\ntry\n{\n    $get_user_role = $care_cloud->userRolesApi()->getUserRole($user_role_id, $accept_language);\n    $user_role = $get_user_role->getData();\n    var_dump($user_role);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /vouchers:
    get:
      tags:
        - Vouchers
      summary: Get all vouchers
      description: Get information as a list o all vouchers.
      operationId: getVouchers
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/voucher_code'
        - $ref: '#/components/parameters/reward_store_id'
        - $ref: '#/components/parameters/is_valid'
        - $ref: '#/components/parameters/is_applied'
        - $ref: '#/components/parameters/without_stores'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      vouchers:
                        type: array
                        description: List of all recent vouchers.
                        items:
                          $ref: '#/components/schemas/Voucher'
                      total_items:
                        type: integer
                        description: The number of all recent vouchers.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$customer_id = null; // string | The unique ID of the customer (optional, default is null)\n$code = null; // string | The code of the reward (optional, default is null)\n$store_id = null; // string | The unique ID of the store where customer can apply the reward (optional, default is null)\n$is_valid = null; // boolean | In validity range - true / before or after validity range - false / no value - all (optional, default is null)\n$is_applied = null; // boolean | Filter by voucher application and reservation (optional)\n$without_stores = null; // boolean | If true, the data will not contain information about business units (stores). If false, or not set resource returns default structure (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_vouchers = $care_cloud->vouchersApi()->getVouchers(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $customer_id,\n        $code,\n        $store_id,\n        $is_valid,\n        $is_applied,\n        $without_stores\n    );\n    $vouchers = $get_vouchers->getData()->getVouchers();\n    $total_items = $get_vouchers->getData()->getTotalItems();\n    var_dump($vouchers);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/vouchers/{voucher_id}':
    get:
      tags:
        - Vouchers
      summary: Get a voucher
      description: Get information about a specific voucher.
      operationId: getVoucher
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/voucher_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Voucher'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$voucher_id = '85d6598db0bf3f62afd5db8507'; // string | The unique ID of the voucher\n\n// Call endpoint and get data\ntry\n{\n    $get_voucher = $care_cloud->vouchersApi()->getVoucher($voucher_id, $accept_language);\n    $voucher = $get_voucher->getData();\n    var_dump($voucher);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
    put:
      tags:
        - Vouchers
      summary: Update a voucher
      description: This method updates a specific voucher.
      operationId: putVoucher
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/voucher_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                voucher:
                  $ref: '#/components/schemas/Voucher'
              required:
                - voucher
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  '/vouchers/{voucher_id}/property-records':
    get:
      tags:
        - Vouchers
      summary: Get a collection of voucher properties records
      description: Get information about all property records on an voucher.
      operationId: getSubVoucherProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/voucher_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      property_records:
                        type: array
                        description: List of property records.
                        items:
                          $ref: '#/components/schemas/PropertyRecord'
                      total_items:
                        type: integer
                        description: The number of all found voucher property records.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$voucher_id = '85d6598db0bf3f62afd5db8507'; // string | The unique ID of the voucher\n\n// Call endpoint and get data\ntry\n{\n    $get_voucher_properties_records = $care_cloud->vouchersApi()->getSubVoucherProperties($voucher_id, $accept_language);\n    $voucher_properties_records = $get_voucher_properties_records->getData()->getPropertyRecords();\n    var_dump($voucher_properties_records);\n    $total_items = $get_voucher_properties_records->getData()->getTotalItems();\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/vouchers/{voucher_id}/actions/apply-voucher':
    post:
      tags:
        - Vouchers
      summary: Application of a voucher
      description: Sets a voucher as applied.
      operationId: postVoucherApply
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/voucher_id_path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: The unique ID of the store where voucher was applied.
                  example: 81eaeea13b8984a169c490a325
                date_applied:
                  type: string
                  description: 'Date (ISO 8601) of voucher application. *(YYYY-MM-DD HH:MM:SS)*'
                  example: '2023-03-29 10:00:00'
              required:
                - date_applied
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\Model\\ActionsApplyvoucherBody;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$voucher_id = '85d6598db0bf3f62afd5db8507'; // string | The unique ID of the voucher\n\n// Set the request body\n$body = new ActionsApplyvoucherBody();\n$body->setStoreId(null); // string | The unique ID of the store (optional)\n$body->setDateApplied('2022-10-28 15:52:00'); // string | Date (ISO 8601) of voucher application (YYYY-MM-DD HH:MM:SS)\n\n// Call endpoint and post data\ntry\n{\n    $care_cloud->vouchersApi()->postVoucherApply($body, $voucher_id, $accept_language);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /vouchers/batch:
    post:
      tags:
        - Vouchers
      summary: Create a batch of vouchers.
      description: |
        Batch process helps to add multiple vouchers in one request. <br/> ⚠️ Adjust batch sizes based on processing times. We recommended use maximum amount of 1000 records and adjust the batch size based on processing time.<br/> ⚠️ Endpoint is available only in Enterprise interface.<br/>
      operationId: postBulkVouchers
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vouchers:
                  type: array
                  description: List of the CareCloud vouchers.
                  items:
                    $ref: '#/components/schemas/VoucherBatch'
                error_processing:
                  type: integer
                  enum:
                    - 1
                    - 2
                  description: 'The parameter describes the batch method behavior in case of error occurs. *Possible values are: 1 - It returns the first error found and rollback all previous changes (this is also the default behavior if the parameter is not set) / 2 - It creates all valid records and creates an error report from failed attempts.*'
              required:
                - vouchers
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /voucher-properties:
    get:
      tags:
        - Voucher properties
      summary: Get all voucher properties
      description: Get information about voucher properties.
      operationId: getVoucherProperties
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      voucher_properties:
                        type: array
                        description: List of all voucher properties.
                        items:
                          $ref: '#/components/schemas/Property'
                      total_items:
                        type: integer
                        description: The number of all found voucher properties.
                        example: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$count = 10; // integer >= 1 | The number of records to return (optional, default is 100)\n$offset = 0; // integer | The number of records from a collection to skip (optional, default is 0)\n$sort_field = null; // string | One of the query string parameters for sorting (optional, default is null)\n$sort_direction = 'DESC'; // string | Direction of sorting the response list (optional, default is null)\n$name = null; // string | Search record by name or a part of the name (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_voucher_properties = $care_cloud->voucherPropertiesApi()->getVoucherProperties(\n        $accept_language,\n        $count,\n        $offset,\n        $sort_field,\n        $sort_direction,\n        $name\n    );\n    $voucher_properties = $get_voucher_properties->getData()->getVoucherProperties();\n    $total_items = $get_voucher_properties->getData()->getTotalItems();\n    var_dump($voucher_properties);\n    var_dump($total_items);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  '/voucher-properties/{voucher_property_id}':
    get:
      tags:
        - Voucher properties
      summary: Get a voucher property
      description: Get information about a specific voucher property.
      operationId: getVoucherProperty
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/voucher_property_id_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set path parameters\n$voucher_property_id = '86e05affc7a7abefcd513ab400'; // string | The unique ID of the voucher property\n\n// Call endpoint and get data\ntry\n{\n    $get_voucher_property = $care_cloud->voucherPropertiesApi()->getVoucherProperty(\n        $voucher_property_id,\n        $accept_language\n    );\n    $voucher_property = $get_voucher_property->getData();\n    var_dump($voucher_property);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /wallet/actions/sales-turnover:
    get:
      tags:
        - Wallet
      summary: Get sales turnover
      description: Get information about sales turnover of the customer in time interval.
      operationId: getWalletSalesTurnover
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_required'
        - $ref: '#/components/parameters/date_from'
        - $ref: '#/components/parameters/date_to'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      turnover:
                        type: array
                        description: List of all turnover by currency in time interval.
                        items:
                          $ref: '#/components/schemas/QualificationTurnover'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$date_from = null; // string | Start of the time interval (YYYY-MM-DD) (optional)\n$date_to = null; // string | End of the time interval (YYYY-MM-DD) (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_sales_turnover = $care_cloud->walletApi()->getWalletSalesTurnover(\n        $customer_id,\n        $accept_language,\n        $date_from,\n        $date_to\n    );\n    $sales_turnover = $get_sales_turnover->getData()->getTurnover();\n    var_dump($sales_turnover);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /wallet/actions/points-overview:
    get:
      tags:
        - Wallet
      summary: Get points overview
      description: Get information about points overview of the customer in time interval.
      operationId: getWalletPoints
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_required'
        - $ref: '#/components/parameters/date_from'
        - $ref: '#/components/parameters/date_to'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      earned_points:
                        type: number
                        format: float
                        description: Amount of earned points in time interval.
                        example: 100
                      redeemed_points:
                        type: number
                        format: float
                        description: Amount of redeemed points in time interval.
                        example: 20.5
                      available_points:
                        type: number
                        format: float
                        description: Amount of available points in the moment. Time interval has no influence to the result.
                        example: 79.5
                      available_points_money_value:
                        type: array
                        items:
                          $ref: '#/components/schemas/MoneyValue'
                        description: Parameter shows money representation of the 'available_points' parameter. CareCloud calculates money value for every system currency. The calculation is available only if the customer  status allows a point payment. This setup is possible in CareCloud administration.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$date_from = null; // string | Start of the time interval (YYYY-MM-DD) (optional)\n$date_to = null; // string | End of the time interval (YYYY-MM-DD) (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_points_overview = $care_cloud->walletApi()->getWalletPoints(\n        $customer_id,\n        $accept_language,\n        $date_from,\n        $date_to\n    );\n    $points_overview = $get_points_overview->getData();\n    var_dump($points_overview);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /wallet/actions/credits-overview:
    get:
      tags:
        - Wallet
      summary: Get credits overview
      description: Get information about credits overview of the customer in the time interval.
      operationId: getWalletCredits
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_required'
        - $ref: '#/components/parameters/date_from'
        - $ref: '#/components/parameters/date_to'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      earned_credits:
                        type: number
                        format: float
                        description: Amount of earned credits in time interval.
                        example: 100
                      redeemed_credits:
                        type: number
                        format: float
                        description: Amount of redeemed credits in time interval.
                        example: 20.5
                      available_credits:
                        type: number
                        format: float
                        description: Amount of available credits in the moment. Time interval has no influence to the result.
                        example: 79.5
                      split_by_currency:
                        type: array
                        items:
                          $ref: '#/components/schemas/CreditWalletSummary'
                        description: The credit overview split by currency.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n$date_from = null; // string | Start of the time interval (YYYY-MM-DD) (optional)\n$date_to = null; // string | End of the time interval (YYYY-MM-DD) (optional)\n\n// Call endpoint and get data\ntry\n{\n    $get_credits_overview = $care_cloud->walletApi()->getWalletCredits(\n        $customer_id,\n        $accept_language,\n        $date_from,\n        $date_to\n    );\n    $credits_overview = $get_credits_overview->getData();\n    var_dump($credits_overview);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /wallet/actions/points-expiration-overview:
    get:
      tags:
        - Wallet
      summary: Get points expiration overview
      description: Get information about points expiration overview of the customer.
      operationId: getWalletPointsExpiration
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_required'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      next_amount:
                        type: number
                        format: float
                        description: Date (ISO 8601) when first points will expire.
                        example: 77.36
                      next_date:
                        type: string
                        description: Amount of redeemed points in time interval. *(YYYY-MM-DD)*
                        example: '2022-01-01'
                      current_month_amount:
                        type: number
                        format: float
                        description: Amount of points that will expire in current month.
                        example: 0
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Call endpoint and get data\ntry\n{\n    $get_points_expiration = $care_cloud->walletApi()->getWalletPointsExpiration($customer_id, $accept_language);\n    $points_expiration = $get_points_expiration->getData();\n    var_dump($points_expiration);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
  /wallet/actions/credits-expiration-overview:
    get:
      tags:
        - Wallet
      summary: Get credits expiration overview
      description: Get information about credits expiration overview of the customer.
      operationId: getWalletCreditsExpiration
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/customer_id_required'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      next_amount:
                        type: number
                        format: float
                        description: Date (ISO 8601) when first points will expire.
                        example: 77.36
                      next_date:
                        type: string
                        description: Amount of redeemed points in time interval. *(YYYY-MM-DD)*
                        example: '2022-01-01'
                      current_month_amount:
                        type: number
                        format: float
                        description: Amount of points that will expire in current month.
                        example: 0
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      x-codeSamples:
        - lang: PHP
          label: CareCloud SDK
          source: "use CrmCareCloud\\Webservice\\RestApi\\Client\\ApiException;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\CareCloud;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Config;\nuse CrmCareCloud\\Webservice\\RestApi\\Client\\SDK\\Data\\AuthTypes;\n\nrequire_once '../vendor/autoload.php';\n\n$project_uri = 'https://yourapiurl.com/webservice/rest-api/enterprise-interface/v1.0';\n$login = 'login';\n$password = 'password';\n$external_app_id = 'application_id';\n$auth_type = AuthTypes::BEARER_AUTH;\n\n$config = new Config($project_uri, $login, $password, $external_app_id, $auth_type);\n\n$care_cloud = new CareCloud($config);\n\n// Set Header parameter Accept-Language\n$accept_language = 'en'; //\tstring | The unique ID of the language code by ISO 639-1 Default: cs, en-gb;q=0.8\n\n// Set query parameters\n$customer_id = '8ea2591121e636086a4a9c0992'; // string | The unique ID of the customer\n\n// Call endpoint and get data\ntry\n{\n    $get_credits_expiration = $care_cloud->walletApi()->getWalletCreditsExpiration($customer_id, $accept_language);\n    $credits_expiration = $get_credits_expiration->getData();\n    var_dump($credits_expiration);\n}\ncatch(ApiException $e)\n{\n    die(var_dump($e->getResponseBody() ?: $e->getMessage()));\n}\n"
security:
  - bearerAuth: []
  - basicAuth: []
components:
  responses:
    BadRequest:
      description: Bad input parameter. Error message specifies the detail.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                allOf:
                  - $ref: '#/components/schemas/BasicError'
                  - type: object
                    properties:
                      error_data:
                        type: object
                        description: Data in case of an exception.
                        properties:
                          invalid_params:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: event_id_event_type_id_customer_id_external_id_secondary_external_id
                                reason:
                                  type: string
                                  example: relation_already_exists
                                value:
                                  type: string
                                  example: ''
                                message:
                                  type: string
                                  example: 'Relation for this combination of event type, customer ID and external IDs already exists.'
    Unauthorized:
      description: The client has invalid credentials or auth token.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                allOf:
                  - $ref: '#/components/schemas/BasicError'
                  - type: object
                    properties:
                      error_data:
                        type: object
                        description: Data in case of an exception.
                        example: null
    Forbidden:
      description: The client does not exist or the client tried to access non authorized property/resource.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  type:
                    type: string
                    example: interface_not_allowed_exception
                  title:
                    type: string
                    example: Enterprise interface is not allowed for this resource
                  detail:
                    type: string
                    example: Resource name "tokens" is not allowed in Enterprise interface
                  error_data:
                    type: object
                    description: Data in case of an exception.
                    properties:
                      invalid_resource_name:
                        type: string
                        example: tokens
                      interface:
                        type: string
                        example: Enterprise
    NotFound:
      description: The resource was not found.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                allOf:
                  - $ref: '#/components/schemas/BasicError'
                  - type: object
                    properties:
                      error_data:
                        type: object
                        description: Data in case of an exception.
                        properties:
                          resource_name:
                            type: string
                            example: events
                          resource_id:
                            type: string
                            example: 84b5e55448fbd6c0b22b4d
    NotAllowed:
      description: The resource does not support the specified HTTP method.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                allOf:
                  - $ref: '#/components/schemas/BasicError'
                  - type: object
                    properties:
                      error_data:
                        type: object
                        description: Data in case of an exception.
                        properties:
                          http_method:
                            type: string
                            example: DELETE
    TooManyRequests:
      description: Too many requests - more than the resource limit.
    InternalServerError:
      description: Server is not working as expected.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/BasicError'
    ServiceUnavailable:
      description: 'Temporary state when the service is temporarily unavailable, overloaded or there is a maintenance window.'
  schemas:
    AcceptedPayment:
      type: object
      description: 'The structure contains values for applied rewards, vouchers, discounts, and other benefits.'
      properties:
        recommended_discounts:
          type: array
          items:
            $ref: '#/components/schemas/DiscountItem'
          readOnly: true
          description: The list of offered discounts excludes rewards (Loyalty Status Discount).
        credit_points:
          type: number
          format: float
          readOnly: true
          description: Amount of used points.
          example: 0
        price_of_credit_points:
          type: number
          format: float
          readOnly: true
          description: Amount of money corresponding to the number of used points.
          example: 0
        credit:
          type: number
          format: float
          readOnly: true
          description: Amount of used credits.
          example: 0
        vouchers:
          type: array
          items:
            $ref: '#/components/schemas/PaymentVoucher'
          readOnly: true
          description: List of applied rewards/vouchers on the current bill (includes the value of discount) independent of DiscountItem.
        credit_points_of_this_transaction:
          type: number
          format: float
          readOnly: true
          description: Sum of points gained from this transaction.
          example: 0
        total_credit_points:
          type: number
          format: float
          readOnly: true
          description: Amount of the points on the customer account (after the recent purchase is closed).
          example: 0
        total_credit:
          type: number
          format: float
          readOnly: true
          description: Amount of the credits on the customer account (after the recent purchase is closed).
          example: 960
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CashierMessage'
          readOnly: true
          description: A recommendation messages for the cashier in his language localization.
    Address:
      type: object
      description: Address resource.
      properties:
        address1:
          type: string
          description: Street name of the address.
          example: Old Town Square
        address2:
          type: string
          description: Street number (Land registry number).
          example: '34'
        address3:
          type: string
          description: House number.
          example: 1a
        address4:
          type: string
          description: Next address data.
          example: ''
        address5:
          type: string
          description: Next address data.
          example: ''
        address6:
          type: string
          description: Next address data.
          example: ''
        address7:
          type: string
          description: Next address data.
          example: ''
        zip:
          type: string
          description: ZIP code.
          example: '11000'
        city:
          type: string
          description: City.
          example: Prague 1
        country_code:
          type: string
          description: ISO code of the country. *Possible values de / gb / us / it / cz / etc*
          example: cz
    Agreement:
      type: object
      description: Customer's consents.
      properties:
        agreement_gtc:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: false
          description: 'Consent to General Terms & Conditions. *Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set*'
          example: 1
        agreement_profiling:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: false
          description: 'Consent to profiling. *Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set*'
          example: 1
        agreement_marketing_communication:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: false
          description: 'Consent to marketing communication. *Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set*'
          example: 1
        custom_agreements:
          type: array
          items:
            $ref: '#/components/schemas/CustomAgreements'
          readOnly: false
          description: Custom agreements.
      required:
        - agreement_marketing_communication
        - agreement_profiling
        - agreement_gtc
    AgreementList:
      type: object
      properties:
        agreement_id:
          type: string
          readOnly: true
          description: The unique ID of the agreement in CareCloud.
          example: 8fd73167342d06899c4c015320
        name:
          type: string
          readOnly: true
          description: Name of the agreement in CareCloud.
          example: Custom agreement
        text:
          type: string
          readOnly: true
          description: Text of the agreement in CareCloud. Language version of text is returned by language setup in HTTP header of the request.
          example: '<h1>Souhlas se zpracováním osobních údajů</h1><p>Tímto se dobrovolně a svobodně registruji do systému card a uděluji souhlas se zpracováním osobních údajů poskytnutých při registraci, jakožto i dalších osobních údajů získaných při obchodním styku a v souvislosti s členstvím v systému za účelem:</p><h2>Operací spojených s provozováním systému card</h2><ul><li>Zařazení do databáze členů card systému</li><li>Nabízení slev členům systému (zvýhodněné ceny a zboží, sbírání bodů)</li><li>Zasílání obchodních sdělení</li></ul>'
        communication_channel_id:
          type: string
          readOnly: true
          description: 'The unique ID of the communication channel from resource [GET /communication-channels](#tag/Communication-channels).'
          example: 86e05affc7a7abefcd513ab400
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-12-16 17:42:28.248955'
    Attachment:
      type: object
      description: Message attachment information structure.
      properties:
        upload_method:
          type: string
          enum:
            - url
            - base64
          readOnly: false
          description: Method how to upload attachment file.
          example: url
        file_data:
          type: string
          description: File data to upload. It could URL address of the file or BASE64 encoded file.
          example: 'https://upload.wikimedia.org/wikipedia/commons/c/ca/1x1.png'
        cache_for:
          type: integer
          description: 'CareCloud can cache the attachment for a certain amount of minutes. If the cache parameter is not set, the attachment is not cached, and it''s deleted after the message is sent.'
          example: 20
      required:
        - upload_method
        - file_data
    AttachmentInfo:
      type: object
      description: Message attachment information structure.
      properties:
        attachment_format:
          type: string
          readOnly: false
          description: Format of the attachment file.
          example: general_terms.pdf
    Bill:
      type: object
      description: Structure of bill from POS.
      properties:
        bill_id:
          type: string
          readOnly: false
          description: 'Identification number of the bill (must be unique in POS, use prefix ''C'' for a canceled bill).'
          example: 8fbea1c1eaa8edd35e7f278
        bill_number:
          type: string
          readOnly: false
          description: 'Alternative identification of the bill. In the case of cancelation, there should be bill_id from the original bill.'
          example: null
        payment_time:
          type: string
          readOnly: false
          description: 'Date and time of bill creation. *Possible value: 2016-06-30T15:51:49+02:00*'
          example: '2016-06-30T15:5:49+02:00'
        created_by:
          type: string
          readOnly: false
          description: Name of the user who created a bill.
          example: API user
        currency_id:
          type: string
          readOnly: false
          description: 'ID of the currency from resource [currencies](#tag/Currencies).'
          example: 8bed991c68a470e7aaeffbf048
        total_price:
          type: number
          format: float
          readOnly: false
          description: The total price of the bill as a sum of all items.
          example: 700
        bill_items:
          type: array
          items:
            $ref: '#/components/schemas/BillItem'
          readOnly: false
          description: List of bill items.
      required:
        - bill_id
        - payment_time
        - currency_id
        - total_price
        - bill_items
    BillItem:
      type: object
      description: Bill item structure.
      properties:
        plu_ids:
          type: array
          items:
            $ref: '#/components/schemas/PluId'
          readOnly: false
          description: An array of all available pluIds from the particular product lists (default is Product ID from Global product list (consist cleaned data - unique ID of every product across all POS systems)).
        plu_name:
          type: string
          readOnly: false
          description: Product name.
          example: Iphone 14
        category_plu_id:
          type: string
          readOnly: false
          description: Product category ID from Global product list (consist cleaned data - unique ID of every category across all POS systems).
          example: 8fbea1c1ea8edda5e67f27Q
        vat_rate:
          type: number
          format: float
          readOnly: false
          description: VAT rate of the item.
          example: 20
        quantity:
          type: number
          format: float
          readOnly: false
          description: Quantity of product.
          example: 2
        paid_amount:
          type: number
          format: float
          readOnly: false
          description: Real money value (unit price * quantity) paid by the customer (The value for a pharmaceutical client could have a copayment for drug prescription or money value of drugs not covered by an insurer).
          example: 1200
        price:
          type: number
          format: float
          readOnly: false
          description: 'Value of parameter "paid_amount". In the case of a pharmaceutical client, add to the value of "paid_amount" a value of money covered by the customer  health insurance.'
          example: 1200
        bill_item_id:
          type: string
          readOnly: false
          description: ID of the bill item.
          example: 6fd73167342d6899c415320
        loyalty_off:
          type: boolean
          enum:
            - true
            - false
          readOnly: false
          description: 'Switch off all loyalty benefits (points, discounts- instant and campaign prices, vouchers) on the item.'
          example: true
        purchase_item_type_id:
          type: string
          readOnly: false
          description: 'Type of the purchase item from resource [purchase-item-types](#tag/Purchase-item-types).'
          example: 86e05affc7a7abefcd513ab400
        customer_id:
          type: string
          readOnly: false
          description: The ID of the customer.
          example: 8ea2591121e636086a4a9c0992
      required:
        - plu_ids
        - plu_name
        - vat_rate
        - quantity
        - paid_amount
        - price
        - bill_item_id
        - loyalty_off
        - purchase_item_type_id
    Booking:
      type: object
      description: Booking structure.
      properties:
        booking_id:
          type: string
          readOnly: true
          description: The unique ID of the booking.
          example: 83d0ce2b5a1bc0dc8da01b13e7
        customer_id:
          type: string
          description: The unique ID of the customer that created the booking.
          example: 85bc5819e09dab95437552ce79
        booking_items:
          type: array
          items:
            $ref: '#/components/schemas/BookingItem'
          description: List of the booking items. Included in response of GET API call only if query parameter `add_booking_items` is `true`.
        booking_status:
          type: string
          readOnly: false
          description: 'Current status of the booking from resource [booking-statuses](#tag/Booking-statuses). If not set, CareCloud uses default booking status.'
          example: 81eaeea13b8984a169c490a325
        utm:
          type: object
          $ref: '#/components/schemas/UTM'
          readOnly: false
          description: UTM structure for data from a campaign.
        data:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
            - type: object
          readOnly: false
          description: Additional data of the booking. Serialized data in JSON.
          example: '"{\"size\":20, \"unit\": \"cm\"}"'
        created_at:
          type: string
          readOnly: false
          description: 'Date and time of the booking. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-08-11 11:15:33'
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-08-11 11:15:33'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the booking record.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - booking_items
        - created_at
    BookingItem:
      type: object
      description: Booking item structure.
      properties:
        booking_item_id:
          type: string
          description: The unique ID of the booking item.
          example: 8fd73167342d0689c4c015320
        customer_id:
          type: string
          description: The unique ID of the customer.
          example: 8ea6abece4cd0a4ded0a29f093
        time_slot_id:
          type: string
          readOnly: false
          description: The unique ID of the booking time slot.
          example: 88bb88399cc74d81edbe19d684
        booking_ticket:
          $ref: '#/components/schemas/BookingTicket'
        valid_from:
          type: string
          readOnly: true
          description: 'Date and time when time slot starts. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-01-09 22:00:00'
        valid_to:
          type: string
          readOnly: true
          description: 'Date and time when time slot ends. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-01-09 22:30:00'
        capacity_taken:
          type: integer
          readOnly: false
          description: 'How much capacity is taken by the booking item. If not set, value is 1.'
          default: 1
          example: 2
        booking_item_status:
          type: string
          readOnly: false
          description: 'Current status of the booking item from resource [booking-statuses](#tag/Booking-statuses). If not set, CareCloud uses default booking status.'
          example: 86e05affc7a7abefcd513ab400
        additional_properties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRecord'
          readOnly: true
          description: List of additional property records.
        created_at:
          type: string
          readOnly: false
          description: 'Date and time of the booking item. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2017-06-20 16:59:49'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the booking item record.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2013-07-24 21:33:33'
      required:
        - time_slot_id
        - created_at
    BookingTicket:
      type: object
      description: Ticket of the booking item. Structure is filled only when query parameter `add_booking_items` has value `full` or `items-only`.
      properties:
        ticket_id:
          type: string
          readOnly: true
          description: The unique ID of the booking ticket.
          example: 89d88719b8b442de2d11b401a2
        name:
          type: string
          readOnly: false
          description: Name of the booking ticket in language from request header.
          example: Prophecy
        created_at:
          type: string
          readOnly: false
          description: 'Date and time when ticket was created. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-07-26 11:38:22'
        valid_from:
          type: string
          readOnly: false
          description: 'Date and time from when is ticket valid already. *(YYYY-MM-DD HH:MM:SS)*'
          example: null
        valid_to:
          type: string
          readOnly: false
          description: 'Date and time to when is ticket still valid. *(YYYY-MM-DD HH:MM:SS)*'
          example: null
        state:
          type: integer
          enum:
            - 0
            - 1
          readOnly: false
          description: |
            State of the booking ticket.
            *Possible values are: 0 - blocked / 1 - active*
          example: 1
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-09-16 16:14:41'
      required:
        - name
    BookingStatus:
      type: object
      description: Booking status.
      properties:
        booking_status_id:
          type: string
          readOnly: true
          description: The unique ID of the booking status.
          example: 8bf3397ab62d3ffd876fc9ae16
        name:
          type: string
          readOnly: false
          description: Name of the booking status in language from request header.
          example: Pending
        created_at:
          type: string
          readOnly: false
          description: 'Date and time of booking status creation. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-09-14 07:39:08.99493'
        state:
          type: integer
          enum:
            - 0
            - 1
          readOnly: false
          description: |
            State of the booking status.
            *Possible values are: 0 - blocked / 1 - active*
          example: 1
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-09-14 07:39:08.99493'
      required:
        - name
    Campaign:
      type: object
      description: Campaign resource.
      properties:
        idcampaign:
          type: string
          readOnly: true
          description: The unique ID of the campaign.
          example: 8bed991c68a470e7aaeffbf048
        external_id:
          type: string
          readOnly: false
          description: The external ID of the campaign.
          example: 1
        parent_id:
          type: string
          readOnly: false
          description: ID of the parent campaign.
          example: null
        name:
          type: string
          readOnly: false
          description: Name of the campaign.
          example: Standard campaign
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-04-16 18:22:35.052987'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the campaign.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - name
    CampaignProduct:
      type: object
      description: Campaign product structure.
      properties:
        campaign_product_id:
          type: string
          readOnly: true
          description: The unique ID of the campaign product.
          example: 8bed991c68a470e7aaeffbf048
        product_id:
          type: string
          readOnly: false
          description: The unique ID of the product.
          example: 8ad4ff4db9d628f2c8cb6181a4
        currency_id:
          type: string
          readOnly: false
          description: The unique ID of the currency.
          example: 8bed991c68a470e7aaeffbf048
        campaign_id:
          type: string
          readOnly: false
          description: The unique ID of the campaign.
          example: 8ad8b2b701199684f1222961d6
        value:
          type: number
          format: float
          readOnly: false
          description: Value of the product.
          example: 50
        value_type_id:
          type: integer
          enum:
            - 1
            - 2
          readOnly: false
          description: 'Type of value (1 - percentage discount value, 2 - final price).'
          example: 1
        valid_from:
          type: string
          readOnly: false
          description: 'Validity of the campaign product from the date. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-04-16 00:00:00'
        valid_to:
          type: string
          readOnly: false
          description: 'Validity of the campaign product to the date. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-05-16 23:59:59'
        display_in:
          type: array
          items:
            type: string
          readOnly: false
          description: List of possible display places.
          example:
            - mapi
        type_id:
          type: string
          readOnly: false
          description: Type of a campaign product.
          example: 86e05affc7a7abefcd513ab400
        presentation_data:
          type: object
          $ref: '#/components/schemas/CampaignPresentationData'
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-04-16 19:02:22'
        state:
          type: integer
          enum:
            - 0
            - 1
          readOnly: true
          description: |
            State of the card.
            *Possible values are: 0 - blocked / 1 - active*
          example: 1
      required:
        - product_id
        - currency_id
        - campaign_id
        - value
        - value_type_id
        - valid_from
        - valid_to
        - type_id
        - presentation_data
    CampaignPresentationData:
      type: object
      description: Campaign presentation data structure.
      properties:
        name:
          type: string
          readOnly: false
          description: Name of the product.
          example: T-shirt 10% off
        subtitle:
          type: string
          readOnly: false
          description: Text of the campaign product subtitle.
          example: Discount only in following week
        note:
          type: string
          readOnly: false
          description: Text of the campaign product note.
          example: This offer is limited
        description:
          type: string
          readOnly: false
          description: Text of the campaign product description.
          example: null
        image_url:
          type: string
          readOnly: false
          description: URL address of the image.
          example: 'https://developers.crmcarecloud.com/img/customer_enterprise.png'
      required:
        - name
    CampaignProductStoreRecord:
      type: object
      description: Campaign product store record.
      properties:
        campaign_product_store_record_id:
          type: string
          readOnly: true
          description: The unique ID of the campaign product store record.
          example: 8bed991c68a470e7aaeffbf048
        store_id:
          type: string
          readOnly: false
          description: The unique ID of the store.
          example: 8bed991c68a470e7aaeffbf048
        campaign_product_id:
          type: string
          readOnly: false
          description: The unique ID of the campaign product.
          example: 81eaeea13b8984a169c490a325
      required:
        - store_id
        - campaign_product_id
    Card:
      type: object
      description: Card resource.
      properties:
        card_id:
          type: string
          readOnly: true
          description: The unique ID of the card.
          example: 81eaeea13b8984a169c490a325
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the card holder.
          example: 8ea2591121e636086a4a9c0992
        card_type_id:
          type: string
          readOnly: false
          description: The unique ID of the card type.
          example: 8bed991c68a470e7aaeffbf048
        card_number:
          type: string
          readOnly: false
          description: Card number.
          example: '1000000000016'
        secondary_card_number:
          type: string
          readOnly: false
          description: Secondary card number represents alternative card number of the card.
          example: AXNFUAIOHFDSNKA
        valid_from:
          type: string
          readOnly: false
          description: 'Card validity from. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-04-14'
        valid_to:
          type: string
          readOnly: false
          description: 'Card validity to. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2059-07-05'
        store_id:
          type: string
          readOnly: false
          description: 'The unique ID of the store, where the card was assigned to a customer.'
          example: null
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2019-07-15 17:26:34'
        state:
          type: integer
          enum:
            - 0
            - 1
          readOnly: false
          description: |
            State of the card.
            *Possible values are: 0 - blocked / 1 - active*
          example: 1
      required:
        - card_type_id
        - card_number
        - state
    CardType:
      type: object
      description: CardType resource.
      properties:
        card_type_id:
          type: string
          readOnly: true
          description: The unique ID of the card type.
          example: 8bd48117006496e0b1788109b8
        name:
          type: string
          readOnly: false
          description: Name of the card type.
          example: Postman test type
        prefix:
          type: string
          readOnly: false
          description: Prefix of the specific card type cards.
          example: 092
      required:
        - name
        - prefix
    CashierMessage:
      type: object
      description: Cashier message structure.
      properties:
        text:
          type: string
          readOnly: true
          description: Text of the message.
          example: Please apply discounts
    ChartPointData:
      type: object
      description: Chart point data values.
      properties:
        x_axis_value:
          type: string
          readOnly: true
          description: The X-axis value
          example: '7'
        y_axis_value:
          type: string
          readOnly: false
          description: The Y-axis value
          example: '32'
    CommunicationChannel:
      type: object
      description: Communication channel resource.
      properties:
        communication_channel_id:
          type: string
          readOnly: true
          description: The unique ID of the communication channel.
          example: 86e05affc7a7abefcd513ab400
        name:
          type: string
          readOnly: false
          description: Name of the communication channel.
          example: Email
        text_id:
          type: string
          readOnly: false
          description: Text representation of communication channel ID.
          example: email
      required:
        - currency_id
        - name
        - text_id
    Country:
      type: object
      description: Country resource.
      properties:
        country_id:
          type: string
          description: The unique ID of the country as ISO code.
          example: cz
        name:
          type: string
          description: Name of the country. Language depends on the `Accept-Language` header from the request.
          example: Czechia
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          description: |
            State of the country.
            *Possible values are: 0 - deleted / 1- active / 2 - non active*
          example: 1
    Credit:
      type: object
      description: A customer credit.
      properties:
        credit_id:
          type: string
          readOnly: true
          description: The unique ID of the credit record.
          example: 8bed991c68a470e7aaeffbf048
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the customer.
          example: 8ea2591121e636086a4a9c0992
        assigned_credits:
          type: number
          format: float
          readOnly: true
          description: The number of earned credits in the record.
          example: 1000
        available_credits:
          type: number
          format: float
          readOnly: true
          description: The number of available credits from the record.
          example: 1000
        credit_type_id:
          type: string
          readOnly: false
          description: Type of the credit record.
          example: 86e05affc7a7abefcd513ab400
        partner_id:
          type: string
          readOnly: false
          description: The unique ID of the partner company.
          example: 86e05affc7a7abefcd513ab400
        valid_to:
          type: string
          readOnly: false
          description: 'Date and time of the credit record validity to. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2027-12-12 00:00:00'
        currency_id:
          type: string
          readOnly: true
          description: The unique ID of the currency.
          example: 86e05affc7a7abefcd513ab400
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the credit record.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - customer_id
        - credit_type_id
        - partner_id
    CreditHistoryRecord:
      type: object
      description: Credit history record.
      properties:
        customer_id:
          type: string
          readOnly: true
          description: The unique ID of the customer.
          example: 8ea2591121e636086a4a9c0992
        amount:
          type: number
          format: float
          readOnly: true
          description: The number of credits used in the credit operation record.
          example: 1000
        credit_operation_type:
          type: string
          readOnly: true
          description: Type of the credit operation record.
          example: Manually added credits
        credit_operation_note:
          type: string
          readOnly: true
          description: Note of the credit operation record.
          example: Addition
        partner_id:
          type: string
          readOnly: false
          description: The unique ID of the partner company.
          example: 86e05affc7a7abefcd513ab400
        currency_id:
          type: string
          readOnly: true
          description: The unique ID of the currency.
          example: 86e05affc7a7abefcd513ab400
        store_id:
          type: string
          readOnly: true
          description: The unique ID of the store in CareCloud.
          example: 81eaeea13b8984a169c490a325
        credit_history_record_time:
          type: string
          readOnly: true
          description: 'Date and time of the credit record from the credit history. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2023-03-07 09:53:55'
    CreditType:
      type: object
      description: Credits reservation resource.
      properties:
        credit_type_id:
          type: string
          readOnly: true
          description: The unique ID of the credit type.
          example: 86e05affc7a7abefcd513ab400
        name:
          type: string
          readOnly: true
          description: Name of the credit type.
          example: Addition
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-04-05 07:46:44.190403'
    CreditWalletSummary:
      type: object
      description: Customer's credit in the specific currency.
      properties:
        currency_id:
          type: string
          readOnly: true
          description: 'The unique ID of the currency from the API resource [GET /currencies](#tag/Currencies).'
          example: 86e05affc7a7abefcd513ab400
        earned_credits:
          type: number
          format: float
          description: Amount of earned credits in time interval.
          example: 100
        redeemed_credits:
          type: number
          format: float
          description: Amount of redeemed credits in time interval.
          example: 20.5
        available_credits:
          type: number
          format: float
          description: Amount of available credits in the moment. Time interval has no influence to the result.
          example: 79.5
    Currency:
      type: object
      description: Currency resource.
      properties:
        currency_id:
          type: string
          readOnly: true
          description: The unique ID of the currency.
          example: 86e05affc7a7abefcd513ab400
        name:
          type: string
          readOnly: false
          description: Name of the currency.
          example: CZK
        code:
          type: string
          readOnly: false
          description: International ISO code of the currency.
          example: CZK
      required:
        - currency_id
        - name
        - code
    CustomAgreements:
      type: object
      description: Custom agreements.
      properties:
        agreement_id:
          type: string
          description: 'The unique ID of the agreement in CareCloud from [agreements](#tag/Agreements) resource.'
          example: 8fd73167342d06899c4c015320
        agreement_value:
          type: integer
          enum:
            - 0
            - 1
            - 2
          description: 'Value of the specific agreement. *Possible values: 0 - no, consent canceled / 1 - yes, consent given / 2 - consent not set*'
          example: 2
      required:
        - agreement_id
        - agreement_value
    Customer:
      type: object
      description: Basic information about a customer.
      properties:
        customer_id:
          type: string
          readOnly: true
          description: The unique ID of the customer.
          example: 8ea2591121e636086a4a9c0992
        personal_information:
          type: object
          $ref: '#/components/schemas/PersonalInformation'
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2019-06-23 11:47:22'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: 'State of the customer. *Possible values are: 0 - deleted / 1 - active / 2 - non active*'
          example: 1
      required:
        - personal_information
    CustomerResult:
      type: object
      description: Search results for the strict mode.
      properties:
        customer_id:
          type: string
          readOnly: true
          description: The unique ID of the customer.
          example: 84b9167cc2f01ff007d98e1633
        match:
          type: integer
          readOnly: true
          description: Percentage of match of the search parameters.
          example: 100
    CustomerRelationType:
      type: object
      description: Customer relation type structure.
      properties:
        customer_relation_type_id:
          type: string
          readOnly: true
          description: The unique ID of the customer relation type.
          example: 8bed991c68a470e7aaeffbf048
        name:
          type: string
          readOnly: false
          description: Name of the customer relation type
          example: Family account
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2019-05-16 13:35:40'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the customer relation type.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - name
    CustomerSearchResult:
      type: object
      description: Result of the search.
      properties:
        strict:
          type: array
          description: Search results for the strict mode.
          items:
            $ref: '#/components/schemas/CustomerResult'
    CustomerSource:
      type: object
      description: |
        Customer source structure.

        *Structure is dedicated for resource customer-sources.*
      properties:
        customer_source_id:
          type: string
          readOnly: false
          description: The unique ID of the customer source.
          example: 86e05affc7a7abefcd513ab400
        name:
          type: string
          readOnly: false
          description: Name of the customer source.
          example: Webshop registration
        customer_source_text_id:
          type: string
          readOnly: true
          description: It represents unique readable ID of the customer source.
          example: webshop_registration
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the customer source.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2019-01-08 18:34:07'
      required:
        - customer_source_id
        - name
    CustomerSourceRecord:
      type: object
      description: Customer source.
      properties:
        customer_source_record_id:
          type: string
          description: 'The unique ID of the customer source record. The customer sources are available in [customer-sources](https://carecloud.readme.io/reference/getcustomersources) resource'
          readOnly: true
          example: 8fd73167342d06899c4c015320
        customer_source_id:
          type: string
          description: The unique ID of the customer source. It identifies the system where the customer belongs or the customer account was created.
          readOnly: false
          example: 86e05affc7a7abefcd513ab400
        customer_id:
          type: string
          readOnly: true
          description: The unique ID of the customer.
          example: 87af991126405bf8e7dfb36045
        external_id:
          type: string
          description: The unique external ID of the customer. It may be ID from the other system.
          readOnly: false
          example: A66854921C
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. (YYYY-MM-DD HH:MM:SS)'
          example: '2019-06-23 11:47:22'
      required:
        - customer_source_id
    Customer-type:
      type: object
      description: Customer type structure.
      properties:
        type_id:
          type: string
          readOnly: true
          description: The unique ID of the customer type.
          example: 86e05affc7a7abefcd513ab400
        name:
          type: string
          readOnly: true
          description: Name of the customer type.
          example: club
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2017-12-01 14:29:41'
    CustomerAddressType:
      type: object
      description: Customer address type structure.
      properties:
        address_type_id:
          type: string
          readOnly: true
          description: The unique ID of the customer address type.
          example: 86e05affc7a7abefcd513ab400
        name:
          type: string
          readOnly: true
          description: Name of the customer address type.
          example: Mailing address
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-07-25 17:57:44.793447'
    AdditionalAddress:
      type: object
      description: Address resource.
      properties:
        additional_address_id:
          type: string
          description: Unique additional address ID.
          readOnly: true
          example: 86e05affc7a7abefcd513ab400
        address_type:
          type: string
          description: Type of the address. Address type is set only for additional customer addresses. Default address in customer structure has no type.
          example: 86e05affc7a7abefcd513ab400
        address:
          type: object
          $ref: '#/components/schemas/Address'
      required:
        - address_type
        - address
    Device:
      type: object
      description: Structure describes the client device or browser.
      properties:
        device_id:
          type: string
          readOnly: false
          description: The unique ID of the client device.
          example: 00000000-89ABCDEF-01234567-89ABCDEF
        device_system:
          type: string
          readOnly: false
          description: Operation system of the device.
          example: OSX
        device_name:
          type: string
          readOnly: false
          description: The name of the device.
          example: Test device
        device_type:
          type: string
          readOnly: false
          description: Type of device by producer (product line).
          example: iPhone
      required:
        - device_id
        - device_system
        - device_name
        - device_type
    DiscountItem:
      type: object
      description: Discount item structure.
      properties:
        discount_code:
          type: string
          readOnly: false
          description: Code of discount (set value “offline” for offline mode discounts).
          example: null
        discount_value:
          type: string
          readOnly: false
          description: Value of discount in the currency of the bill.
          example: null
        discount_percent:
          type: string
          readOnly: false
          description: Discount percentage of the bill.
          example: null
        description:
          type: string
          readOnly: false
          description: Text description of the discount reason.
          example: null
        bill_item_id:
          type: string
          readOnly: false
          description: ID of the related bill item.
          example: 6fd73167342d6899c415320
      required:
        - bill_item_id
    Event:
      type: object
      description: Event resource.
      properties:
        event_id:
          type: string
          readOnly: true
          description: The unique ID of the event.
          example: 82de12eb8b138791e678fd11c3
        event_type_id:
          type: string
          readOnly: false
          description: The unique ID of the event type.
          example: 8bda8a4854394325e2748a5005
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the card holder.
          example: 8ea2591121e636086a4a9c0992
        external_id:
          type: string
          readOnly: false
          description: The unique external ID of the event. It may be ID from other system.
          example: '157613'
        data:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
            - type: object
          readOnly: false
          description: Additional data of the event. Serialized data in JSON.
          example: '{"id_account_history_change":6}'
        created_at:
          type: string
          readOnly: false
          description: 'Date and time of the event. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-04-29 14:51:43'
        secondary_external_id:
          type: string
          readOnly: false
          description: 'Additional external ID of the event. It''s used in case, when differentiation of external_id needed.'
          example: null
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the event type.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
        property_records:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRecord'
          readOnly: false
          description: Additional properties of the event. This parameter contain values only if `include_property_records` is set to true.
      required:
        - event_type_id
        - customer_id
        - external_id
    EventGroup:
      type: object
      description: Event group resource.
      properties:
        event_group_id:
          type: string
          readOnly: false
          description: The unique ID of the event.
          example: 86e05affc7a7abefc513ab4tt0
        name:
          type: string
          readOnly: false
          description: The unique ID of the event type.
          example: Shopping Cart
        text_id:
          type: string
          readOnly: true
          description: Text ID of an event group.
          example: shopping_cart
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the event type.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - event_group_id
    EventType:
      type: object
      description: Event type resource.
      properties:
        event_type_id:
          type: string
          readOnly: false
          description: The unique ID of the event type.
          example: 82d0f9d976dee39aac13dc7ea
        event_group_id:
          type: string
          readOnly: false
          description: ID of the event type group.
          example: 8bed991c68a470eaaeffbf048
        name:
          type: string
          readOnly: false
          description: Name of the event type.
          example: Voucher
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the property.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - event_type_id
        - event_group_id
    ExternalApplication:
      type: object
      description: External application structure.
      properties:
        external_application_id:
          type: string
          readOnly: false
          description: The unique ID of the client external application.
          example: 8bed991c68a470e7aaeffbf048
        name:
          type: string
          readOnly: false
          description: The name of the external application.
          example: Sandbox app
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-07-26 09:46:59.005819'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the external application.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - external_application_id
        - name
    ExternalCode:
      type: object
      description: External code resource.
      properties:
        external_code_type_id:
          type: integer
          readOnly: false
          description: 'The unique ID of the external code type (provided in [GET /product-reservation-external-list-types](https://carecloud.readme.io/reference/getproductreservationexternallisttypes)).'
          example: 86e05affc7a7abefcd513ab400
          default: 86e05affc7a7abefcd513ab400
        value:
          type: string
          readOnly: false
          description: Value of the external code.
          example: '2107225110'
      required:
        - external_code_type_id
        - value
    FinalBill:
      type: object
      description: Final bill structure.
      properties:
        fiscal:
          type: boolean
          enum:
            - true
            - false
          readOnly: false
          description: 'Information, whether it is a fiscal bill.'
          example: true
        purchase_type_id:
          type: string
          readOnly: false
          description: 'Type of the purchase. Values are available in resource [purchase-types](#tag/Purchase-types).'
          example: 86e05affc7a7abefcd513ab400
        canceled:
          type: boolean
          enum:
            - true
            - false
          readOnly: false
          description: 'Information, whether it is the cancellation of the purchase. It is the only parameter that identifies the canceled purchase. All other values are the same as in the original bill. No different values like totalPrice, quantity, paidAmount, and itemPrice are changed nor inverted.'
          example: false
        payment_type:
          type: string
          enum:
            - S
            - A
            - C
            - D
          readOnly: false
          description: |
            Payment type changes the checkout process depending on the value of the parameter you can allow/deny the use of benefits.
            *Possible values are: "S" - with standard setup checkout process allows you to collect points, but isn't possible to apply overall discounts  / "A"- checkout process allows you to collect points and apply overall discounts too / "C" - use credits for payment, allows you to collect points, but isn't possible to apply overall discounts / "D"- will enable you to use overall discounts, but you are not able to collect points with this setup*
          example: A
        payment_recap:
          type: object
          $ref: '#/components/schemas/PaymentRecap'
          readOnly: false
        bill_id:
          type: string
          readOnly: false
          description: 'Identification number of the bill (must be unique in POS, use prefix ''C'' for a canceled bill).'
          example: 8fbea1c1eaa8edd35e7f278
        bill_number:
          type: string
          readOnly: false
          description: 'Alternative identification of the bill. In the case of cancellation, there should be bill_id from the original bill.'
          example: null
        payment_time:
          type: string
          readOnly: false
          description: 'Date and time of bill creation *Possible value: 2016-06-30T15:51:49+02:00*'
          example: '2016-06-30T15:5:49+02:00'
        created_by:
          type: string
          readOnly: false
          description: Name of the user who created a bill.
          example: null
        currency_id:
          type: string
          readOnly: false
          description: 'ID of the currency from resource [currencies](#tag/Currencies).'
          example: 8bed991c68a470e7aaeffbf048
        total_price:
          type: number
          format: float
          readOnly: false
          description: The total price of the bill as a sum of all items.
          example: 700
        utm:
          type: object
          $ref: '#/components/schemas/UTM'
          readOnly: false
          description: UTM structure for data from email campaign.
        bill_items:
          type: array
          items:
            $ref: '#/components/schemas/BillItem'
          readOnly: false
          description: List of bill items.
      required:
        - bill_id
        - payment_time
        - currency_id
        - total_price
        - bill_items
        - fiscal
        - purchase_type_id
        - canceled
        - payment_type
    Flag:
      type: object
      description: Flag resource.
      properties:
        name:
          type: string
          readOnly: false
          description: Name of the flag.
          example: null
        text_id:
          type: string
          readOnly: false
          description: The unique ID of the flag.
          example: null
      required:
        - name
        - text_id
    GPSCoordinates:
      type: object
      description: GPS coordinates of the store.
      properties:
        gps_longitude:
          type: number
          format: float
          readOnly: false
          description: GPS longitude.
          example: 0
        gps_latitude:
          type: number
          format: float
          readOnly: false
          description: GPS latitude.
          example: 0
      required:
        - gps_longitude
        - gps_latitude
    Interest:
      type: object
      description: Interest structure.
      properties:
        interest_id:
          type: string
          readOnly: true
          description: The unique ID of the interest.
          example: 81eaeea13b8984a169c490a325
        name:
          type: string
          readOnly: true
          description: Name of the interest.
          example: Tech
    InterestRecord:
      type: object
      description: Customer interest record.
      properties:
        interest_record_id:
          type: string
          readOnly: true
          description: The unique ID of the interest record.
          example: 81eaeea13b8984a169c490a325
        interest_id:
          type: string
          readOnly: false
          description: The unique ID of the interest.
          example: 81eaeea13b8984a169c490a325
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the customer.
          example: 8ea2591121e636086a4a9c0992
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2023-03-13 17:35:05'
      required:
        - interest_id
        - customer_id
    Language:
      type: object
      description: Language structure.
      properties:
        language_id:
          type: string
          readOnly: true
          description: The unique ID of the language code by ISO 639-1.
          example: cs
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the event type.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2017-03-24 15:29:47'
    Message:
      type: object
      description: Message resource.
      properties:
        message_id:
          type: string
          readOnly: true
          description: The unique ID of the message.
          example: 8fd73167342d06899c4c015320
        status:
          type: integer
          enum:
            - 0
            - 1
            - -1
            - -2
            - 2
            - 4
          readOnly: true
          description: |
            The status ID of the message.
            *Possible values are: 0 - message was not send / 1 - message was send successfully / -1 - message was not received (it was returned) / -2 - message was not received (soft bounce) / 2 - an error occurred while sending / 4 - customer has no agreements (GDPR)*
          example: 1
        message_template_id:
          type: string
          readOnly: false
          description: The unique ID of the message_template.
          example: 8bed991c68a470e7aaeffbf048
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the card holder.
          example: 8ea2591121e636086a4a9c0992
        contact:
          type: string
          readOnly: false
          description: Email address or phone number of customer in case of send message to different contact than customer has in database.
          example: happy_customer@crmcarecloud.com
        title:
          type: string
          readOnly: true
          description: Subject of the email message/ Title of notification message / Preview of the text message . Mandatory only in case of email template.
          example: Newsletter no. 30
        send_time:
          type: string
          readOnly: true
          description: 'Date and time when message was send from server to recipient. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2015-01-05 11:24:12'
        opened_time:
          type: string
          readOnly: true
          description: 'Date and time when message was opened by recipient. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2015-01-05 13:24:12'
        mail_client_user_agent:
          type: string
          readOnly: true
          description: User agent of the mail client application where message was opened.
          example: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Thunderbird/78.11.0'
        mail_client_language:
          type: string
          readOnly: true
          description: Language of the mail client application where message was opened.
          example: 'cs,sk;q=0.8,en-US;q=0.5,en;q=0.3'
        communication_channel_id:
          type: integer
          enum:
            - 1
            - 2
            - 4
            - 5
          readOnly: false
          description: 'The unique ID of the communication channel. *Possible values are: 1 - email / 2- SMS / 4 - PUSH notification (Apple or Google)/ 5 - internal system notification*'
          example: 1
        message_data:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
          readOnly: false
          description: Message data could contains array of customized parameters. They may have influence on message display or add values to message.
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
          readOnly: false
          description: 'List of the attachments for the message. A single attachment has a size limit of 1 MB. File type restrictions: .jpg, .jpeg, .png, .gif, and .pdf.'
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2015-01-05 11:24:12'
      required:
        - message_template_id
        - customer_id
        - communication_channel_id
    MessageDetail:
      type: object
      description: Message detail resource.
      properties:
        plain_text_body:
          type: string
          readOnly: true
          description: Plain text body of the message.
          example: |-
            Text orci lorem, maximus ac tortor at, feugiat libero. Lorem ipsum dolor sit amet, consectetur adipiscing elit. 
            Donec quam augue, gravida vitae imperdiet a, fermentum et est. Sed sit amet sem pharetra, porta ipsum vel, hendrerit diam. 
            Nunc orci lorem, maximus ac tortor at, feugiat vestibulum libero. Sed vestibulum leo at odio varius, ut hendrerit ante viverra.
            Nunc orci lorem, maximus ac tortor at, feugiat vestibulum libero. Sed vestibulum leo at odio varius, ut hendrerit ante viverra.
            Lorem ipsum dolor sit amet libero.
        html_body:
          type: string
          readOnly: true
          description: HTML body of the message.
          example: ''
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentInfo'
          readOnly: true
          description: List of the attachments from the message.
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2015-01-05 14:00:41'
      required:
        - plain_text_body
        - html_body
    MessageTemplate:
      type: object
      description: Message template resource.
      properties:
        message_template_id:
          type: string
          readOnly: true
          description: The unique ID of the message_template.
          example: 8bed991c68a470e7aaeffbf048
        consent_free_template:
          type: boolean
          enum:
            - true
            - false
          readOnly: false
          description: 'If true, customer can receive message without any consent(GDPR, etc.).'
          example: true
        subject:
          type: string
          readOnly: true
          description: Subject of the message template. Mandatory only in case of email template.
          example: CRM & CDP CareCloud password setup
        sender:
          type: string
          readOnly: true
          description: Sender of the message template.
          example: '"CRM & CDP CareCloud"<info@crmcarecloud.com>'
        name:
          type: string
          readOnly: true
          description: Name of the message template.
          example: First CareCloud login
        message_template_group_id:
          type: integer
          enum:
            - 1
            - 2
            - 3
          readOnly: true
          description: 'The unique ID of the message template group. *Possible values are: 1 - newsletter template / 2 - system template (registration message, order summary message, etc.) / 3 - transactional communication (for hotel, traveling,...)*'
          example: 2
        communication_channel_id:
          type: integer
          enum:
            - 1
            - 2
            - 4
            - 5
            - 9
          readOnly: true
          description: 'The unique ID of the communication channel. *Possible values are: 1 - email / 2 - SMS / 4 - PUSH notification (Apple or Google)/ 5 - internal system notification / 9 - Viber messages*'
          example: 1
        template_data:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
          readOnly: false
          description: Template data could contains array of customized parameters. They may have influence on template display or add values to template.
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-11-25 16:57:09'
      required:
        - subject
        - sender
        - name
        - message_template_group_id
        - communication_channel_id
    MoneyValue:
      type: object
      description: Money value in specified currency.
      properties:
        currency_id:
          type: string
          readOnly: true
          description: The unique ID of the currency.
          example: 86e05affc7a7abefcd513ab400
        value:
          type: number
          format: float
          readOnly: true
          description: Money value.
          example: 3472
    OpeningDay:
      type: object
      description: Opening day structure.
      properties:
        day_id:
          type: string
          readOnly: false
          description: The unique ID of the day of the week.
          example: MON
        time_intervals:
          type: array
          items:
            $ref: '#/components/schemas/TimeInterval'
          readOnly: false
          description: List of time Intervals.
      required:
        - day_id
        - time_intervals
    Order:
      type: object
      description: Order resource.
      properties:
        order_id:
          type: string
          readOnly: true
          description: The unique ID of the order.
          example: 80af8a5dcc0702daf336f4de41
        order_number:
          type: string
          readOnly: false
          description: 'External order number. If not set, internal order number will be set.'
          example: A3NKI89NFDS82434B
        customer_id:
          type: string
          readOnly: false
          description: 'The unique ID of the customer, owner of the order.'
          example: 87a6f37e138c1ef18918e747d
        currency_id:
          type: string
          readOnly: false
          description: ID of the currency.
          example: 8bed991c68a470eaaeffbf048
        total_price:
          type: number
          format: float
          readOnly: false
          description: Total price of the order.
          example: 36
        discount_codes:
          type: array
          items:
            type: string
          readOnly: false
          description: Discount codes used in the order.
          example: null
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: false
          description: List of the OrderItems.
        invoicing_data:
          type: object
          $ref: '#/components/schemas/OrderInvoicing'
          readOnly: false
        shipping_data:
          type: object
          $ref: '#/components/schemas/OrderShipping'
          readOnly: false
        customer_note:
          type: string
          readOnly: false
          description: Customer’s note for the merchant.
          example: Have a nice day!
        order_status:
          type: string
          readOnly: true
          description: Text representation of the order status.
          example: New Uncomfirmed
        shipping_date:
          type: string
          readOnly: true
          description: 'Date of the order shipping. If the date is in future, order should be shipped in this date.'
          example: '2019-07-19 17:26:34'
        program_ranking:
          type: integer
          readOnly: true
          description: Rank of order in case of the series of multiple orders.
          example: 4
        payment_status:
          type: string
          readOnly: true
          description: Text representation of the payment status.
          example: Unpaid
        invoice_document_url:
          type: string
          readOnly: true
          description: URL address with the invoice PDF.
          example: 'https://example.crmcarecloud.com/invoices/1c68a470eaaeff'
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2019-07-15 17:26:34'
      required:
        - customer_id
        - currency_id
        - total_price
        - order_items
        - invoicing_data
    OrderInvoicing:
      type: object
      description: Structure of OrderInvoicing. Contains necessary data for invoicing of the order.
      properties:
        payment_id:
          type: string
          readOnly: false
          description: 'The unique ID of the payment type from resource [GET /payment-types](#tag/Payment-types).'
          example: 8bd481170064960b1788109b8
        paid_date:
          type: string
          readOnly: false
          description: 'Date and time of the order payment. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-07-15 13:26:34'
        personal_information:
          type: object
          $ref: '#/components/schemas/PersonalInformation'
      required:
        - payment_id
    OrderItem:
      type: object
      description: Order item resource.
      properties:
        order_item_id:
          type: string
          readOnly: true
          description: The unique ID of the order item.
          example: null
        product_variant_id:
          type: string
          readOnly: false
          description: The unique ID of the web-shop product.
          example: 8fcc724e1514dafb0a70228d3
        customer_id:
          type: string
          readOnly: false
          description: 'The unique ID of the customer, owner of the order item. If not set, customer_id from order will be saved.'
          example: null
        amount:
          type: number
          format: float
          readOnly: false
          description: Amount of products in order item.
          example: 1
        unit_price:
          type: number
          format: float
          readOnly: false
          description: Unit price of the ordered product.
          example: 36
        vat_rate:
          type: number
          format: float
          readOnly: false
          description: The rate of the VAT of the ordered product.
          example: 19
      required:
        - product_variant_id
        - amount
        - unit_price
        - vat_rate
    OrderShipping:
      type: object
      description: Structure of OrderShipping. Contains necessary data for shipping of the order.
      properties:
        shipping_id:
          type: string
          readOnly: false
          description: The unique ID of the shipping.
          example: 81eaeea13b8984a69c490a325
        contact_firstname:
          type: string
          readOnly: false
          description: First name of the contact for shipping.
          example: John
        contact_lastname:
          type: string
          readOnly: false
          description: Last name of the contact for shipping.
          example: Smith
        phone:
          type: string
          readOnly: false
          description: Phone number of the contact with international prefix (420000000).
          example: '38612345678'
        address:
          type: object
          $ref: '#/components/schemas/Address'
      required:
        - shipping_id
    Parameter:
      type: object
      description: Parameter resource.
      properties:
        parameter_name:
          type: string
          readOnly: false
          description: Name of the parameter.
          example: null
        value:
          type: string
          readOnly: false
          description: Value of the parameter.
          example: null
      required:
        - parameter_name
        - value
    Partner:
      type: object
      description: Partner resource.
      properties:
        partner_id:
          type: string
          readOnly: true
          description: The unique ID of the company.
          example: 86e05affc7a7abefcd513ab400
        name:
          type: string
          readOnly: false
          description: Name of the company.
          example: Demo
        address:
          type: object
          $ref: '#/components/schemas/Address'
          description: Address of the company.
        registration_id:
          type: string
          readOnly: false
          description: Company registration number. National Registration unique ID of the company.
          example: '123456789'
        vat_id:
          type: string
          readOnly: false
          description: VAT registration number. Value Added Tax unique ID of the company.
          example: CZ123456789
        email:
          type: string
          readOnly: false
          description: Email of the company.
          example: happy_user@crmcarecloud.com
        phone:
          type: string
          readOnly: false
          description: Phone number of the company with international prefix (420000000).
          example: '420000000'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: false
          description: |
            State of the partner.
            *Possible values are: 0 - deleted / 1- active *
          example: 1
      required:
        - name
    PartnerRecord:
      type: object
      description: Partner record.
      properties:
        partner_record_id:
          type: string
          readOnly: true
          description: The unique ID of the partner record.
          example: 88bd53f8ac5f3b595d6bc106a4
        partner_id:
          type: string
          readOnly: false
          description: The unique ID of the partner.
          example: 86e05affc7a7abefcd513ab400
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: null
      required:
        - partner_id
    PaymentRecap:
      type: object
      description: Alternative payment methods summary.
      properties:
        credit_points:
          type: number
          format: float
          readOnly: false
          description: Amount of the points used for payment of the purchase.
          example: 7
        amount_for_credit:
          type: number
          format: float
          readOnly: false
          description: Amount of the credits used for payment of the purchase.
          example: 4.2
        vouchers:
          type: array
          items:
            $ref: '#/components/schemas/PaymentVoucher'
          readOnly: false
          description: List of used vouchers/rewards for the payment of purchases.
        recommended_discounts:
          type: array
          items:
            $ref: '#/components/schemas/DiscountItem'
          readOnly: false
          description: List of applied discounts where the service did not use the voucher/reward.
    PaymentType:
      type: object
      properties:
        payment_type_id:
          type: string
          readOnly: true
          description: The unique ID of the payment type in CareCloud.
          example: 81eaeea13b8984a169c490a325
        name:
          type: string
          readOnly: true
          description: Name of the payment type in CareCloud.
          example: Google Pay
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. (YYYY-MM-DD HH:MM:SS)'
          example: '2018-05-07 14:26:19.215774'
    PaymentVoucher:
      type: object
      description: Payment voucher structure.
      properties:
        code:
          type: string
          readOnly: false
          description: Code of a reward or a voucher used in the purchase.
          example: PTV123
        name:
          type: string
          readOnly: false
          description: Name of the reward.
          example: 10% off your first purchase
        discount_value:
          type: number
          format: float
          readOnly: false
          description: Value of discount in the currency of the purchase.
          example: 70
        discount_percent:
          type: number
          format: float
          readOnly: false
          description: Value of discount in percent.
          example: 10
        bill_item_id:
          type: string
          readOnly: false
          description: ID of the related bill item.
          example: 6fd73167342d6899c415320
    PersonalInformation:
      type: object
      description: Personal information of the customer.
      properties:
        salutation:
          type: string
          readOnly: false
          description: 'Customer''s salutation. If it is not set in POST or PUT calls, it will be generated automatically.'
          example: Dear Mr. Smith
        gender:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
          readOnly: false
          description: 'Gender of the customer *Possible values: 1 - Male / 2 - Female / 3 - Miss / 4 - Private / 5 - Other *'
          example: 1
        first_name:
          type: string
          readOnly: false
          description: First name of the customer.
          example: John
        last_name:
          type: string
          readOnly: false
          description: Last name of the customer.
          example: Smith
        pre_nominals:
          type: string
          readOnly: false
          description: 'Academic degrees, academic titles, other titles of customer placed before name.'
          example: Dr.
        post_nominals:
          type: string
          readOnly: false
          description: 'Academic degrees, academic titles, other titles of customer placed after name.'
          example: Ph.D
        birthdate:
          type: string
          format: date
          readOnly: false
          description: Customer's date of birth. *(YYYY-MM-DD)*
          example: '1985-02-12'
        email:
          type: string
          pattern: '^[-a-z0-9!#$%&\''*+\\/=?^_`{|}~]+(\\.[-a-z0-9!#$%&\''*+\\/=?^_`{|}~]+)*@([a-z0-9]([-a-z0-9]{0,61}[a-z0-9])?\\.)+[a-z0-9]([-a-z0-9]{0,61}[a-z0-9])$'
          readOnly: false
          description: Email of the customer.
          example: happy_customer@crmcarecloud.com
        phone:
          type: string
          pattern: '^[1-9][0-9]*$'
          readOnly: false
          description: Phone number of the customer with international prefix (420000000000).
          example: '420523828931'
        language_id:
          type: string
          readOnly: false
          description: The unique ID of the language by ISO 639-1 code.
          example: en
        store_id:
          type: string
          readOnly: false
          description: 'The unique ID of the original customer account store of registration. In case of the customer update, the request cant delete the parameter''s value. Only updated.'
          example: 8bed991c68a4
        photo_url:
          type: string
          readOnly: true
          description: 'URL address of the customer photo. If customer has no photo, this parameter is not send.'
          example: null
        address:
          type: object
          $ref: '#/components/schemas/Address'
        agreement:
          type: object
          $ref: '#/components/schemas/Agreement'
      required:
        - language_id
    PluId:
      type: object
      description: PLU Id structure.
      properties:
        list_code:
          type: string
          readOnly: false
          description: 'Code of the particular product list (basic is code of Global product list (consist cleaned data - unique ID of every product across all POS systems)). For example, “GLOBAL”, “SKU”, “PLU”, etc.'
          example: GLOBAL
        code:
          type: string
          readOnly: false
          description: Code of product from the product list (basic is Product ID from Global product list (consist cleaned data - unique ID of every product across all POS systems)).
          example: abc
      required:
        - list_code
        - code
    Point:
      type: object
      description: Customer point record.
      properties:
        point_id:
          type: string
          readOnly: true
          description: The unique ID of the point record.
          example: 8bd48117006496e0b1788109b8
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the customer.
          example: 87af991126405bf8e7dfb36045
        assigned_points:
          type: number
          format: float
          readOnly: true
          description: The number of earned points.
          example: 50
        available_points:
          type: number
          format: float
          readOnly: true
          description: The number of points available actually taking into account the eventual points redemption.
          example: 700
        point_type_id:
          type: string
          readOnly: false
          description: Type of the point record.
          example: 81eaeea13b8984a169c490a325
        partner_id:
          type: string
          readOnly: false
          description: The unique ID of the partner company.
          example: 86e05affc7a7abefcd513ab400
        valid_to:
          type: string
          readOnly: false
          description: 'Date and time of the point record validity to. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2023-09-16 23:59:59'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the point record.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
        created_at:
          type: string
          readOnly: false
          description: 'Date and time of point record creation. *Possible value: 2016-06-30T15:51:49+02:00*'
          example: '2016-06-30T15:5:49+02:00'
        note:
          type: string
          readOnly: false
          description: Note for the new point record.
          example: Birthdate point reward
      required:
        - customer_id
        - point_type_id
        - partner_id
    PointHistoryRecord:
      type: object
      description: Point history record.
      properties:
        customer_id:
          type: string
          readOnly: true
          description: The unique ID of the customer.
          example: 87af991126405bf8e7dfb36045
        amount:
          type: number
          format: float
          readOnly: true
          description: The number of points used in the point operation record.
          example: 50
        point_operation_type:
          type: string
          readOnly: true
          description: Type of the point operation record.
          example: Points addition
        point_operation_note:
          type: string
          readOnly: true
          description: Note of the point operation record.
          example: Manual rewards points for the product purchase collection
        point_type_id:
          type: string
          readOnly: false
          description: Type of the point record.
          example: 81eaeea13b8984a169c490a325
        partner_id:
          type: string
          readOnly: false
          description: The unique ID of the partner company.
          example: 86e05affc7a7abefcd513ab400
        store_id:
          type: string
          readOnly: true
          description: The unique ID of the store in CareCloud.
          example: 86e05affc7a7abefcd513ab400
        point_history_record_time:
          type: string
          readOnly: true
          description: 'Date and time of the point record from the point history. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-09-16 15:33:11'
        extended_data:
          type: string
          format: json
          readOnly: true
          description: 'Extended data are related to the point history as details about the purchase, point expiration, and others. Several parameters depend on the type of point operation.'
          example: '{"date_of_points_expiration": null, "external_purchase_id": "97YDFFGIDF78T0Q3", "purchase_value": 23.5}'
    PointReservation:
      type: object
      description: Points reservation resource.
      properties:
        points_reservation_id:
          type: string
          readOnly: true
          description: The unique ID of the point reservation record.
          example: 8fd73167342d06899c4c015320
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the customer.
          example: 8ea2591121e636086a4a9c0992
        external_id:
          type: string
          readOnly: false
          description: The external unique ID of the product brand.
          example: '123459'
        quantity:
          type: number
          format: float
          readOnly: false
          description: The number of reserved points.
          example: 10
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the point record.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active(expired)*
          example: 1
        expiration:
          type: string
          readOnly: false
          description: 'Date and time of the point reservation expiration. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2023-10-31 00:00:00'
      required:
        - customer_id
        - external_id
        - quantity
        - partner_id
    PointType:
      type: object
      description: Points reservation resource.
      properties:
        point_type_id:
          type: string
          readOnly: true
          description: The unique ID of the point type.
          example: 86e05affc7a7abefcd513ab400
        name:
          type: string
          readOnly: true
          description: Name of the point type.
          example: Rewards points earned for the product purchase
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-04-16 13:47:53'
    Price:
      type: object
      description: Price structure.
      properties:
        currency_id:
          type: string
          description: The unique ID of the currency.
          example: 86e05affc7a7abefcd513ab400
        value:
          type: number
          format: float
          description: Price of the product
          example: 650
      required:
        - currency_id
        - value
    Product:
      type: object
      description: Product resource.
      properties:
        product_id:
          type: string
          readOnly: true
          description: The unique ID of the product.
          example: 85d6598db0bf3f62afd5db8507
        name:
          type: string
          readOnly: false
          description: Name of the product.
          example: Google phone 1
        code:
          type: string
          readOnly: false
          description: Code of the product.
          example: '649'
        external_id:
          type: string
          readOnly: false
          description: The external unique ID of the product. This parameter is deprecated. Please use parameter `plu_ids`.
          example: NKBD7TB
          deprecated: true
        plu_ids:
          type: array
          items:
            $ref: '#/components/schemas/PluId'
          readOnly: false
          description: An array of all available pluIds from the particular product lists (default is Product ID from Global product list (consist cleaned data - unique ID of every product across all POS systems)).
        product_group_id:
          type: string
          readOnly: false
          description: The unique ID of the product group.
          example: 82de12eb8b138791e678fd11c3
        product_brand_id:
          type: string
          readOnly: false
          description: The unique ID of the product brand.
          example: 82db62087b0f79a6e14e5747e7
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
        additional_properties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRecord'
          readOnly: false
          description: List of additional properties.
        image_urls:
          type: array
          items:
            type: string
            example: null
          readOnly: true
          description: A list of an image URLs.
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-11-01 13:15:24'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the product.
            *Possible values are: 0 - deleted / 1 - active*
          example: 1
    ProductIdentification:
      type: object
      description: All possible identifications of the product.
      properties:
        product_id:
          type: string
          readOnly: false
          description: The unique CareCloud ID of the product.
          example: 89bdacbffb5c82f2c52cb9ae8f
        plu_ids:
          type: array
          items:
            $ref: '#/components/schemas/PluId'
          readOnly: false
          description: An array of all available pluIds from the particular product lists (default is Product ID from Global product list (consist cleaned data - unique ID of every product across all POS systems)).
    ProductBatch:
      type: object
      description: Product resource for the batch processing.
      properties:
        product_id:
          type: string
          readOnly: true
          description: The unique ID of the product.
          example: 81c14010c101966aefbb4738fc
        name:
          type: string
          readOnly: false
          description: Name of the product.
          example: Custom product N12
        code:
          type: string
          readOnly: false
          description: Code of the product.
          example: '64912'
        plu_ids:
          type: array
          items:
            $ref: '#/components/schemas/PluId'
          readOnly: false
          description: An array of all available pluIDs from the particular product lists (default is Product ID from Global product list (consist cleaned data - unique ID of every product across all POS systems)).
        product_group_id:
          type: string
          readOnly: false
          description: 'The unique ID of the product group. If `product_group_external_id` is also set, both parameters have to represent the same product group.'
          example: 83d1d11ea3884a5d33253fe214
        product_group_external_id:
          type: string
          readOnly: false
          description: 'The unique external ID of the product group. If `product_group_id` is also set, both parameters have to represent the same product group.'
          example: '23'
        product_brand_id:
          type: string
          readOnly: false
          description: 'The unique ID of the product brand. If `product_brand_external_id` is also set, both parameters have to represent the same product brand.'
          example: 82db62087b0f79a6e14e5747e7
        product_brand_external_id:
          type: string
          readOnly: false
          description: 'The unique external ID of the product brand. If `product_brand_id` is also set, both parameters have to represent the same product brand.'
          example: '71'
        store_id:
          type: string
          readOnly: false
          description: The unique ID of the store where the product group is valid. The product group is global if this value is not set.
          example: 83d1d11ea3884a5d33253fe214
        property_records:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRecord'
          readOnly: false
          description: List of an additional properties.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
      required:
        - name
        - plu_ids
    ProductBrand:
      type: object
      description: Product brand resource.
      properties:
        product_brand_id:
          type: string
          readOnly: true
          description: The unique ID of the product brand.
          example: 83d1d11ea3884a5d33253fe214
        name:
          type: string
          readOnly: false
          description: Name of the product brand.
          example: The best brand N5
        external_id:
          type: string
          readOnly: false
          description: The external unique ID of the product brand.
          example: a5d332_5
      required:
        - name
        - external_id
    ProductGroup:
      type: object
      description: Product group resource.
      properties:
        product_group_id:
          type: string
          readOnly: true
          description: The unique ID of the product group.
          example: 8fd73167342d06899c4c015320
        name:
          type: string
          readOnly: false
          description: Name of the product group.
          example: Accessories
        parent_product_group_id:
          type: string
          readOnly: false
          description: 'The unique ID of the parent product group. If `parent_external_id` is also set, both parameters have to represent the same product group.'
          example: 83d1d11ea3884a5d33253fe214
        parent_external_id:
          type: string
          readOnly: false
          description: 'The unique external ID of the parent product group. If `parent_product_group_id` is also set, both parameters have to represent the same product group.'
          example: '678'
        code:
          type: string
          readOnly: false
          description: Code of the product group.
          example: '567829'
        external_id:
          type: string
          readOnly: false
          description: The external unique ID of the product group.
          example: '953'
        store_id:
          type: string
          readOnly: false
          description: The unique ID of the store where the product group is valid. The product group is global if this value is not set.
          example: 83d1d11ea3884a5d33253fe214
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-04-16 15:55:44.33538'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the product group.
            *Possible values are: 0 - deleted / 1 - active*
          example: 1
      required:
        - name
        - external_id
    ProductReservation:
      type: object
      description: |
        Product reservation resource.

        <p class="warning">⚠️Structure has to contain reservation codes or product reservation items</p>
      properties:
        product_reservation_id:
          type: string
          readOnly: true
          description: The unique ID of the product reservation.
          example: 81eaeea13b8984a169c490a325
        customer_id:
          type: string
          readOnly: false
          description: 'The unique ID of the customer, owner of the product reservation.'
          example: 8ea2591121e636086a4a9c0992
        store_id:
          type: string
          readOnly: false
          description: The unique ID of the store tied to the reservation.
          example: 82db62087b0f79a6e14e5747e7
        reservation_codes:
          type: array
          items:
            type: string
          readOnly: true
          description: Reservation codes of the reservation from CareCloud.
          example:
            - 3DBKBHA
        external_reservation_codes:
          type: array
          items:
            $ref: '#/components/schemas/ExternalCode'
          readOnly: false
          description: List of the external reservation codes. Id codes can have different sources. Please get in touch with your account manager for the list of ID sources.
        benefit_codes:
          type: array
          items:
            type: string
          readOnly: false
          description: 'List of the benefit (rewards, vouchers) codes used in a reservation. After the reservation is delivered, all benefits are applied on the customer account.'
          example:
            - PTV116
            - PTV120
        product_reservation_source_id:
          type: string
          readOnly: false
          description: The unique ID of the product reservation source.
          example: 8bed991c68a470e7aaeffbf048
        pickup_date:
          type: string
          readOnly: true
          description: Date of the reservation pickup in the tied store. *(YYYY-MM-DD)*
          example: '2020-04-20'
        customers_note:
          type: string
          readOnly: false
          description: Customer’s note for the merchant.
          example: Please add a gift package
        total_price:
          type: number
          format: float
          readOnly: false
          description: 'Total price of reservation. If currency_id is set, then total_price is mandatory.'
          example: 69
        currency_id:
          type: string
          readOnly: false
          description: 'ID of the currency. If total_price is set, then currency_id is mandatory.'
          example: 8bed991c68a470e7aaeffbf048
        product_reservation_items:
          type: array
          items:
            $ref: '#/components/schemas/ProductReservationItem'
          readOnly: false
          description: List of the Product Reservation Items.
        external_purchase_id:
          type: string
          readOnly: false
          description: The unique external ID of the purchase.
          example: '20231412'
        utm:
          type: object
          $ref: '#/components/schemas/UTM'
          readOnly: false
          description: UTM structure for data from email campaign.
        actual_state:
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 2
            - 4
            - 5
            - 6
            - 7
            - 8
          readOnly: true
          description: |
            Current progress of the product reservation.
            *Possible values: 0 - Canceled / 1 - Entered / 2 - Accepted / 3 - Ready / 4 - Delivered / 5 - In progress / 6 - Not Picked up / 7 - Ordered / 8 - Being solved /*
          example: 5
        reservation_progress_history:
          type: array
          items:
            $ref: '#/components/schemas/ProductReservationProgress'
          readOnly: true
          description: History of the product reservation progress. Product reservation progress is sorted in descending order by time.
        comments:
          type: array
          items:
            $ref: '#/components/schemas/ProductReservationComment'
          readOnly: true
          description: Product reservation comments. Comments are sorted in descending order by time.
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2020-04-20 11:23:35'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the product reservation.
            *Possible values are: 0 - deleted / 1 - active *
          example: 1
      required:
        - customer_id
        - store_id
        - product_reservation_source_id
    ProductReservationItem:
      type: object
      description: External code resource
      properties:
        reservable_product_id:
          type: string
          readOnly: false
          description: The unique ID of the reservable product in CareCloud.
          example: 81eaeea13b8984a169c490a325
        amount:
          type: number
          format: float
          readOnly: false
          description: Number of the reserved products.
          example: 1
        unit_price:
          type: number
          format: float
          readOnly: false
          description: 'Unit price of the reserved product. If vat_rate is set, than unit_price is mandatory.'
          example: 2300
        vat_rate:
          type: number
          format: float
          readOnly: false
          description: 'The rate of the VAT of the reserved product. If unit_price is set, than vat_rate is mandatory.'
          example: 5
      required:
        - reservable_product_id
        - amount
    ProductReservationProgress:
      type: object
      description: Product reservation progress history structure.
      properties:
        reservation_progress_id:
          type: integer
          readOnly: true
          description: ID of the product reservation progress.
          example: 4
        reservation_progress_text:
          type: string
          readOnly: true
          description: String of the product reservation progress.
          example: Delivered
        reservation_progress_time:
          type: string
          readOnly: true
          description: 'Date and time of the change of the product reservation progress. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2012-11-22 20:57:04'
    ProductReservationComment:
      type: object
      description: Product reservation comment structure.
      properties:
        comment_text:
          type: string
          readOnly: true
          description: Text of the product reservation comment.
          example: The customer will pick up the reservation tonight.
        comment_time:
          type: string
          readOnly: true
          description: 'Date and time of the product reservation comment. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2012-11-22 20:57:04'
    ProductReservationSource:
      type: object
      description: Product reservation source resource.
      properties:
        product_reservation_source_id:
          type: string
          readOnly: true
          description: The unique ID of the product reservation source.
          example: 8bed991c68a470e7aaeffbf048
        name:
          type: string
          readOnly: false
          description: Name of the product reservation source in defined language(depends on language in http header of the API request).
          example: E-shop
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2020-09-09 12:32:42.143353'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the product reservation source.
            *Possible values are: 0 - deleted / 1 - active *
          example: 1
    ProductReservationExternalListType:
      type: object
      description: Product reservation external list type structure.
      properties:
        product_reservation_external_list_type_id:
          type: string
          readOnly: true
          description: The unique ID of the external list type.
          example: 86e05affc7a7abefcd513ab400
        name:
          type: string
          readOnly: true
          description: Name of the external list type.
          example: Webshop reservations
    Property:
      type: object
      description: Property structure.
      properties:
        property_id:
          type: string
          readOnly: true
          description: The unique ID of the property.
          example: size
        name:
          type: string
          readOnly: false
          description: Name of the property.
          example: Size
        description:
          type: string
          readOnly: false
          description: User defined description of the property.
          example: size
        data_type:
          type: string
          readOnly: false
          description: 'Data type of the final value. * Possible values: string / boolean / integer / date / timestamp / float / customized data types*'
          example: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/PropertyItem'
          readOnly: false
          description: 'List of possible values. Used for multivalued data types (like enum, multiselect).'
        is_required:
          type: boolean
          enum:
            - true
            - false
          readOnly: false
          description: The settings whether the property is a required parameter of the specific entity.
          example: false
        is_unique:
          type: boolean
          enum:
            - true
            - false
          readOnly: false
          description: The setting whether the property contains a unique value within the specific entity.
          example: false
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2019-06-20 14:48:09'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the property
            *Possible values are: 0 - deleted / 1 - active *
          example: 1
      required:
        - name
        - data_type
        - is_required
        - is_unique
    PropertyItem:
      type: object
      description: Property item structure.
      properties:
        id:
          type: string
          readOnly: true
          description: The unique ID of the property item.
          example: 8fd73167342d0689c4c015320
        name:
          type: string
          readOnly: false
          description: Name of the property item.
          example: '{"en":"evening","cz":"vecer"}'
        resource_record_id:
          type: string
          description: 'The ID of the CareCloud REST API resource record is filled when the property is related directly to the CareCloud API resource (for example resource stores). Usually, the data type of the property determines it.'
          example: 67342d3167342d0689c4c00689c4
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the property item.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
    PropertyRecord:
      type: object
      description: Property record.
      properties:
        property_record_id:
          type: string
          readOnly: true
          description: The unique ID of the property record.
          example: 'docasna_blokace_darce_do:8ea2591121e636086a4a9c0992'
        property_id:
          type: string
          readOnly: false
          description: The unique ID of the property.
          example: docasna_blokace_darce_do
        property_name:
          type: string
          readOnly: true
          description: Name of the property.
          example: 'Property #6'
        property_value:
          oneOf:
            - type: string
            - type: number
            - type: integer
            - type: boolean
            - type: array
              items: {}
            - type: object
          readOnly: false
          description: Value of the property.
          example: '2002-02-02'
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2023-02-02 00:00:00'
      required:
        - property_id
    Purchase:
      type: object
      description: Purchase.
      properties:
        purchase_id:
          type: string
          readOnly: true
          description: The unique ID of the purchase.
          example: 81eaeea13b8984a169c490a325
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the customer.
          example: 8ea2591121e636086a4a9c0992
        store_id:
          type: string
          readOnly: true
          description: The unique ID of the store in CareCloud.
          example: 81eaeea13b8984a169c490a325
        external_purchase_id:
          type: string
          readOnly: true
          description: The external unique ID of the purchase.
          example: D67X202789
        payment_time:
          type: string
          readOnly: true
          description: 'Date and time of the purchase payment. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-02-24 00:00:00'
        items_count:
          type: integer
          readOnly: true
          description: Count of the purchase items.
          example: 1
        purchase_items:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseItem'
          readOnly: true
          description: List of all items of the purchase. Data is returned if query parameter purchase_items_extension has value true in the query string of the request.
        type_id:
          type: string
          readOnly: true
          description: Purchase type.
          example: 86e05affc7a7abefcd513ab400
        total_price:
          type: number
          format: float
          readOnly: true
          description: Total price of the purchase.
          example: 660
        currency_id:
          type: string
          readOnly: true
          description: The unique ID of the currency.
          example: 8bed991c68a470e7aaeffbf048
        card_number:
          type: string
          readOnly: false
          description: Purchasing customer card number.
          example: '1000000000016'
        cashdesk_number:
          type: string
          readOnly: true
          description: Number of the cash-desk
          example: 2a
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-01-17 00:00:00'
      required:
        - customer_id
        - store_id
        - external_purchase_id
        - payment_time
        - items_count
        - type_id
        - total_price
        - currency_id
        - cashdesk_number
    Purchase-item-type:
      type: object
      description: Purchase item type structure.
      properties:
        type_id:
          type: string
          readOnly: true
          description: The unique ID of the purchase item type.
          example: 86e05affc7a7abefcd513ab400
        name:
          type: string
          readOnly: false
          description: Name of the purchase item type.
          example: purchase in store
      required:
        - name
    Purchase-type:
      type: object
      description: Purchase type structure.
      properties:
        type_id:
          type: string
          readOnly: true
          description: The unique ID of the purchase type.
          example: 86e05affc7a7abefcd513ab400
        name:
          type: string
          readOnly: false
          description: Name of the purchase type.
          example: Store purchase
      required:
        - name
    PurchaseConditions:
      type: object
      description: Structure contains purchase conditions of the status record.
      properties:
        keep_status_turnover:
          type: array
          items:
            $ref: '#/components/schemas/QualificationTurnover'
          readOnly: true
          description: Missing turnover to keep current status in every active currency.
        next_status_turnover:
          type: array
          items:
            $ref: '#/components/schemas/QualificationTurnover'
          readOnly: true
          description: Missing turnover to the next status in every active currency.
        keep_status_points:
          type: number
          format: float
          readOnly: false
          description: Amount of points a customer needs to keep current status.
          example: 300
        next_status_points:
          type: number
          format: float
          readOnly: false
          description: Amount of points a customer needs to move to the following status.
          example: 1500
        next_status_id:
          type: string
          readOnly: true
          description: ID of the following status.
          example: 83d1d11ea3884a5d33253fe214
    PurchaseItem:
      type: object
      description: Purchase item.
      properties:
        purchase_item_id:
          type: string
          readOnly: true
          description: The unique ID of the purchase item.
          example: 84b757641df03b1529c2c7f66c
        product_id:
          type: string
          readOnly: false
          description: 'The unique ID of the [product](#tag/Product).'
          example: 89b3b24b405f461c63d8fcaa0c
        external_id:
          type: string
          readOnly: false
          description: Identifier of the purchase item in external system.
          example: null
        purchase_item_type_id:
          type: string
          readOnly: false
          description: Type of the purchase item.
          example: 86e05affc7a7abefcd513ab400
        price:
          type: number
          format: float
          readOnly: false
          description: Price of the purchase item.
          example: 1.99
        amount:
          type: number
          format: float
          readOnly: false
          description: Amount of the purchase item.
          example: null
        vat_rate:
          type: number
          format: float
          readOnly: false
          description: The rate of an item VAT.
          example: null
        additional_properties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRecord'
          readOnly: false
          description: List of additional properties.
      required:
        - product_id
        - purchase_item_type_id
        - price
        - amount
        - vat_rate
    QualificationTurnover:
      type: object
      description: Qualification turnover.
      properties:
        currency_id:
          type: string
          readOnly: false
          description: The unique ID of the currency.
          example: 86e05affc7a7abefcd513ab400
        value:
          type: number
          format: float
          readOnly: false
          description: Value of turnover in the currency
          example: 1500
        due_date:
          type: string
          readOnly: false
          description: 'Date until the turnover conditions need to be fulfilled. If the value is null, the date is unlimited.'
      required:
        - currency_id
        - value
    Recommendation:
      type: object
      description: Recommendation record.
      properties:
        recommendation_id:
          type: string
          readOnly: true
          description: The unique ID of the recommendation.
          example: 8bed991c68a470e7aaeffbf048
        name:
          type: string
          readOnly: false
          description: Name of a the recommendation.
          example: Health recommendation
        brief_description:
          type: string
          readOnly: false
          description: Brief description of the recommendation.
          example: Health recommendation for the customer
        detailed_description:
          type: string
          readOnly: false
          description: Detailed recommendation description.
          example: Detail description of the recommendation
        content:
          type: string
          readOnly: false
          description: Content of the recommendation as a text.
          example: '<h4>Lorem ipsum dolor sit amet, consectetur adipiscing elit. <br><\/h4><h5>Donec nisl libero, finibus malesuada finibus a, sollicitudin eget erat. <br><\/h5><p>Duis vitae pharetra mauris, ID ornare urna. Ut in volutpat ipsum. Aliquam euismod nibh est. Ut maximus risus ID malesuada egestas. Nunc nunc erat, porta ID lectus at, semper pulvinar orci. Maecenas lobortis ex non euismod vulputate. Aliquam erat volutpat. Mauris mauris ligula, eleifend vitae lectus non, hendrerit pharetra leo. <br><\/p><p><br><\/p><ul><li>dsadsaddsadsad<\/li><li>dasdsadsadsad<\/li><li>dsadasdsadsa<br><\/li><\/ul><p><br><\/p><p>Duis vitae pharetra mauris, ID ornare urna. Ut in volutpat ipsum. Aliquam euismod nibh est. Ut maximus risus ID malesuada egestas. Nunc nunc erat, porta ID lectus at, semper pulvinar orci. Maecenas lobortis ex non euismod vulputate. Aliquam erat volutpat. Mauris mauris ligula, eleifend vitae lectus non, hendrerit pharetra leo. <\/p> -a"'
        picture_urls:
          type: array
          items:
            type: string
            example: 'https://<projectURL>/health_recommendations_pictures/img_health_recommendations_16'
          readOnly: false
          description: URL addresses of the pictures of the recommendation.
        web_url:
          type: string
          readOnly: false
          description: URL address of the recommendation website.
          example: ''
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2020-04-16 09:53:08'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the recommendation.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - name
    RecommendedProduct:
      type: object
      description: Recommended product from recommendation engine
      properties:
        product_id:
          type: string
          readOnly: true
          description: The unique ID of the product.
          example: 85d6598db0bf3f62afd5db8507
        plu_ids:
          type: array
          items:
            $ref: '#/components/schemas/PluId'
          readOnly: true
          description: An array of all available pluIds from the particular product lists (default is Product ID from Global product list (consist cleaned data - unique ID of every product across all POS systems)).
    RecommendedReward:
      type: object
      description: Recommended reward structure.
      properties:
        code:
          type: string
          readOnly: true
          description: Code of the reward.
          example: PTV138
        name:
          type: string
          readOnly: true
          description: Name of the reward.
          example: SVK_wine
        reward_priority:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
          readOnly: true
          description: 'Priority of the reward. *1 - highest, 9 - lowest*'
          example: 8
        max_count:
          type: integer
          readOnly: true
          description: Maximum number of the reward applications.
          example: null
        description:
          type: string
          readOnly: true
          description: Reward description.
          example: SVK_wine
        reward_properties:
          type: object
          $ref: '#/components/schemas/RewardProperties'
          readOnly: true
          description: Properties of the reward.
    RelatedCustomer:
      type: object
      description: Basic information about a relation between customers.
      properties:
        customer_relation_id:
          type: string
          readOnly: true
          description: The unique ID of the customer relation.
          example: 81eaeea13b8984a169c490a325
        related_customer_id:
          type: string
          readOnly: false
          description: The unique ID of the related customer.
          example: 8aa68a112c62ad5f84a22a0652
        short_name:
          type: string
          readOnly: true
          description: Short name of the customer.
          example: Peter D.
        customer_relation_type_id:
          type: string
          readOnly: false
          description: The unique ID of the customer relation type.
          example: 8bed991c68a470e7aaeffbf048
        is_leading:
          type: boolean
          readOnly: false
          description: 'Parameter says, if related customer is a leader in their relationship. *Example: Parent is a leader, child is a follower*'
          example: false
        valid_from:
          type: string
          readOnly: true
          description: 'Date and time when customer relation starts. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-01-09 22:00:00'
        valid_to:
          type: string
          readOnly: true
          description: 'Date and time when customer relation ends. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-01-09 22:30:00'
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-06-23 11:47:22'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: 'State of the related customer. *Possible values are: 0 - deleted / 1 - active / 2 - non active*'
          example: 1
      required:
        - related_customer_id
        - customer_relation_type_id
        - is_leading
    Reward:
      type: object
      description: Reward structure.
      properties:
        reward_id:
          type: string
          readOnly: true
          description: The unique ID of the reward.
          example: 83cfee22eabfbbb15a14815e30
        code:
          type: string
          readOnly: false
          description: Code of the reward.
          example: null
        name:
          type: string
          readOnly: false
          description: Name of the reward.
          example: Dessert+Caffe
        note:
          type: string
          readOnly: false
          description: Additional text.
          example: ''
        subtitle:
          type: string
          readOnly: false
          description: Text of subtitle.
          example: null
        points_cost:
          type: number
          format: float
          readOnly: false
          description: 'Number of points, that will be spent by the voucher redemption.'
          example: 200
        valid_time_from:
          type: string
          readOnly: false
          description: 'Time the reward is valid from. *(HH:MM:SS)*'
          example: null
        valid_time_to:
          type: string
          readOnly: false
          description: 'Time the reward is valid to. *(HH:MM:SS)*'
          example: null
        reward_group:
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 4
          readOnly: false
          description: |
            The unique ID of the reward group.
            *Possible values: 0 - party time voucher / 1 - catalog voucher / 2 - campaign voucher/ 4 - simple reward*
          example: 0
        reward_type_id:
          type: string
          readOnly: true
          description: 'The type of reward describes the reward behavior. For example, a Percentage discount, Buy one + get one discounted product, and others.'
          example: 8fdd651ff3f615bcebebad87ce
        store_list:
          type: array
          items:
            $ref: '#/components/schemas/Store'
          readOnly: false
          description: List of the stores where the reward can be redeemed.
        additional_properties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRecord'
          readOnly: false
          description: Additional properties.
        priority:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
          readOnly: false
          description: Priority of the reward. *1 is the highest priority*
          example: null
        image_urls:
          type: array
          items:
            type: string
            example: null
          readOnly: true
          description: List of reward image URL addresses.
        reward_external_url:
          type: string
          readOnly: true
          description: External URL addresses.
          example: null
        has_product_condition:
          type: boolean
          readOnly: true
          description: 'Parameter says, if there is product condition on reward.'
          example: false
        has_group_condition:
          type: boolean
          readOnly: true
          description: 'Parameter says, if there is group condition on reward.'
          example: true
        has_brand_condition:
          type: boolean
          readOnly: true
          description: 'Parameter says, if there is brand condition on reward.'
          example: false
        is_automated:
          type: boolean
          readOnly: false
          description: 'Parameter says, if reward is automated or not. If reward is automated, means it''s applied by rules of the reward. Otherwise have to be applied manually.'
          example: false
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
          description: List of the tags assigned to the reward.
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2013-07-24 21:33:33'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the reward
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - code
        - name
        - reward_group
        - store_list
    RewardProduct:
      allOf:
        - $ref: '#/components/schemas/Product'
        - type: object
        - description: RewardProduct resource.
        - properties:
            minimum_number_of_products:
              type: integer
              readOnly: true
              description: A minimal amount of purchase products to apply reward.
              example: 2
    RewardProperties:
      type: object
      description: Properties of the reward.
      properties:
        image:
          type: string
          format: byte
          readOnly: true
          description: Image of the reward encoded in BASE64.
          example: ''
        valid_time_from:
          type: string
          readOnly: true
          description: 'Time the reward is valid from. *(HH:MM:SS)*'
          example: '00:00:00'
        valid_time_to:
          type: string
          readOnly: true
          description: 'Time the reward is valid to. *(HH:MM:SS)*'
          example: '23:00:00'
    RewardType:
      type: object
      description: Reward type resource.
      properties:
        reward_type_id:
          type: string
          readOnly: true
          description: The unique ID of the reward type.
          example: 8bed991c68a470e7aaeffbf048
        name:
          type: string
          readOnly: false
          description: Name of the reward type.
          example: Product + another for free
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2020-01-14 09:02:13.235667'
      required:
        - name
    SearchResult:
      type: object
      description: Search result resource.
      properties:
        search_result_string:
          type: string
          readOnly: false
          description: Full text search result.
          example: Apple iPhone 12 Pro 128GB
        resource_id:
          type: string
          readOnly: false
          description: The unique ID of the resource as a search result. The unique ID depends on resource where the search action was processed.
          example: 8bed991c68a470e7aaeffbf048
        flags:
          type: array
          items:
            $ref: '#/components/schemas/Flag'
          readOnly: false
          description: List of flags that identify result of the search.
      required:
        - search_result_string
        - resource_id
    Segment:
      type: object
      description: Segment structure.
      properties:
        segment_id:
          type: string
          readOnly: true
          description: The unique ID of the segment.
          example: 82de12eb8b138791e678fd11c3
        name:
          type: string
          readOnly: false
          description: Name of the segment.
          example: VIP customers
        segment_group_id:
          type: string
          readOnly: true
          description: 'Segment group ID from the resource [GET /segment-groups](#tag/SegmentGroups).'
          example: 8bed991c68a470e7aaeffbf048
        segment_picture_url:
          type: string
          readOnly: true
          description: URL of the picture assigned to the segment.
          example: null
        note:
          type: string
          readOnly: false
          description: Short description of the segment.
          example: VIP customers note test
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-06-04 13:25:39'
      required:
        - name
    SegmentGroup:
      type: object
      description: Segment group structure.
      properties:
        segment_group_id:
          type: string
          readOnly: true
          description: The unique ID of the segment group.
          example: 83d1d11ea3884a5d33253fe214
        name:
          type: string
          readOnly: false
          description: Name of the segment group.
          example: RFM Badges
        parent_group_id:
          type: string
          readOnly: true
          description: The unique ID of the parent segment group.
          example: 8bed991c68a470e7aaeffbf048
        note:
          type: string
          readOnly: false
          description: Short description of the segment group.
          example: RFM Badges for tagging customers
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-04-21 08:26:36.058922'
      required:
        - name
    SegmentRecord:
      type: object
      description: Customer segment record.
      properties:
        segment_id:
          type: string
          readOnly: false
          description: The unique ID of the segment.
          example: 83caed4c60c6be7e4392cc25ed
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the customer.
          example: 89ac83ca207a820c62c79bf03a
        created_at:
          type: string
          readOnly: true
          description: 'Date and time when was the segment record created. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-06-20 16:59:49'
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2019-08-29 13:04:45'
      required:
        - segment_id
        - customer_id
        - created_at
    Setup:
      type: object
      description: Setup of a client's device.
      properties:
        language_id:
          type: string
          readOnly: false
          description: 'The unique ID of the language by ISO 639-1 code from [languages resource](#tag/Languages).'
          example: en
        allowed_gps:
          type: boolean
          readOnly: false
          description: Permission to GPS tracking in the mobile application.
          example: true
        allowed_notifications:
          type: boolean
          readOnly: false
          description: Permission to the mobile application notifications.
          example: false
      required:
        - language_id
        - allowed_gps
        - allowed_notifications
    Entrance:
      type: object
      description: Entrance structure.
      properties:
        entrance_id:
          type: string
          readOnly: false
          description: The unique ID of the entrance.
          example: 80a7be2e78aabc1454ca817265
        pos_id:
          readOnly: false
          description: 'ID of POS system for tickets. Required with path parameter entrance ID. *Possible values are: EPOS - 3 / skidata - 6 / axess - 9 / base - 11*'
          type: integer
          enum:
            - 3
            - 6
            - 9
            - 11
        name:
          type: string
          readOnly: true
          description: Name of the entrance.
          example: 1 Dňový Skipas - Akcia 7.1. - 22.1.2015
        customer_id:
          type: string
          readOnly: true
          description: The unique ID of the customer.
          example: null
        resort_name:
          type: string
          readOnly: true
          description: Name of the resort where is an entrance charged.
          example: null
        customer_category_name:
          type: string
          readOnly: true
          description: Name of the customer category.
          example: null
        external_order_id:
          type: string
          readOnly: true
          description: ID of an external order creaded in POS system.
          example: d03df0e0-959a-11e4-a6ce-0050569b002b
        external_entrance_id:
          type: string
          readOnly: true
          description: 'External ID of the entrance. Structure can be different depends of the POS system, that created the entrance.'
          example: 1-1760-61-107788
        external_turnstile_permission_id:
          type: string
          readOnly: true
          description: 'External ID of the permission to open a turnstile. Structure can be different depends of the POS system, that created the permission.'
          example: 1-1760-61-107788
        entrance_type_id:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: false
          description: 'Type of the entrance *Possible values are: season ticket - 0/ one day ticket -1/ multiple day ticket - 2*'
          example: 1
        order_item_id:
          type: string
          readOnly: true
          description: Order ID item represents relation between entrance and order item from carecloud e-shop.
          example: 84947e1aa1ad6982cc8188d15c
        card_id:
          type: string
          readOnly: true
          description: ID of card used for charge entrance.
          example: 8c9fd120242ef646f477a5ed80
        created_at:
          type: string
          readOnly: true
          description: 'Date and time when entrance was created in CareCloud. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2015-01-06 12:54:46'
        cancelled_at:
          type: string
          readOnly: true
          description: 'Date and time when entrance was cancelled in CareCloud. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2015-01-09 22:38:48.088'
        charged_price:
          type: number
          format: float
          readOnly: true
          description: Price charged to POS system.
          example: null
        product_ids:
          type: string
          readOnly: true
          description: The unique ID of the product.
          example: null
        charge_date:
          type: string
          readOnly: true
          description: 'Date and time when entrance will be/was charged to the POS system. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2015-01-10 00:00:00'
        valid_from:
          type: string
          readOnly: true
          description: Date of the first day when customer can use entrance. *(YYYY-MM-DD)*
          example: null
        valid_to:
          type: string
          readOnly: true
          description: Date of the last day when customer can use entrance. *(YYYY-MM-DD)*
          example: null
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2019-08-29 13:04:45'
        state:
          type: integer
          enum:
            - 0
            - 1
          readOnly: false
          description: 'State of the event type. *Possible values are: 0 - cancelled / 1- active*'
          example: 1
      required:
        - entrance_id
        - entrance_type_id
        - card_id
        - state
        - pos_id
    SocialNetworkCredentials:
      type: object
      description: Customer Social network credentials.
      properties:
        social_network_id:
          type: string
          description: The unique ID of the social network.
          readOnly: false
          example: twitter
        social_network_token:
          type: string
          description: Social network customer's token.
          readOnly: false
          example: 38e123j1jedu12d1jnjqwd
      required:
        - social_network_id
        - social_network_token
    Status:
      type: object
      description: Status record.
      properties:
        status_id:
          type: string
          readOnly: true
          description: The unique ID of the status.
          example: 86e05affc7a7abefcd513ab400
        name:
          type: string
          readOnly: false
          description: Name of the status.
          example: Basic
        description:
          type: string
          readOnly: false
          description: Short description of the status.
          example: null
        qualification_period:
          type: integer
          readOnly: false
          description: The period of time (in months) in which it is necessary to qualify for the status based on defined conditions.
          example: 12
        qualification_turnover:
          type: array
          items:
            $ref: '#/components/schemas/QualificationTurnover'
          readOnly: false
          description: The turnover necessary to qualify for the status based on defined conditions.
        qualification_points:
          type: number
          format: float
          readOnly: false
          description: Amount of points necessary to qualify for the status based on defined conditions.
          example: 3000
        previous_status:
          type: string
          readOnly: false
          description: The previous status required to qualify for the next status based on defined conditions. The conditions are defined in parameters qualification_period and qualification_turnover.
          example: null
        next_status:
          type: string
          readOnly: false
          description: ID of the following status.
          example: 83d1d11ea3884a5d33253fe214
        validity_period:
          type: string
          readOnly: false
          description: Definition of the status validity period.
          example: 2 years
        collection_points:
          type: boolean
          enum:
            - true
            - false
          readOnly: false
          description: Enable / disable points collection.
          example: true
        payment_points:
          type: boolean
          enum:
            - true
            - false
          readOnly: false
          description: Enable / disable payment by points.
          example: true
        qualification_type:
          type: integer
          readOnly: false
          description: |
            The status achieving principle.
            *(0 - after creation of the account / 1 - manually / 2 - after the defined conditions are met)*
          example: 1
        discount:
          type: integer
          readOnly: false
          description: The basic loyalty discount.
          example: 0
        overall_discount_on_discounted_purchase_items:
          type: boolean
          enum:
            - true
            - false
          readOnly: true
          description: 'If true, overall discounts can be applied on already discounted purchase items in purchase checkout process.'
          example: true
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2019-01-04 10:31:56'
      required:
        - name
        - description
        - validity_period
        - collection_points
        - payment_points
        - qualification_type
        - discount
    StatusRecord:
      type: object
      description: Customer status record.
      properties:
        status_record_id:
          type: string
          readOnly: true
          description: The unique ID of the status record.
          example: 87ac34ef46f3858a4ece61fb43
        status_id:
          type: string
          readOnly: false
          description: The unique ID of the status.
          example: 86e05affc7a7abefcd513ab400
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the customer.
          example: 89ac83ca207a820c62c79bf03a
        valid_from:
          type: string
          readOnly: true
          description: 'Date and time of the record valid from. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2019-05-29 00:00:00'
        valid_to:
          type: string
          readOnly: true
          description: 'Date and time of the record valid to. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-05-28 23:59:59'
        purchase_conditions:
          $ref: '#/components/schemas/PurchaseConditions'
          readOnly: true
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2020-08-06 10:31:09'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the reward.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - status_id
        - customer_id
    Store:
      type: object
      description: Store structure.
      properties:
        store_id:
          type: string
          readOnly: true
          description: The unique ID of the store in CareCloud.
          example: 81eaeea13b8984a169c490a325
        store_code:
          type: string
          readOnly: false
          description: External code of the store.
          example: 84a169c490a325
        name:
          type: string
          readOnly: false
          description: Name of the store.
          example: Another good store
        store_address:
          $ref: '#/components/schemas/Address'
        contact_email:
          type: string
          readOnly: false
          description: Contact email of the store.
          example: good.store@crmcarecloud.com
        manager_name:
          type: string
          readOnly: false
          description: Name of the store manager.
          example: Andrew Black
        phone_number:
          type: string
          pattern: '^[1-9][0-9]*$'
          readOnly: false
          description: Phone number of the store with international prefix (420000000000).
          example: '420523828931'
        partner_id:
          type: string
          readOnly: false
          description: The unique ID of the partner.
          example: 86e05affc7a7abefcd513ab400
        system_id:
          type: string
          readOnly: false
          description: The external unique ID of the store in external system.
          example: '2375303497'
        gps_coordinates:
          $ref: '#/components/schemas/GPSCoordinates'
        url_address:
          type: string
          readOnly: false
          description: URL address of the store.
          example: www.crmcarecloud.com
        opening:
          type: array
          items:
            $ref: '#/components/schemas/OpeningDay'
          readOnly: false
          description: List of opening days.
        image_urls:
          type: array
          items:
            type: string
            example: null
          readOnly: true
          description: A list of image URL addresses.
        visibility_for_customer:
          type: integer
          enum:
            - 0
            - 1
          readOnly: true
          description: |
            State of the visibility for the customer.
            *Possible values are: 0 - invisible / 1 - visible*
          example: 1
        short_description:
          type: string
          readOnly: false
          description: Short description of the store.
          example: Another good store for buying beverages
        description:
          type: string
          readOnly: false
          description: Long description of the store.
          example: 'Another good store for buying beverages: beer, wine, juice, soda'
        registration_id:
          type: string
          readOnly: false
          description: Legal registration number of the store.
          example: 81eaeea13b89
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2023-03-28 16:12:56'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the store
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - store_id
        - store_code
        - name
        - partner_id
        - system_id
    StoreGroup:
      type: object
      description: Store group resource.
      properties:
        store_group_id:
          type: string
          readOnly: true
          description: The unique ID of the store group.
          example: 8bed991c68a470e7aaeffbf048
        name:
          type: string
          readOnly: false
          description: Name of the store group.
          example: Groceries
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2020-08-24 10:14:00'
      required:
        - name
    StoreGroupRecord:
      type: object
      description: Store group record resource.
      properties:
        store_group_record_id:
          type: string
          readOnly: true
          description: The unique ID of the store group record.
          example: 83d1d11ea3884a5d33253fe214
        store_id:
          type: string
          readOnly: false
          description: The unique ID of the store.
          example: 8fd7316732d06899c4c015320
        store_group_id:
          type: string
          readOnly: false
          description: The unique ID of the store group.
          example: 83d1d11ea3884a5d33253fe214
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2019-02-08 15:35:09'
      required:
        - store_id
        - store_group_id
    Tag:
      type: object
      description: Information about a tag structure.
      properties:
        tag_id:
          type: string
          readOnly: true
          description: The unique ID of the tag.
          example: 838b73aacb5ac326cec4030c80
        name:
          type: string
          readOnly: true
          description: Name of the tag in language from the HTTP header.
          example: Recommended
        text_id:
          type: string
          readOnly: true
          description: Text ID of the tag.
          example: recommended_tag
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the tag.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2019-01-04 10:31:56'
    Task:
      type: object
      description: Task resource.
      properties:
        task_id:
          type: string
          readOnly: true
          description: The unique ID of the task.
          example: 8bed991c68a470e7aaeffbf048
        task_type_id:
          type: string
          readOnly: false
          description: The unique ID of the task type.
          example: 8bed991c68a470e7aaeffbf048
        task_state_id:
          type: string
          readOnly: false
          description: The unique ID of the task state.
          example: 8bed991c68a470e7aaeffbf048
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the customer.
          example: 85aae99524edceec17682e01b9
        task_note:
          type: string
          readOnly: false
          description: Text note of the task.
          example: Could you please send me last invoice to my email?
        task_title:
          type: string
          readOnly: false
          description: Title of the task.
          example: Customer invoice
        task_priority:
          readOnly: false
          description: 'The parameter filters tasks by their priority. *Possible values are: 1 - Critical / 2 - Major / 3 - Normal / 4 - Minor.*'
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
          example: 3
        due_date:
          type: string
          format: date
          readOnly: false
          description: Due date of the task. *(YYYY-MM-DD)*
          example: '2023-04-01'
        created_at:
          type: string
          readOnly: true
          description: 'Date and time when task was created. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2023-03-28 16:59:49'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the event type.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - task_type_id
        - task_state_id
        - customer_id
        - task_title
        - task_priority
    TaskAssignee:
      type: object
      description: Task comment.
      properties:
        task_assignee_id:
          type: string
          readOnly: true
          description: The unique ID of the task assignee.
          example: 81eaeea13b8984a169c490a325
        user_id:
          type: string
          readOnly: false
          description: The unique ID of the assigned user.
          example: 898a6545ed2bfa3f8466d09bc6
        name:
          type: string
          readOnly: true
          description: Name of the assigned user.
          example: Arthur Dent
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last comment change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-06-20 16:59:49'
      required:
        - user_id
    TaskComment:
      type: object
      description: Task comment.
      properties:
        task_comment_id:
          type: string
          readOnly: true
          description: The unique ID of the task comment.
          example: 8bed991c68a470e7aaeffbf048
        task_id:
          type: string
          readOnly: true
          description: The unique ID of the task.
          example: 8bed991c68a470e7aaeffbf048
        text:
          type: string
          readOnly: false
          description: Text of the comment.
          example: Could you please send me last invoice to my email?.
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last comment change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2021-06-20 16:59:49'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the event type.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - task_id
        - text
    TaskState:
      type: object
      description: Task state resource.
      properties:
        task_state_id:
          type: string
          readOnly: true
          description: The unique ID of the task state.
          example: 8bed991c68a470e7aaeffbf048
        name:
          type: string
          readOnly: false
          description: Name of the task state.
          example: Cancelled
        text_id:
          type: string
          readOnly: true
          description: Text ID of the task state.
          example: cancelled
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the event type.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - name
        - text_id
    TaskType:
      type: object
      description: Task type resource.
      properties:
        task_type_id:
          type: string
          readOnly: true
          description: The unique ID of the task type.
          example: 8bed991c68a470e7aaeffbf048
        name:
          type: string
          readOnly: false
          description: Name of the task type.
          example: Customer care
        text_id:
          type: string
          readOnly: true
          description: Text ID of the task type.
          example: customer_care
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the event type.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - name
        - text_id
    TimeInterval:
      type: object
      description: Time interval structure.
      properties:
        from:
          type: string
          readOnly: false
          description: 'Time from. *(HH:MM:SS)*'
          example: '08:00:00'
        to:
          type: string
          readOnly: false
          description: 'Time to. *(HH:MM:SS)*'
          example: '15:30:00'
      required:
        - from
        - to
    TimeSlot:
      type: object
      description: Booking time slot.
      properties:
        time_slot_id:
          type: string
          readOnly: true
          description: The unique ID of the booking time slot.
          example: 89ce2a1b9b01f5c939fb1e20cd
        ticket_id:
          type: string
          readOnly: true
          description: The unique ID of the booking ticket.
          example: 89ce2a1b9b01f5c939fb1e20cd
        valid_from:
          type: string
          readOnly: true
          description: 'Date and time when time slot starts. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-01-09 22:00:00'
        valid_to:
          type: string
          readOnly: true
          description: 'Date and time when time slot ends. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-01-09 22:30:00'
        total_capacity:
          type: integer
          readOnly: true
          description: Total capacity of the time slot.
          example: 50
        free_capacity:
          type: integer
          readOnly: true
          description: Free capacity of the time slot.
          example: 20
        state:
          type: integer
          enum:
            - 0
            - 1
          readOnly: false
          description: |
            State of the booking ticket.
            *Possible values are: 0 - blocked / 1 - active*
          example: 1
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2015-01-05 11:24:12'
      required:
        - ticket_id
        - valid_from
        - valid_to
        - total_capacity
    ThirdPartyRecommendation:
      type: object
      description: Information about a third party recommendation structure.
      properties:
        third_party_recommendation_id:
          type: string
          readOnly: true
          description: The unique ID of the third party recommendation.
          example: 838b73aacb5ac326cec4030c80
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the CareCloud customer. Required only if `products` parameter is not set.
          example: 8ea6abece4cd0a4ded0a29f093
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductIdentification'
          description: Products from the shopping cart to which the recommended product is linked. Structure is required only if the parameter `customer_id` is not set.
        recommended_product:
          description: All recommended products linked to the customer (parameter `customer_id`) or to the shopping cart content (parameter `products`).
          type: object
          $ref: '#/components/schemas/ProductIdentification'
        recommendation_system_id:
          type: string
          readOnly: false
          description: The unique ID of the third party recommendation system from resource recommendation systems.
          example: 89bdac89bdacbfbffb5c82f2c52c
        recommendation_system_dataset_id:
          type: string
          readOnly: false
          description: The unique ID of the third party recommendation system dataset.
          example: 89bffb5c82f2c529bdacbfbff
        score:
          type: number
          format: float
          readOnly: false
          description: Score of the recommendation. Depends of score we will pick products to recommendation. Higher score means better results.
          example: 0.87
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the recommendation.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2019-01-04 10:31:56'
      required:
        - recommended_product_id
        - recommendation_system_id
        - recommendation_system_dataset_id
        - score
    User:
      type: object
      description: Information about logged in user.
      properties:
        user_id:
          type: string
          readOnly: true
          description: The unique ID of the user.
          example: 838b73aacb5ac326cec4030c80
        login:
          type: string
          readOnly: false
          description: Login ID of the user.
          example: happy_user
        first_name:
          type: string
          readOnly: false
          description: First name of the user.
          example: Happy
        last_name:
          type: string
          readOnly: false
          description: Last name of the user.
          example: User
        email:
          type: string
          readOnly: false
          description: Email of the user.
          example: happy_user@crmcarcloud.com
        phone:
          type: string
          readOnly: false
          description: Phone number of the user with international prefix (420000000).
          example: '420523828931'
        user_role_id:
          type: string
          readOnly: true
          description: The unique ID of the user role.
          example: 86e05affc7a7befcd513ab400
        store_id:
          type: string
          readOnly: true
          description: The unique ID of user's original store.
          example: 86e05affc7a7abecd513ab400
      required:
        - login
        - first_name
        - last_name
        - email
    UserRole:
      type: object
      description: User role structure.
      properties:
        user_role_id:
          type: string
          readOnly: true
          description: The unique ID of the user role.
          example: 86e05affc7a7befcd513ab400
        name:
          type: string
          readOnly: true
          description: Name of the user role.
          example: Cashdesk
    UTM:
      type: object
      description: UTM structure for data from email campaign.
      properties:
        utm_source:
          type: string
          readOnly: false
          description: 'Use utm_source to identify a search engine, newsletter name, or other sources. (Example: google).'
          example: google
        utm_medium:
          type: string
          readOnly: false
          description: 'Use utm_medium to identify a medium such as an email or cost-per-click. (Example: cpc).'
          example: cpc
        utm_campaign:
          type: string
          readOnly: false
          description: 'Used for keyword analysis. Use utm_campaign to identify a specific product promotion or strategic campaign. (Example: utm_campaign=spring_sale).'
          example: spring_sale
    Voucher:
      type: object
      description: Customer's voucher.
      properties:
        voucher_id:
          type: string
          readOnly: true
          description: The unique ID of the voucher.
          example: 8bb7345976bbc9ed20e5083dd6
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the customer.
          example: 81ceb8582e2d8dbb7e71b7273b
        store_id:
          type: string
          readOnly: false
          description: The unique ID of the store where voucher was applied.
          example: 86e05affc7a7abefcd513ab400
        code:
          type: string
          readOnly: false
          description: Code of the voucher.
          example: w7TU7KfeE
        value:
          type: number
          format: float
          readOnly: false
          description: Value of the voucher when applied by the purchase.
          example: 3.49
        applied_date:
          type: string
          readOnly: false
          description: 'Voucher application date. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2013-07-24 21:33:13'
        valid_from:
          type: string
          readOnly: false
          description: 'Date from the voucher is valid. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2013-07-10 21:33:13'
        valid_to:
          type: string
          readOnly: false
          description: 'Date to the voucher is valid. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2013-07-30 21:33:13'
        reward_group:
          type: string
          readOnly: true
          description: The unique ID of the reward group.
          example: 83cfee22eabfbbb15a14815e30
        note:
          type: string
          readOnly: false
          description: Voucher's note.
          example: Contact before use
        reward:
          readOnly: true
          $ref: '#/components/schemas/Reward'
        created_at:
          type: string
          readOnly: true
          description: 'Date of the voucher creation. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-07-24 21:33:13'
        last_change:
          type: string
          readOnly: true
          description: 'Date and time of the last change. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2022-07-24 21:33:33'
        state:
          type: integer
          enum:
            - 0
            - 1
            - 2
          readOnly: true
          description: |
            State of the voucher.
            *Possible values are: 0 - deleted / 1 - active / 2 - non active*
          example: 1
      required:
        - customer_id
    VoucherBatch:
      type: object
      description: Voucher resource for the batch processing.
      properties:
        reward_id:
          type: string
          readOnly: false
          description: The unique ID of the reward.
          example: 83cfee22eabfbbb15a14815e30
        customer_id:
          type: string
          readOnly: false
          description: The unique ID of the customer.
          example: 81ceb8582e2d8dbb7e71b7273b
        store_id:
          type: string
          readOnly: false
          description: The unique ID of the store where voucher was applied.
          example: 86e05affc7a7abefcd513ab400
        code:
          type: string
          readOnly: false
          description: Code of the voucher.
          example: w7TU7KfeE
        value:
          type: number
          format: float
          readOnly: false
          description: Value of the voucher when applied by the purchase.
          example: 3.49
        applied_date:
          type: string
          readOnly: false
          description: 'Voucher application date. *(YYYY-MM-DD HH:MM:SS)*'
          example: '2013-07-24 21:33:13'
        valid_from:
          type: string
          readOnly: false
          description: 'Date from the voucher is valid. *(YYYY-MM-DD HH:MM:SS)*'
          example: null
        valid_to:
          type: string
          readOnly: false
          description: 'Date to the voucher is valid. *(YYYY-MM-DD HH:MM:SS)*'
          example: null
        note:
          type: string
          readOnly: false
          description: Voucher's note.
          example: Contact before use
      required:
        - reward_id
        - customer_id
    BasicError:
      type: object
      required:
        - type
        - exception
        - title
        - detail
      properties:
        type:
          type: string
          example: 'about:blank'
        exception:
          type: string
          readOnly: false
          description: Content of the exception.
          example: error_exception
        title:
          type: string
          readOnly: false
          description: The title of the error.
          example: Error title
        detail:
          type: string
          readOnly: false
          description: The details of the error message.
          example: null
  parameters:
    Accept-Language:
      name: Accept-Language
      in: header
      description: The unique ID of the language code by ISO 639-1.
      required: false
      schema:
        type: string
        default: 'cs, en-gb;q=0.8'
    count:
      name: count
      in: query
      description: The number of records to return.
      required: false
      schema:
        type: integer
        default: 100
        minimum: 1
      example: 1
    offset:
      name: offset
      in: query
      description: The number of records from a collection to skip.
      required: false
      schema:
        type: integer
        default: 0
        minimum: 0
      example: 2
    sort_field:
      name: sort_field
      in: query
      description: Name of the sorting parameter. You can sort by any of the first level parameters from the resource response. *Response is sorted by the specified field.*
      required: false
      schema:
        type: string
      example: field_name
    sort_direction:
      name: sort_direction
      in: query
      description: Direction of sorting the response list.
      required: false
      schema:
        type: string
        enum:
          - ASC
          - DESC
      example: ASC
    searchMode:
      name: mode
      in: query
      description: |
        Mode of search results.

        *Possible values are: strict - return only 100% matching results / none - return results in strict mode*

        <p class="warning">⚠️ Caution: Strict mode makes all query parameters required. For a successful result you have to set all parameters.</p>
        <p class="warning">⚠️ Caution: Currently the whole resource is returning results only in strict mode.</p>
      required: false
      schema:
        type: string
        enum:
          - strict
          - none
      example: strict
    is_valid:
      name: is_valid
      in: query
      description: '*in validity range - true / before or after validity range - false / no value - all*'
      required: false
      schema:
        type: boolean
        enum:
          - true
          - false
      example: true
    valid_from:
      name: valid_from
      in: query
      description: Date from when is record already valid. *(YYYY-MM-DD)*
      required: false
      schema:
        type: string
      example: '2018-05-07'
    valid_from_full:
      name: valid_from
      in: query
      description: 'Date and time from when is record already valid. *(YYYY-MM-DD HH:MM:SS)*'
      required: false
      schema:
        type: string
      allowReserved: true
      example: '2018-05-07 23:59:59'
    valid_to:
      name: valid_to
      in: query
      description: Date to when is record still valid. *(YYYY-MM-DD)*
      required: false
      schema:
        type: string
      example: '2020-11-19'
    valid_to_full:
      name: valid_to
      in: query
      description: 'Date and time to when is record still valid. *(YYYY-MM-DD HH:MM:SS)*'
      required: false
      schema:
        type: string
      example: '2022-01-05 23:59:59'
    valid_now:
      name: valid_now
      in: query
      description: |
        Status validity. Just one status can be valid in the time.
        *Possible values are: True for valid status / False for status not valid*
      required: false
      schema:
        type: boolean
        enum:
          - true
          - false
      example: true
    valid_only:
      name: valid_only
      in: query
      description: |
        Time validity of the resource records.
        *Possible values are: true - returns only records valid in current moment / false - returns all records of the resource without time validation*
      required: false
      schema:
        type: boolean
        enum:
          - true
          - false
      example: true
    date_from:
      name: date_from
      in: query
      description: Date (ISO 8601) start of the time interval. *(YYYY-MM-DD)*
      required: false
      schema:
        type: string
      example: '2020-05-07'
    date_to:
      name: date_to
      in: query
      description: Date (ISO 8601) end of the time interval. *(YYYY-MM-DD)*
      required: false
      schema:
        type: string
      example: '2021-05-07'
    name:
      name: name
      in: query
      description: Search record by name or a part of the name.
      required: false
      schema:
        type: string
      example: Name
    value_type_id:
      name: value_type_id
      in: query
      description: 'Type of value (1 - percentage discount value, 2 - final price).'
      required: false
      schema:
        type: integer
        enum:
          - 1
          - 2
      example: 2
    external_id:
      name: external_id
      in: query
      required: false
      description: The ID from other system than CareCloud. It is usually used for the synchronization or identification of the record in between CareCloud and other system. The ID doesn't need to be necessary unique. Usage of other parameter could be required to return more specific results.
      schema:
        type: string
      example: '18'
    external_ids:
      name: external_ids
      in: query
      required: false
      description: The list of IDs from other system than CareCloud. It is usually used for the synchronization or identification of the records in between CareCloud and other system. The IDs don't need to be necessary unique. Usage of other parameter could be required to return more specific results.
      schema:
        type: array
        items:
          type: string
      example: ACSDOIDF23
    tag_id_arr:
      name: tag_ids
      in: query
      required: false
      description: Parameter filters values by a list of tag IDs. Logic OR is used between values.
      schema:
        type: array
        items:
          type: string
    time_from_full:
      name: time_from
      in: query
      description: 'Filter results on the start of the time interval. *(YYYY-MM-DD HH:MM:SS)*'
      required: false
      schema:
        type: string
      allowReserved: true
      example: '2018-05-07 23:59:59'
    time_to_full:
      name: time_to
      in: query
      description: 'Filter results on the end of the time interval. *(YYYY-MM-DD HH:MM:SS)*'
      required: false
      schema:
        type: string
      allowReserved: true
      example: '2018-05-07 23:59:59'
    include_property_records:
      name: include_property_records
      schema:
        type: boolean
        enum:
          - true
          - false
      in: query
      description: 'If true, the property record structure will be included in the response. Possible values: true - property records structure will be included / false or not set - property records structure won''t be included, and parameter will return null value'
      example: true
    user_id_path:
      name: user_id
      in: path
      required: true
      description: The unique ID of the user.
      schema:
        type: string
      example: 898a6545ed2bfa3f8466d09bc6
    user_role_id_path:
      name: user_role_id
      in: path
      required: true
      description: The unique ID of the user role.
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    email:
      name: email
      in: query
      description: Search by email.
      required: false
      schema:
        type: string
      example: happy_customer@crmcarecloud.com
    email_list:
      name: email_list
      in: query
      required: false
      description: List of the email addresses of the customers.
      schema:
        type: array
        items:
          type: string
      example: happy_customer@crmcarecloud.com
    phone:
      name: phone
      in: query
      description: Phone number with international prefix (420000000).
      required: false
      schema:
        type: string
      example: '420523828931'
    login:
      name: login
      in: query
      description: Search by login.
      required: false
      schema:
        type: string
      example: happy_user
    first_name:
      name: first_name
      in: query
      description: Search by first name.
      required: false
      schema:
        type: string
      example: John
    last_name:
      name: last_name
      in: query
      description: Search by last name.
      required: false
      schema:
        type: string
      example: Smith
    birthdate:
      name: birthdate
      in: query
      description: 'Customer''s date of birth. *Possible values are: YYYY-MM-DD / DD.MM.YYYY*'
      required: false
      schema:
        type: string
      example: 985-02-12
    agreement_id_path:
      name: agreement_id
      in: path
      required: true
      description: The unique ID of an agreement in CareCloud.
      schema:
        type: string
      example: 81eaeea13b8984a169c490a325
    booking_id_path:
      name: booking_id
      in: path
      description: The unique ID of the booking.
      required: true
      schema:
        type: string
      example: 13b8984a16913b8984a169cc490a
    booking_ticket_property_id_path:
      name: booking_ticket_property_id
      in: path
      description: The unique ID of the booking ticket property.
      required: true
      schema:
        type: string
      example: place
    booking_ticket_id_path:
      name: booking_ticket_id
      in: path
      description: The unique ID of the booking ticket.
      required: true
      schema:
        type: string
      example: 13b8984a16913b8984a169cc490a
    booking_status_id_path:
      name: booking_status_id
      in: path
      description: The unique ID of the booking status.
      required: true
      schema:
        type: string
      example: 13b8984a16913b8984a169cc490a
    free_capacity_only:
      name: free_only
      in: query
      description: |
        Parameter defines what kind of time slots is going to be return depends on the capacity.
        *Possible values: true - returns all time slots with free capacity. / false - returns all occupied time slots. / no value - all time slots are returned (filter is not applied)*
      required: false
      schema:
        type: boolean
        enum:
          - true
          - false
      example: true
    add_booking_items:
      name: add_booking_items
      in: query
      description: |
        Booking items are going to be return depends on the parameter value.
        *Possible values: full - returns all booking items with their additional properties. / items-only - returns all booking items without additional properties. / none or no value - return no booking items*
      required: false
      schema:
        type: string
        enum:
          - full
          - items-only
          - none
        default: none
      example: items-only
    booking_ticket_property_id:
      name: booking_ticket_property_id
      in: query
      required: false
      description: 'Booking ticket property ID from resource [booking-ticket-properties](https://carecloud.readme.io/reference/getbookingticketproperties). The parameter determines property, which is used to filter resources by their properties. The parameter must be used in combination with property_value otherwise is ignored in the request.'
      schema:
        type: string
      example: store
    booking_ticket_property_value:
      name: booking_ticket_property_value
      in: query
      required: false
      description: 'Booking ticket property record value from [booking-ticket-properties](https://carecloud.readme.io/reference/getbookingticketproperties) in case of datatype with multiple values. Parameter filters resources depends of store property record value. The parameter must be used in combination with property_id otherwise is ignored in the request.'
      schema:
        type: string
      example: 89ac83ca207a20c62c79bf
    booking_status:
      name: booking_status
      deprecated: true
      in: query
      required: false
      schema:
        type: string
      description: 'This query parameter is deprecated, please use parameter `booking_statuses`.'
      example: a820c6a820c62c79b2c79b
    booking_statuses:
      name: booking_statuses
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: 'List of current statuses of the bookings from resource [booking-statuses](#tag/Booking-statuses).'
      example: a820c6a820c62c79b2c79b
    communication_channel_id_path:
      name: communication_channel_id
      in: path
      description: The unique ID of the communication channel.
      required: true
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    country_id:
      name: country_id
      in: query
      description: The unique ID of a country represented by ISO code.
      required: false
      schema:
        type: string
      example: fi
    country_name:
      name: country_name
      in: query
      description: Name or part of the name of the country you looking for.
      required: false
      schema:
        type: string
      example: Finland
    credit_id_path:
      name: credit_id
      in: path
      description: The unique ID of the credit record.
      required: true
      schema:
        type: string
      example: 8bcd4f6d0e1432tfc472632e1d
    credit_type_id_path:
      name: credit_type_id
      in: path
      description: The unique ID of a credit type.
      required: true
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    credit_type_id:
      name: credit_type_id
      in: query
      description: The unique ID of a credit type.
      required: false
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    create_credit_time_from:
      name: create_credit_time_from
      in: query
      description: 'Date and time from of the create credit record. *(YYYY-MM-DD HH:MM:SS)*'
      required: false
      schema:
        type: string
      allowReserved: true
      example: '2015-01-05 1:00:00'
    create_credit_time_to:
      name: create_credit_time_to
      in: query
      description: 'Date and time to of the create credit record. *(YYYY-MM-DD HH:MM:SS)*'
      required: false
      schema:
        type: string
      allowReserved: true
      example: '2020-01-05 1:00:00'
    credit_operation_type:
      name: credit_operation_type
      in: query
      description: Search record by the operation type name or a part of the operation type name.
      required: false
      schema:
        type: string
      example: Voucher purch
    credit_operation_note:
      name: credit_operation_note
      in: query
      description: Search record by the operation note or a part of the operation note.
      required: false
      schema:
        type: string
      example: Free one day
    currency_code:
      name: currency_code
      in: query
      description: The unique code of a currency represented by ISO code.
      required: false
      schema:
        type: string
      example: USD
    currency_name:
      name: currency_name
      in: query
      description: Name or part of the name of the currency you looking for.
      required: false
      schema:
        type: string
      example: United States dollar
    customer_id_path:
      name: customer_id
      in: path
      required: true
      description: The unique ID of the customer.
      schema:
        type: string
      example: 8ea2591121e636086a4a9c0992
    customer_id:
      name: customer_id
      in: query
      required: false
      description: The unique ID of the customer.
      schema:
        type: string
      example: 8ea2591121e636086a4a9c0992
    customer_ids:
      name: customer_ids
      in: query
      required: false
      description: List of the customer IDs.
      schema:
        type: array
        items:
          type: string
      example: 8bed991c68a470e7aaeffbf048
    related_customer_id:
      name: related_customer_id
      in: query
      required: false
      description: The unique ID of the related customer.
      schema:
        type: string
      example: 87af991126405bf8e7dfb36045
    customer_id_required:
      name: customer_id
      in: query
      required: true
      description: The unique ID of the customer.
      schema:
        type: string
      example: 8ea2591121e636086a4a9c0992
    customer_external_id:
      name: external_id
      in: query
      required: false
      description: 'The parameter contains a unique ID from an external system (POS, webshop,  mobile app, ERP, and others ). ID should be unique within a customer source for better identification (For example, the process of customer synchronization between systems).'
      schema:
        type: string
      example: A798274529
    customer_source_id:
      name: customer_source_id
      in: query
      required: false
      description: The unique ID of the customer source. It identifies the system where the customer belongs or the customer account was created.
      schema:
        type: string
      example: 8fdce3475560d56e95a6ab035
    customer_source_text_id:
      name: customer_source_text_id
      in: query
      required: false
      description: The unique text representation of the ID of the customer source. It identifies the system where the customer belongs or the customer account was created.
      schema:
        type: string
      example: webshop_registration
    customer_type_id_arr:
      name: customer_type_id
      in: query
      required: false
      description: Select by list of customer types from customer-types resource. Logic OR is used between values.
      schema:
        type: array
        items:
          type: string
    customer_source_id_path:
      name: customer_source_id
      in: path
      required: true
      description: The unique ID of the customer source. It identifies the system where the customer belongs or the customer account was created.
      schema:
        type: string
      example: 8fdce3475560d56e95a6ab035
    customer_type_id_path:
      name: customer_type_id
      in: path
      required: true
      description: The unique ID of a customer type in CareCloud.
      schema:
        type: string
      example: 86e05afc7a7abefcd513ab400
    customer_address_type_id_path:
      name: customer_address_type_id
      in: path
      required: true
      description: The unique ID of a customer address type in CareCloud.
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    customer_address_type_id:
      name: customer_address_type_id
      in: query
      required: false
      description: The unique ID of the customer address type.
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    additional_customer_address_id_path:
      name: additional_customer_address_id_path
      in: path
      required: true
      description: Unique ID of the customer additional address.
      schema:
        type: string
        example: 86e05affc7a7abefcd513ab400
    customer_short_salutation:
      name: customer_short_salutation
      in: query
      required: false
      description: 'If true, the response will set a short salutation instead of a long one. Short salutations contain the first name of the customer only. If the parameter has a value false or not set, the full salutation is returned in response.'
      schema:
        type: boolean
      example: false
    card_id_path:
      name: card_id
      in: path
      description: The unique ID of the card.
      required: true
      schema:
        type: string
      example: 81eaeea13b8984a169c490a325
    card_type_id_path:
      name: card_type_id
      in: path
      description: The unique ID of the card type.
      required: true
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    card_number:
      name: card_number
      in: query
      description: Number of the customer card.
      required: false
      schema:
        type: string
      example: '1000000000016'
    card_number_list:
      name: card_number_list
      in: query
      required: false
      description: 'List of the card numbers. If used, a list of cards will be returned if matching card numbers in CareCloud.'
      schema:
        type: array
        items:
          type: string
      example: '1000000000016'
    card_type_id:
      name: card_type_id
      in: query
      description: The unique ID of the card type.
      required: false
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    state:
      name: state
      in: query
      description: |
        State of the customer. *Possible values are: 0 - deleted / 1 - active / 2 - non active*
      required: false
      schema:
        type: integer
        enum:
          - 0
          - 1
          - 2
      example: 1
    search_secondary_card_number:
      name: search_secondary_card_number
      in: query
      description: |
        Include secondary card numbers in search for filters `card_number` and `card_number_list`.
        *Possible values: true - CareCloud API search only secondary card numbers / false - CareCloud API search only card numbers / default behavior without parameter - CareCloud API search only card numbers*
      required: false
      schema:
        type: boolean
        enum:
          - true
          - false
      example: false
    property_record_id_path:
      name: property_record_id
      in: path
      required: true
      description: The unique ID of the property record.
      schema:
        type: string
      example: 'docasna_blokace_darce_do:8ea2591121e636086a4a9c0992'
    interest_record_id_path:
      name: interest_record_id
      in: path
      required: true
      description: The unique ID of the interest record.
      schema:
        type: string
      example: 87d934c86a6303f5fb4d1214fb
    voucher_id_path:
      name: voucher_id
      in: path
      description: The unique ID of the voucher.
      required: true
      schema:
        type: string
      example: 82d0f9d976dee39aacd13dc7ea
    is_applied:
      name: is_applied
      in: query
      description: |
        Filter by voucher application and reservation.
        *Possible values: true - all applied or reserved vouchers / false - all vouchers that have not been applied yet or that are not reserved actually / no value - all vouchers*
      required: false
      schema:
        type: boolean
        enum:
          - true
          - false
      example: true
    voucher_code:
      name: code
      in: query
      description: Unique code of the voucher.
      required: false
      schema:
        type: string
      allowReserved: true
      example: w7TU7KfeE
    voucher_property_id_path:
      name: voucher_property_id
      in: path
      description: The unique ID of the voucher property.
      required: true
      schema:
        type: string
      example: id_produktu_v_dwh
    reward_id_path:
      name: reward_id
      in: path
      description: The unique ID of the reward.
      required: true
      schema:
        type: string
      example: 8fd73167342d06899c4c015320
    reward_property_id_path:
      name: reward_property_id
      in: path
      description: The unique ID of the reward property.
      required: true
      schema:
        type: string
      example: subtitle
    reward_code:
      name: code
      in: query
      description: Code of the reward.
      required: false
      schema:
        type: string
      allowReserved: true
      example: PTV120
    reward_type_id:
      name: reward_type_id
      in: query
      description: 'The type of reward describes the reward behavior. For example, a Percentage discount, Buy one + get one discounted product, and others.'
      required: false
      schema:
        type: string
      example: 8aa2049ac2f84952014d96bb23
    reward_type_id_path:
      name: reward_type_id
      in: path
      description: The unique ID of the reward.
      required: true
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    is_automated:
      name: is_automated
      in: query
      description: |
        Filter of the automated rewards.
        *Possible values: true - returns all automated rewards / false - returns all non automated rewards / no value - all rewards(filter is not applied)*
      required: false
      schema:
        type: boolean
        enum:
          - true
          - false
      example: true
    reward_group:
      name: reward_group
      in: query
      description: |
        The unique ID of the reward group.
        *Possible values: 0 - cash desk reward (party time reward) / 1 - catalog reward / 2 - campaign reward / 4 - simple reward*
      required: false
      schema:
        type: integer
        enum:
          - 0
          - 1
          - 2
          - 4
      example: 1
    without_stores:
      name: without_stores
      in: query
      description: 'If true, the data will not contain information about business units (stores). If false, or not set resource returns default structure.'
      required: false
      schema:
        type: boolean
        enum:
          - true
          - false
      example: true
    reward_store_id:
      name: store_id
      in: query
      description: The unique ID of the store where customer can apply the reward.
      required: false
      schema:
        type: string
      example: 81eaeea13b8984a169c490a325
    customer_external_application_id_path:
      name: customer_external_application_id
      in: path
      description: The unique ID of a customer external application in CareCloud.
      required: true
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    customer_property_id_path:
      name: customer_property_id
      in: path
      description: The unique ID of the customer property.
      required: true
      schema:
        type: string
      example: profession
    customer_relation_id_path:
      name: customer_relation_id
      in: path
      description: The unique ID of relation between two customers in CareCloud.
      required: true
      schema:
        type: string
      example: 81eaeea13b8984a169c490a325
    customer_relation_type_id_path:
      name: customer_relation_type_id
      in: path
      description: The unique ID of a customer relation type in CareCloud.
      required: true
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    customer_relation_type_id:
      name: customer_relation_type_id
      in: query
      description: The unique ID of the customer relation type in CareCloud.
      required: false
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    campaign_id_path:
      name: campaign_id
      in: path
      description: The unique ID of the campaign in CareCloud.
      required: true
      schema:
        type: string
      example: 81eaeea13b8984a169c490a325
    display_in:
      name: display_in
      in: query
      description: Place to display campaign product.
      required: false
      schema:
        type: string
        enum:
          - web
          - cash desk
          - api
      example: api
    type_id:
      name: type_id
      in: query
      description: Type of the customer for a campaign product.
      required: false
      schema:
        type: array
        items:
          type: string
    campaign_store_id:
      name: store_id
      in: query
      description: 'Parameter filters all campaign products from [store](#tag/Stores) by store ID.'
      required: false
      schema:
        type: string
      example: 8fd7316732d06899c4c015320
    campaign_product_id_path:
      name: campaign_product_id
      in: path
      description: The unique ID of the campaign product in CareCloud.
      required: true
      schema:
        type: string
      example: 81eaeea13b8984a169c490a325
    currency_id_path:
      name: currency_id
      in: path
      description: The unique ID of a currency in CareCloud.
      required: true
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    event_id_path:
      name: event_id
      in: path
      description: The unique ID of the event.
      required: true
      schema:
        type: string
      example: 82de12eb8b138791e678fd11c3
    event_type_id:
      name: event_type_id
      in: query
      description: The unique ID of the event type.
      required: false
      schema:
        type: string
      example: 8bda8a4854394325e2748a5005
    event_type_ids:
      name: event_type_ids
      in: query
      required: false
      description: 'List of the event type IDs from the resource [GET /event-types](https://carecloud.readme.io/reference/geteventtypes).'
      schema:
        type: array
        items:
          type: string
      example: 8bda8a4854394325e2748a5005
    text_id:
      name: text_id
      in: query
      description: Text ID of an event group.
      required: false
      schema:
        type: string
      example: shopping_cart
    event_group_id_path:
      name: event_group_id
      in: path
      description: The unique ID of the event group.
      required: true
      schema:
        type: string
      example: 8bd253a890067595008f1d44aa
    event_property_id_path:
      name: event_property_id
      in: path
      description: The unique ID of the event property.
      required: true
      schema:
        type: string
      example: account_registration_contact_source
    event_type_id_path:
      name: event_type_id
      in: path
      description: The unique ID of the event type.
      required: true
      schema:
        type: string
      example: 8bda8a4854394325e2748a5005
    interest_id_path:
      name: interest_id
      in: path
      description: The unique ID of the interest.
      required: true
      schema:
        type: string
      example: 81eaeea13b8984a169c490a325
    language_list_type:
      name: language_list_type
      in: query
      description: 'Type of language list. All lists can be managed from the CareCloud administration interface. *Possible values: customer-communication - list of languages used for communication with the customer (emails, notifications or text messages) / web-portal - list of languages for CareCloud web portal / carecloud-api - languages supported by CareCloud REST API (API communicates in these languages).*'
      required: false
      schema:
        type: string
        enum:
          - carecloud-api
          - web-portal
          - customer-communication
        default: carecloud-api
      example: customer-communication
    message_id_path:
      name: message_id
      in: path
      description: The unique ID of the message.
      required: true
      schema:
        type: string
      example: 8fd73167342d06899c4c015320
    message_template_id_path:
      name: message_template_id
      in: path
      description: The unique ID of the message template.
      required: true
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    contact:
      name: contact
      in: query
      description: Email of phone number that was used as a contact in message.
      required: false
      schema:
        type: string
      allowReserved: true
      example: happy_customer@crmcarecloud.com
    communication_channel_id:
      name: communication_channel_id
      in: query
      description: 'The unique ID of the communication channel. List of values is available in resource [GET /communication-channels](/#tag/Communication-channels).'
      required: false
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    send_time_from:
      name: send_time_from
      in: query
      description: 'Start date and time of the time interval. *YYYY-MM-DD HH:MM:SS*'
      required: false
      schema:
        type: string
      allowReserved: true
      example: '2015-01-05 1:00:00'
    send_time_to:
      name: send_time_to
      in: query
      description: 'End date and time of the time interval. *YYYY-MM-DD HH:MM:SS*'
      required: false
      schema:
        type: string
      allowReserved: true
      example: '2015-01-05 23:59:00'
    order_id_path:
      name: order_id
      in: path
      description: The unique ID of the order.
      required: true
      schema:
        type: string
      example: 8bed991c68a470e7aabed9e048
    partner_id_path:
      name: partner_id
      in: path
      description: The unique ID of the partner.
      required: true
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    partner_id:
      name: partner_id
      in: query
      required: false
      description: 'Unique ID of the partner from the resource [GET /partners](/#tag/Partners).'
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    partner_record_id_path:
      name: partner_record_id
      in: path
      description: The unique ID of the partner record from account.
      required: true
      schema:
        type: string
      example: 88bd53f8ac5f3b595d6bc106a4
    partner_property_id_path:
      name: partner_property_id
      in: path
      description: The unique ID of the partner property.
      required: true
      schema:
        type: string
      example: direct_contact
    payment_type_id_path:
      name: payment_type_id
      in: path
      description: The unique ID of the payment type.
      required: true
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    point_id_path:
      name: point_id
      in: path
      description: The unique ID of the point record.
      required: true
      schema:
        type: string
      example: 8bd48117006496e0b1788109b8
    point_reservation_id_path:
      name: point_reservation_id
      in: path
      description: The unique ID of the point reservations.
      required: true
      schema:
        type: string
      example: 8fd73167342d06899c4c015320
    point_type_id_path:
      name: point_type_id
      in: path
      description: The unique ID of a point type.
      required: true
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    point_type_id:
      name: point_type_id
      in: query
      description: The unique ID of a point type.
      required: false
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    create_point_time_from:
      name: create_point_time_from
      in: query
      description: 'Date and time from of the create point record. *(YYYY-MM-DD HH:MM:SS)*'
      required: false
      schema:
        type: string
      allowReserved: true
      example: '2021-01-01 12:00:00'
    create_point_time_to:
      name: create_point_time_to
      in: query
      description: 'Date and time to of the create point record. *(YYYY-MM-DD HH:MM:SS)*'
      required: false
      schema:
        type: string
      allowReserved: true
      example: '2023-01-01 12:00:00'
    pointRes_external_id:
      name: external_id
      in: query
      description: The external ID of the point reservation.
      required: false
      schema:
        type: string
      example: '123459'
    point_operation_type:
      name: point_operation_type
      in: query
      description: Search record by the operation type name or a part of the operation type name.
      required: false
      schema:
        type: string
      example: Voucher purchase
    point_operation_note:
      name: point_operation_note
      in: query
      description: Search record by the operation note or a part of the operation note.
      required: false
      schema:
        type: string
      example: Free one day
    product_id_path:
      name: product_id
      in: path
      description: The unique ID of the product.
      required: true
      schema:
        type: string
      example: 82db62087b0f79a6e14e5747e7
    reservable_product_id_path:
      name: reservable_product_id
      in: path
      description: The unique ID of the reservable product.
      required: true
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    product_brand_id_path:
      name: product_brand_id
      in: path
      description: The unique ID of the product brand.
      required: true
      schema:
        type: string
      example: 83d1d11ea3884a5d33253fe214
    product_group_id_path:
      name: product_group_id
      in: path
      description: The unique ID of the product group.
      required: true
      schema:
        type: string
      example: 8fd73167342d06899c4c015320
    product_property_id_path:
      name: product_property_id
      in: path
      description: The unique ID of the product property.
      required: true
      schema:
        type: string
      example: for_recommendation_engine
    product_reservation_id_path:
      name: product_reservation_id
      in: path
      description: The unique ID of the product reservation.
      required: true
      schema:
        type: string
      example: 81d503b99cc748b3ca189383ad
    product_reservation_source_id_path:
      name: product_reservation_source_id
      in: path
      description: The unique ID of the product reservation source in CareCloud.
      required: true
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    product_id:
      name: product_id
      in: query
      description: ID of the product.
      required: false
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    product_code:
      name: code
      in: query
      description: Code of the product.
      required: false
      schema:
        type: string
      example: '649'
    product_group_code:
      name: code
      in: query
      description: Code of the product group.
      required: false
      schema:
        type: string
      example: '649'
    external_type_code:
      name: external_type_code
      in: query
      description: 'Every product can have more than one external ID depends of the business requirements. This parameter allows to pick from witch list of external IDs you want to choose. For the list of external type codes please contact you account manager. If the parameter is not set, API uses as a default value GLOBAL.'
      required: false
      schema:
        type: string
      example: GLOBAL
    external_reservation_code:
      name: external_reservation_code
      in: query
      description: 'Code of the reservation from external system (cash-desk, web-shop, production system, others). If set, `external_reservation_list_type_id` has to be present in request too.'
      required: false
      schema:
        type: string
      example: XYSD78TFDA
    external_reservation_list_type_id:
      name: external_reservation_list_type_id
      in: query
      description: 'Every reservation can have more than one external code depends of the business requirements. This parameter allows to pick from witch list of external codes you want to choose. If set, `external_reservation_code` has to be present in request too.'
      required: false
      schema:
        type: string
        example: 8bc3btbb6f14765b3025cea06c
    product_reservation_external_list_type_id_path:
      name: product_reservation_external_list_type_id
      in: path
      description: Every reservation can have more than one external code depends of the business requirements. This parameter allows to pick from witch list of external codes you want to choose.
      required: true
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    product_reservation_external_list_type_name:
      name: name
      in: query
      description: Name of the External list type
      required: false
      schema:
        type: string
        example: VIP
    reservation_state:
      name: reservation_state
      in: query
      description: |
        Current state of the product reservation.
        *Possible values: 0 - Canceled / 1 - Entered / 2 - Accepted / 3 - Ready / 4 - Delivered / 5 - In progress / 6 - Not Picked up / 7 - Ordered / 8 - Being solved /*
      required: false
      schema:
        type: integer
        enum:
          - 0
          - 1
          - 2
          - 2
          - 4
          - 5
          - 6
          - 7
          - 8
      example: 2
    purchase_id_path:
      name: purchase_id
      in: path
      description: The unique ID of the purchase.
      required: true
      schema:
        type: string
      example: 8bd62e6ba18b3c791a9402cf3e
    external_purchase_id:
      name: external_purchase_id
      in: query
      description: 'ID of the purchase from external (e-shop, POS) system. This ID should have unique value.'
      required: false
      schema:
        type: string
      example: ZXA321FSWO1
    purchase_type_id:
      name: type_id
      in: query
      description: Purchase type
      required: false
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    payment_time_from:
      name: payment_time_from
      in: query
      description: 'Date and time from of the purchase payment. *(YYYY-MM-DD HH:MM:SS)*'
      required: false
      schema:
        type: string
      allowReserved: true
      example: '2021-01-05 00:00:00'
    payment_time_to:
      name: payment_time_to
      in: query
      description: 'Date and time to of the purchase payment. *(YYYY-MM-DD HH:MM:SS)*'
      required: false
      schema:
        type: string
      allowReserved: true
      example: '2021-10-01 23:59:00'
    purchase_items_extension:
      name: purchase_items_extension
      in: query
      description: 'If true, resource returns extended response with purchase items. If false, the resource won''t be extended. If the parameter is not set, the default value is false.'
      required: false
      schema:
        type: boolean
        enum:
          - true
          - false
        default: false
    recommendation_id_path:
      name: recommendation_id
      in: path
      description: The unique ID of a recommendation.
      required: true
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    segment_id_path:
      name: segment_id
      in: path
      required: true
      description: The unique ID of the segment.
      schema:
        type: string
      example: 82de12eb8b138791e678fd11c3
    segment_group_id_path:
      name: segment_group_id
      in: path
      required: true
      description: The unique ID of the segment group.
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    segment_group_ids:
      name: segment_group_ids
      in: query
      required: false
      description: 'List of the segment group IDs from the resource [GET /segment-groups](#tag/Segments/operation/getSegmentGroups).'
      schema:
        type: array
        items:
          type: string
      example: 8bed991c68a470e7aaeffbf048
    segment_group_name:
      name: name
      in: query
      required: false
      description: Name of the segment group.
      schema:
        type: string
      example: Badges
    entrance_id_path:
      name: entrance_id
      in: path
      description: The unique ID of the charged entrance.
      required: true
      schema:
        type: string
      example: 80a7be2e78aabc1454ca817265
    pos_id:
      name: pos_id
      in: query
      required: false
      description: 'ID of POS system for tickets. Required with path parameter entrance ID. *Possible values are: EPOS - 3 / skidata - 6 / axess - 9 / base - 11*'
      schema:
        type: integer
        enum:
          - 3
          - 6
          - 9
          - 11
    external_order_id:
      name: external_order_id
      in: query
      required: false
      description: ID of an external order created in POS system.
      schema:
        type: string
      example: a23b908eacd2442198e9ab
    entrance_name:
      name: name
      in: query
      required: false
      description: Name of the charged entrance (product name is used from resource products).
      schema:
        type: string
      example: 1 day ticket
    resort_name:
      name: resort_name
      in: query
      required: false
      description: Name of the resort where is an entrance charged.
      schema:
        type: string
      example: Jasná
    customer_category_name:
      name: customer_category_name
      in: query
      required: false
      description: Name of the customer category.
      schema:
        type: string
      example: Adult
    entrance_card_id:
      name: card_id
      in: query
      required: false
      description: ID of a card used for charging entrance.
      schema:
        type: string
      example: 8c97533b621490a0b211419086
    entrance_type_id:
      name: entrance_type_id
      in: query
      required: false
      description: |
        Type of the entrance.
        *Possible values are: season ticket - 0/ one day ticket -1/ multiple day ticket - 2*
      schema:
        type: integer
        enum:
          - 0
          - 1
          - 2
      example: 1
    entrance_state:
      name: state
      in: query
      required: false
      description: 'State of the entrance. *Possible values are: canceled entrance - 0 / valid entrance -1*'
      schema:
        type: integer
        enum:
          - 0
          - 1
      example: 1
    external_entrance_id:
      name: external_entrance_id
      in: query
      required: false
      description: 'External ID of the entrance. Structure can be different depends of POS system, that created entrance.'
      schema:
        type: string
    external_turnstile_permission_id:
      name: external_turnstile_permission_id
      in: query
      required: false
      description: 'External ID of the turnstile permission. Structure can be different depends of the POS system, that created the permission.'
      schema:
        type: string
    is_cancelled:
      name: is_cancelled
      in: query
      required: false
      description: |
        Filter for canceled entrances.
        *Possible values: true - all cancelled entrances / false - all non cancelled entrances / no value - all entrances*
      schema:
        type: boolean
        enum:
          - true
          - false
      example: false
    status_id_path:
      name: status_id
      in: path
      description: The unique ID of the status.
      required: true
      schema:
        type: string
      example: 86e05affc7a7abefcd513ab400
    store_id_path:
      name: store_id
      in: path
      description: The unique ID of the store in CareCloud.
      required: true
      schema:
        type: string
      example: 81eaeea13b8984a169c490a325
    store_group_id_path:
      name: store_group_id
      in: path
      description: The unique ID of the store group.
      required: true
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    store_property_id_path:
      name: store_property_id
      in: path
      description: The unique ID of the store property.
      required: true
      schema:
        type: string
      example: poskytovane_sluzby
    store_id:
      name: store_id
      in: query
      description: The unique ID of the store in CareCloud.
      required: false
      schema:
        type: string
      example: 81eaeea13b8984a169c490a325
    store_system_id:
      name: system_id
      in: query
      description: 'The unique ID of the store in external system (e-shop, POS, etc.)'
      required: false
      schema:
        type: string
      example: '1118384954'
    visible_for_customer:
      name: visible_for_customer
      in: query
      description: 'State of the visibility of the customer. *Possible values are: 0 - invisible / 1- visible. If query string is not used, return both.*'
      required: false
      schema:
        type: integer
        enum:
          - 0
          - 1
      example: 1
    property_id:
      name: property_id
      in: query
      required: false
      description: 'Store property ID from resource [store-properties](#tag/Store-properties). The parameter determines property, which is used to filter stores by their properties. The parameter must be used in combination with property_value otherwise is ignored in the request.'
      schema:
        type: string
      example: provided_services
    property_value:
      name: property_value
      in: query
      required: false
      description: 'Store property record value from resource [/stores/{store_id}/property-records](#operation/getSubStoreProperties) or [store-properties](#tag/Store-properties) in case of datatype with multiple values. Parameter filters stores depends of store property record value. The parameter must be used in combination with property_id otherwise is ignored in the request.'
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    task_id_path:
      name: task_id
      in: path
      required: true
      description: The unique ID of the task in CareCloud.
      schema:
        type: string
        example: 8bed991c68a470e7aaeffbf048
    task_type_id_path:
      name: task_type_id
      in: path
      required: true
      description: The unique ID of the task type in CareCloud.
      schema:
        type: string
        example: 8bed991c68a470e7aaeffbf048
    task_state_id_path:
      name: task_state_id
      in: path
      required: true
      description: The unique ID of the task state in CareCloud.
      schema:
        type: string
        example: 86e05affc7a7abefcd513ab400
    task_assignee_id_path:
      name: assignee_id
      in: path
      required: true
      description: The unique ID of the task assignee in CareCloud.
      schema:
        type: string
        example: 81eaeea13b8984a169c490a325
    task_state_id:
      name: task_state_id
      in: query
      required: false
      description: 'Task state ID from the resource [task-states](#tag/Task-states). The parameter filters tasks by their state.'
      schema:
        type: string
        example: 86e05affc7a7abefcd513ab400
    task_type_id:
      name: task_type_id
      in: query
      required: false
      description: 'Task type ID from the resource [task-types](#tag/Task-states). The parameter filters tasks by their type.'
      schema:
        type: string
        example: 8bed991c68a470e7aaeffbf048
    task_priority:
      name: priority
      in: query
      required: false
      description: 'The parameter filters tasks by their priority. *Possible values are: 1 - Critical / 2 - Major / 3 - Normal / 4 - Minor.*'
      schema:
        type: integer
        enum:
          - 1
          - 2
          - 3
          - 4
      example: 3
    task_due_date:
      name: due_date
      in: query
      description: Date (ISO 8601) when the task due. *(YYYY-MM-DD)*
      required: false
      schema:
        type: string
      example: '2021-05-07'
    task_note:
      name: task_note
      in: query
      description: Search record by the task note or a part of the task note.
      required: false
      schema:
        type: string
      example: Customer needs his invoice for last purchase.
    task_title:
      name: task_title
      in: query
      description: Search record by the task summary or a part of the task summary.
      required: false
      schema:
        type: string
      example: Customer invoice
    task_comment_text:
      name: task_comment_text
      in: query
      description: Search record by the task comment text or a part of the task comment text.
      required: false
      schema:
        type: string
      example: Could you please confirm your choice?
    task_comment_id_path:
      name: task_comment_id
      in: path
      required: true
      description: The unique ID of the task comment in CareCloud.
      schema:
        type: string
        example: 8bed991c68a470e7aaeffbf048
    task_property_id_path:
      name: task_property_id
      in: path
      description: The unique ID of the task property.
      required: true
      schema:
        type: string
      example: p1_communication_reasons
    test_string:
      name: test_string
      in: query
      required: false
      description: A test string sends to REST API. Correct result should revert the string.
      schema:
        type: string
      example: taco cat
    token_id_path:
      name: token_id
      in: path
      description: A client application token.
      required: true
      schema:
        type: string
      example: d9aacfc5eebfae1e9fdc7f20694c2ca105dff986f1b8176a6740c027db56a325913f
    external_application_id:
      name: external_application_id
      in: query
      required: true
      description: 'ID of external application. For ID of external application, please contact your account manager or look to resource [customer-external-applications](#tag/Customer-external-applications).'
      schema:
        type: string
      example: 8bed991c68a470e7aaeffbf048
    token_type:
      name: token_type
      in: query
      required: true
      description: 'Parameter set witch token type should be generated. *Possible values: 1- alphanumeric, 2- numeric*'
      schema:
        type: integer
        enum:
          - 1
          - 2
        default: 1
      example: 2
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: |
        ## HTTP Bearer authentication
        Get a closer look in [Authentication section](https://carecloud.readme.io/reference/authentication)
    basicAuth:
      type: http
      scheme: basic
